{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/hashed/lib/util.js","webpack:///./node_modules/rbush/index.js","webpack:///./node_modules/hashed/lib/index.js","webpack:///./node_modules/util/util.js","webpack:///./node_modules/hashed/lib/serializers.js","webpack:///./node_modules/colormap/index.js","webpack:///./node_modules/ol/ol.css?05fa","webpack:///./node_modules/ol/ol.css","webpack:///./node_modules/css-loader/dist/runtime/api.js","webpack:///./node_modules/style-loader/lib/addStyles.js","webpack:///./node_modules/style-loader/lib/urls.js","webpack:///./node_modules/hashed/lib/store.js","webpack:///./node_modules/hashed/lib/schema.js","webpack:///./node_modules/hashed/lib/field.js","webpack:///./node_modules/process/browser.js","webpack:///./node_modules/util/support/isBufferBrowser.js","webpack:///./node_modules/inherits/inherits_browser.js","webpack:///./node_modules/hashed/lib/deserializers.js","webpack:///./node_modules/hashed/lib/hash.js","webpack:///./node_modules/colormap/colorScale.js","webpack:///./node_modules/lerp/index.js","webpack:///./node_modules/quickselect/quickselect.js","webpack:///./node_modules/ol/functions.js","webpack:///./node_modules/ol/obj.js","webpack:///./node_modules/ol/events.js","webpack:///./node_modules/ol/events/Event.js","webpack:///./node_modules/ol/events/EventType.js","webpack:///./node_modules/ol/util.js","webpack:///./node_modules/ol/events/Target.js","webpack:///./node_modules/ol/ObjectEventType.js","webpack:///./node_modules/ol/Disposable.js","webpack:///./node_modules/ol/Observable.js","webpack:///./node_modules/ol/Object.js","webpack:///./node_modules/ol/easing.js","webpack:///./node_modules/ol/interaction/Property.js","webpack:///./node_modules/ol/interaction/Interaction.js","webpack:///./node_modules/ol/AssertionError.js","webpack:///./node_modules/ol/asserts.js","webpack:///./node_modules/ol/math.js","webpack:///./node_modules/ol/geom/GeometryType.js","webpack:///./node_modules/ol/extent/Corner.js","webpack:///./node_modules/ol/extent/Relationship.js","webpack:///./node_modules/ol/extent.js","webpack:///./node_modules/ol/proj/Units.js","webpack:///./node_modules/ol/proj/Projection.js","webpack:///./node_modules/ol/proj/epsg3857.js","webpack:///./node_modules/ol/proj/epsg4326.js","webpack:///./node_modules/ol/proj/projections.js","webpack:///./node_modules/ol/proj/transforms.js","webpack:///./node_modules/ol/proj.js","webpack:///./node_modules/ol/interaction/DragAndDrop.js","webpack:///./node_modules/ol/Feature.js","webpack:///./node_modules/ol/format/Feature.js","webpack:///./node_modules/ol/format/FormatType.js","webpack:///./node_modules/ol/format/JSONFeature.js","webpack:///./node_modules/ol/geom/flat/transform.js","webpack:///./node_modules/ol/transform.js","webpack:///./node_modules/ol/geom/Geometry.js","webpack:///./node_modules/ol/geom/GeometryCollection.js","webpack:///./node_modules/ol/array.js","webpack:///./node_modules/ol/geom/GeometryLayout.js","webpack:///./node_modules/ol/geom/SimpleGeometry.js","webpack:///./node_modules/ol/geom/flat/closest.js","webpack:///./node_modules/ol/geom/flat/deflate.js","webpack:///./node_modules/ol/geom/flat/inflate.js","webpack:///./node_modules/ol/geom/flat/interpolate.js","webpack:///./node_modules/ol/geom/flat/contains.js","webpack:///./node_modules/ol/geom/flat/segments.js","webpack:///./node_modules/ol/geom/flat/intersectsextent.js","webpack:///./node_modules/ol/geom/flat/length.js","webpack:///./node_modules/ol/geom/flat/simplify.js","webpack:///./node_modules/ol/geom/LineString.js","webpack:///./node_modules/ol/geom/MultiLineString.js","webpack:///./node_modules/ol/geom/Point.js","webpack:///./node_modules/ol/geom/MultiPoint.js","webpack:///./node_modules/ol/geom/flat/area.js","webpack:///./node_modules/ol/geom/LinearRing.js","webpack:///./node_modules/ol/geom/flat/interiorpoint.js","webpack:///./node_modules/ol/geom/flat/reverse.js","webpack:///./node_modules/ol/geom/flat/orient.js","webpack:///./node_modules/ol/geom/Polygon.js","webpack:///./node_modules/ol/geom/MultiPolygon.js","webpack:///./node_modules/ol/geom/flat/center.js","webpack:///./node_modules/ol/format/GeoJSON.js","webpack:///./node_modules/ol/CollectionEventType.js","webpack:///./node_modules/ol/Collection.js","webpack:///./node_modules/ol/MapEvent.js","webpack:///./node_modules/ol/MapBrowserEvent.js","webpack:///./node_modules/ol/has.js","webpack:///./node_modules/ol/MapBrowserEventType.js","webpack:///./node_modules/ol/MapBrowserPointerEvent.js","webpack:///./node_modules/ol/pointer/EventType.js","webpack:///./node_modules/ol/pointer/EventSource.js","webpack:///./node_modules/ol/pointer/MouseSource.js","webpack:///./node_modules/ol/pointer/MsSource.js","webpack:///./node_modules/ol/pointer/NativeSource.js","webpack:///./node_modules/ol/pointer/PointerEvent.js","webpack:///./node_modules/ol/pointer/TouchSource.js","webpack:///./node_modules/ol/pointer/PointerEventHandler.js","webpack:///./node_modules/ol/MapBrowserEventHandler.js","webpack:///./node_modules/ol/MapEventType.js","webpack:///./node_modules/ol/MapProperty.js","webpack:///./node_modules/ol/render/EventType.js","webpack:///./node_modules/ol/TileState.js","webpack:///./node_modules/ol/structs/PriorityQueue.js","webpack:///./node_modules/ol/TileQueue.js","webpack:///./node_modules/ol/tilegrid/common.js","webpack:///./node_modules/ol/centerconstraint.js","webpack:///./node_modules/ol/resolutionconstraint.js","webpack:///./node_modules/ol/rotationconstraint.js","webpack:///./node_modules/ol/ViewHint.js","webpack:///./node_modules/ol/ViewProperty.js","webpack:///./node_modules/ol/string.js","webpack:///./node_modules/ol/coordinate.js","webpack:///./node_modules/ol/View.js","webpack:///./node_modules/ol/dom.js","webpack:///./node_modules/ol/layer/Property.js","webpack:///./node_modules/ol/layer/Base.js","webpack:///./node_modules/ol/source/State.js","webpack:///./node_modules/ol/layer/Group.js","webpack:///./node_modules/ol/PluggableMap.js","webpack:///./node_modules/ol/size.js","webpack:///./node_modules/ol/control/Control.js","webpack:///./node_modules/ol/css.js","webpack:///./node_modules/ol/layer/Layer.js","webpack:///./node_modules/ol/control/Attribution.js","webpack:///./node_modules/ol/control/Rotate.js","webpack:///./node_modules/ol/control/Zoom.js","webpack:///./node_modules/ol/Kinetic.js","webpack:///./node_modules/ol/interaction/DoubleClickZoom.js","webpack:///./node_modules/ol/events/condition.js","webpack:///./node_modules/ol/interaction/Pointer.js","webpack:///./node_modules/ol/interaction/DragPan.js","webpack:///./node_modules/ol/interaction/DragRotate.js","webpack:///./node_modules/ol/render/Box.js","webpack:///./node_modules/ol/interaction/DragBox.js","webpack:///./node_modules/ol/interaction/DragZoom.js","webpack:///./node_modules/ol/events/KeyCode.js","webpack:///./node_modules/ol/interaction/KeyboardPan.js","webpack:///./node_modules/ol/interaction/KeyboardZoom.js","webpack:///./node_modules/ol/interaction/MouseWheelZoom.js","webpack:///./node_modules/ol/interaction/PinchRotate.js","webpack:///./node_modules/ol/interaction/PinchZoom.js","webpack:///./node_modules/ol/render/Event.js","webpack:///./node_modules/ol/color.js","webpack:///./node_modules/ol/style/IconImageCache.js","webpack:///./node_modules/ol/renderer/Map.js","webpack:///./node_modules/ol/renderer/Composite.js","webpack:///./node_modules/ol/Map.js","webpack:///./node_modules/ol/control/util.js","webpack:///./node_modules/ol/interaction.js","webpack:///./node_modules/ol/colorlike.js","webpack:///./node_modules/ol/ImageState.js","webpack:///./node_modules/ol/structs/LRUCache.js","webpack:///./node_modules/ol/render/canvas/LabelCache.js","webpack:///./node_modules/ol/render/canvas.js","webpack:///./node_modules/ol/style/Image.js","webpack:///./node_modules/ol/style/RegularShape.js","webpack:///./node_modules/ol/style/Circle.js","webpack:///./node_modules/ol/style/Fill.js","webpack:///./node_modules/ol/style/Stroke.js","webpack:///./node_modules/ol/style/Style.js","webpack:///./node_modules/ol/layer/BaseVector.js","webpack:///./node_modules/ol/render/VectorContext.js","webpack:///./node_modules/ol/render/canvas/Instruction.js","webpack:///./node_modules/ol/render/canvas/Builder.js","webpack:///./node_modules/ol/render/canvas/ImageBuilder.js","webpack:///./node_modules/ol/render/canvas/LineStringBuilder.js","webpack:///./node_modules/ol/render/canvas/PolygonBuilder.js","webpack:///./node_modules/ol/geom/flat/straightchunk.js","webpack:///./node_modules/ol/style/TextPlacement.js","webpack:///./node_modules/ol/render/canvas/TextBuilder.js","webpack:///./node_modules/ol/render/canvas/BuilderGroup.js","webpack:///./node_modules/ol/render/canvas/BuilderType.js","webpack:///./node_modules/ol/geom/flat/textpath.js","webpack:///./node_modules/ol/render/canvas/Executor.js","webpack:///./node_modules/ol/render/canvas/ExecutorGroup.js","webpack:///./node_modules/ol/renderer/Layer.js","webpack:///./node_modules/ol/renderer/canvas/Layer.js","webpack:///./node_modules/ol/renderer/vector.js","webpack:///./node_modules/ol/renderer/canvas/VectorLayer.js","webpack:///./node_modules/ol/layer/Vector.js","webpack:///./node_modules/ol/featureloader.js","webpack:///./node_modules/ol/loadingstrategy.js","webpack:///./node_modules/ol/source/Source.js","webpack:///./node_modules/ol/source/VectorEventType.js","webpack:///./node_modules/ol/structs/RBush.js","webpack:///./node_modules/ol/source/Vector.js","webpack:///./node_modules/ol-hashed/index.js","webpack:///./node_modules/ol/style/Text.js","webpack:///./node_modules/ol/OverlayPositioning.js","webpack:///./node_modules/ol/Overlay.js","webpack:///./main.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","util","typeOf","type","isArray","isDate","isRegExp","isError","extend","dest","source","zip","zipped","count","unzip","array","ii","length","rbush","default","quickselect","maxEntries","format","this","_maxEntries","Math","max","_minEntries","ceil","_initFormat","clear","findItem","item","items","equalsFn","indexOf","calcBBox","node","toBBox","distBBox","children","k","destNode","createNode","minX","Infinity","minY","maxX","maxY","child","leaf","a","b","min","compareNodeMinX","compareNodeMinY","bboxArea","bboxMargin","contains","intersects","height","multiSelect","arr","left","right","compare","mid","stack","pop","push","all","_all","data","search","bbox","result","len","childBBox","nodesToSearch","collides","load","insert","_build","slice","_splitRoot","tmpNode","_insert","remove","parent","index","goingUp","path","indexes","splice","_condense","compareMinX","compareMinY","toJSON","fromJSON","apply","N","M","log","pow","j","right2","right3","N2","N1","sqrt","_chooseSubtree","level","targetNode","area","enlargement","minArea","minEnlargement","isNode","insertPath","_split","_adjustParentBBoxes","_chooseSplitAxis","splitIndex","_chooseSplitIndex","newNode","bbox1","bbox2","overlap","minOverlap","_allDistMargin","sort","leftBBox","rightBBox","margin","siblings","compareArr","Function","join","Store","hash","store","reset","window","removeEventListener","update","addEventListener","deserialize","location","values","defaults","nonDefaults","history","pushState","serialize","register","config","callback","unregister","process","getOwnPropertyDescriptors","obj","keys","descriptors","getOwnPropertyDescriptor","formatRegExp","f","isString","objects","arguments","inspect","args","str","String","replace","x","Number","JSON","stringify","_","isNull","isObject","deprecate","fn","msg","noDeprecation","warned","throwDeprecation","Error","traceDeprecation","console","trace","error","debugEnviron","debugs","opts","ctx","seen","stylize","stylizeNoColor","depth","colors","isBoolean","showHidden","_extend","isUndefined","customInspect","stylizeWithColor","formatValue","styleType","style","styles","recurseTimes","isFunction","constructor","ret","primitive","simple","isNumber","formatPrimitive","visibleKeys","forEach","val","idx","arrayToHash","getOwnPropertyNames","formatError","RegExp","toString","Date","output","base","braces","toUTCString","formatProperty","match","formatArray","map","reduce","prev","cur","numLinesEst","reduceToSingleString","desc","set","split","line","substr","ar","Array","arg","re","objectToString","e","pad","debuglog","env","NODE_DEBUG","toUpperCase","test","pid","bold","italic","underline","inverse","white","grey","black","blue","cyan","green","magenta","red","yellow","special","number","boolean","undefined","null","string","date","regexp","isNullOrUndefined","isSymbol","isPrimitive","isBuffer","months","prop","time","getHours","getMinutes","getSeconds","getDate","getMonth","inherits","origin","add","kCustomPromisifiedSymbol","callbackifyOnRejected","reason","cb","newReason","promisify","original","TypeError","writable","configurable","promiseResolve","promiseReject","promise","Promise","resolve","reject","err","setPrototypeOf","getPrototypeOf","defineProperties","custom","callbackify","callbackified","maybeCb","self","then","nextTick","rej","enc","encodeURIComponent","serializers","num","bool","toISOString","colorScale","lerp","rgb2float","rgba","rgb2hex","dig","hex","rgbaStr","spec","indicies","fromrgba","torgba","nsteps","cmap","colormap","nshades","alpha","toLowerCase","round","steps","rgb","amt","concat","content","options","hmr","transform","insertInto","locals","useSourceMap","list","cssMapping","btoa","sourceMapping","sourceMap","unescape","sourceURLs","sources","sourceRoot","cssWithMappingToString","mediaQuery","alreadyImportedModules","id","memo","stylesInDom","isOldIE","document","atob","getElement","target","styleTarget","querySelector","HTMLIFrameElement","contentDocument","head","singleton","singletonCounter","stylesInsertedAtTop","fixUrls","addStylesToDom","domStyle","refs","parts","addStyle","listToStyles","newStyles","part","css","media","insertStyleElement","lastStyleElementInsertedAtTop","insertAt","nextSibling","insertBefore","appendChild","firstChild","before","removeStyleElement","parentNode","removeChild","createStyleElement","createElement","attrs","nonce","nc","getNonce","addAttrs","el","setAttribute","styleIndex","applyToSingletonTag","URL","createObjectURL","revokeObjectURL","Blob","link","rel","createLinkElement","autoFixUrls","convertToAbsoluteUrls","blob","oldSrc","href","styleSheet","cssText","createTextNode","newObj","DEBUG","newList","mayRemove","textStore","replaceText","replacement","filter","Boolean","cssNode","childNodes","baseUrl","protocol","host","currentDir","pathname","fullMatch","origUrl","newUrl","unquotedOrigUrl","trim","$1","Schema","_values","_defaults","_providers","_callback","_callbackTimer","_scheduleCallback","clearTimeout","setTimeout","_debouncedCallback","_updateTimer","_debouncedUpdate","newValues","providers","provider","schema","changed","state","forEachKey","prefixed","deserialized","getDefault","serializedDefault","removedProvider","conflicts","_initializeProvider","serializedValue","deserializedValue","deserializedDefault","serialized","serializer","Field","fields","prefix","_prefix","_fields","getPrefixed","thisArg","more","other","thisPrefixedKeys","deserializers","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","defaultClearTimeout","runTimeout","fun","currentQueue","queue","draining","queueIndex","cleanUpNextTick","drainQueue","timeout","run","marker","runClearTimeout","Item","noop","title","browser","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","cwd","chdir","dir","umask","copy","fill","readUInt8","ctor","superCtor","super_","TempCtor","dec","decodeURIComponent","isNaN","getTime","parse","substring","jet","hsv","hot","cool","spring","summer","autumn","winter","bone","copper","greys","yignbu","greens","yiorrd","bluered","rdbu","picnic","rainbow","portland","blackbody","earth","electric","viridis","inferno","magma","plasma","warm","rainbow-soft","bathymetry","cdom","chlorophyll","density","freesurface-blue","freesurface-red","oxygen","par","phase","salinity","temperature","turbidity","velocity-blue","velocity-green","cubehelix","v0","v1","swap","tmp","defaultCompare","quickselectStep","z","exp","sd","newLeft","floor","newRight","factory","TRUE","FALSE","VOID","obj_assign","assign","var_sources","getValues","isEmpty","findListener","listener","opt_this","opt_setDeleteIndex","listenerObj","bindTo","deleteIndex","getListeners","listenerMap","getListenerMap","opt_create","ol_lm","removeListeners","boundListener","removeListenerMap","listen","opt_once","callOnce","evt","unlistenByKey","bindListener","listenOnce","unlisten","events_Event","Event","propagationStopped","preventDefault","stopPropagation","EventType","CHANGE","CLEAR","CONTEXTMENU","CLICK","DBLCLICK","DRAGENTER","DRAGOVER","DROP","ERROR","KEYDOWN","KEYPRESS","LOAD","MOUSEDOWN","MOUSEMOVE","MOUSEOUT","MOUSEUP","MOUSEWHEEL","MSPOINTERDOWN","RESIZE","TOUCHSTART","TOUCHMOVE","TOUCHEND","WHEEL","util_abstract","uidCounter_","getUid","ol_uid","extendStatics","VERSION","ObjectEventType","ol_Disposable","Disposable","disposed_","dispose","disposeInternal","__extends","__proto__","__","events_Target","_super","Target","_this","pendingRemovals_","dispatching_","listeners_","dispatchEvent","event","propagate","pendingRemovals","unlistenAll","hasListener","opt_type","Observable_extends","ol_Observable","Observable","revision_","getRevision","un","Object_extends","ObjectEvent","oldValue","Object_BaseObject","BaseObject","opt_values","values_","setProperties","getKeys","getProperties","notify","eventType","getChangeEventType","opt_silent","unset","changeEventTypeCache","ol_Object","easeOut","easeIn","inAndOut","linear","Property","Interaction_extends","zoomByDelta","view","delta","opt_anchor","opt_duration","currentZoom","getZoom","newZoom","getConstrainedZoom","newResolution","getResolutionForZoom","getAnimating","cancelAnimations","animate","resolution","anchor","duration","easing","interaction_Interaction","Interaction","handleEvent","map_","setActive","getActive","getMap","mapBrowserEvent","active","setMap","AssertionError_extends","ol_AssertionError","AssertionError","code","message","assert","assertion","errorCode","clamp","cosh","y","squaredSegmentDistance","x1","y1","x2","y2","dx","dy","math_squaredDistance","toRadians","angleInDegrees","PI","modulo","GeometryType","POINT","LINE_STRING","LINEAR_RING","POLYGON","MULTI_POINT","MULTI_LINE_STRING","MULTI_POLYGON","GEOMETRY_COLLECTION","CIRCLE","Relationship","UNKNOWN","INTERSECTING","ABOVE","RIGHT","BELOW","LEFT","buffer","extent","opt_extent","clone","closestSquaredDistanceXY","containsExtent","extent1","extent2","containsXY","coordinateRelationship","coordinate","relationship","createOrUpdate","createOrUpdateEmpty","createOrUpdateFromFlatCoordinates","flatCoordinates","offset","end","stride","extendFlatCoordinates","equals","extendCoordinate","extendCoordinates","coordinates","extendXY","getBottomLeft","getBottomRight","getCenter","getForViewAndSize","center","rotation","size","cosRotation","cos","sinRotation","sin","xCos","xSin","yCos","ySin","x0","x3","y0","y3","getHeight","getIntersection","intersection","extent_intersects","getTopLeft","getTopRight","getWidth","extent_isEmpty","Units","DEGREES","FEET","METERS","PIXELS","TILE_PIXELS","USFEET","METERS_PER_UNIT","proj_Units","proj_Projection","Projection","code_","units_","extent_","worldExtent_","worldExtent","axisOrientation_","axisOrientation","global_","global","canWrapX_","getPointResolutionFunc_","getPointResolution","defaultTileGrid_","metersPerUnit_","metersPerUnit","canWrapX","getCode","getExtent","getUnits","getMetersPerUnit","getWorldExtent","getAxisOrientation","isGlobal","setGlobal","getDefaultTileGrid","setDefaultTileGrid","tileGrid","setExtent","setWorldExtent","setGetPointResolution","func","getPointResolutionFunc","epsg3857_extends","RADIUS","HALF_SIZE","EXTENT","WORLD_EXTENT","epsg3857_EPSG3857Projection","EPSG3857Projection","units","point","PROJECTIONS","fromEPSG4326","input","opt_output","opt_dimension","dimension","halfSize","tan","toEPSG4326","atan","epsg4326_extends","epsg4326_EXTENT","epsg4326_METERS_PER_UNIT","epsg4326_EPSG4326Projection","EPSG4326Projection","opt_axisOrientation","epsg4326_PROJECTIONS","projections_cache","projections2","forwardTransform","inverseTransform","transforms","transforms_add","destination","transformFn","sourceCode","destinationCode","cloneTransform","identityTransform","addProjection","projection","proj_get","projectionLike","addEquivalentProjections","projections","addProjections","createProjection","defaultCode","equivalent","projection1","projection2","equalUnits","getTransformFromProjections","sourceProjection","destinationProjection","transformFunc","transforms_get","getTransform","proj_transform","DragAndDrop_extends","DragAndDropEventType","DragAndDropEvent","file","opt_features","opt_projection","features","handleDrop","files","dataTransfer","reader","FileReader","handleResult_","readAsText","handleStop","dropEffect","interaction_DragAndDrop","DragAndDrop","opt_options","formatConstructors_","formatConstructors","projection_","dropListenKeys_","source_","getView","getProjection","tryReadFeatures_","featureProjection","addFeatures","registerListeners_","dropArea","getViewport","unregisterListeners_","text","readFeatures","Feature_extends","ol_Feature","Feature","opt_geometryOrProperties","id_","geometryName_","style_","styleFunction_","geometryChangeKey_","handleGeometryChanged_","getSimplifiedGeometry","geometry","setGeometry","properties","setGeometryName","getGeometryName","getGeometry","getStyle","setStyle","getId","getStyleFunction","handleGeometryChange_","styles_1","getZIndex","createStyleFunction","setId","format_Feature","FeatureFormat","dataProjection","defaultFeatureProjection","getReadOptions","readProjection","adaptOptions","getType","readFeature","readGeometry","writeFeature","feature","writeFeatures","writeGeometry","transformGeometryWithOptions","write","transformed","decimals","power_1","applyTransform","FormatType","ARRAY_BUFFER","TEXT","XML","JSONFeature_extends","getObject","format_JSONFeature","JSONFeature","readFeatureFromObject","readFeaturesFromObject","readGeometryFromObject","readProjectionFromObject","writeFeatureObject","writeFeaturesObject","writeGeometryObject","transform2D","opt_dest","compose","dx1","dy1","sx","sy","angle","dx2","dy2","makeInverse","mat","det","Geometry_extends","tmpTransform","geom_Geometry","Geometry","extentRevision_","simplifiedGeometryCache","simplifiedGeometryMaxMinSquaredTolerance","simplifiedGeometryRevision","closestPointXY","closestPoint","minSquaredDistance","coord","getClosestPoint","opt_closestPoint","NaN","intersectsCoordinate","computeExtent","returnOrUpdate","rotate","scale","opt_sy","simplify","tolerance","squaredTolerance","intersectsExtent","translate","deltaX","deltaY","sourceProj","inCoordinates","outCoordinates","pixelExtent","projectedExtent","GeometryCollection_extends","cloneGeometries","geometries","clonedGeometries","geom_GeometryCollection","GeometryCollection","opt_geometries","geometries_","listenGeometriesChange_","unlistenGeometriesChange_","geometryCollection","setGeometries","getGeometries","getGeometriesArray","simplifiedGeometries","simplified","simplifiedGeometry","simplifiedGeometryCollection","setGeometriesArray","numberSafeCompareFunction","linearFindNearest","direction","reverseSubArray","begin","array_extend","extension","array_equals","arr1","arr2","len1","GeometryLayout","XY","XYZ","XYM","XYZM","SimpleGeometry_extends","getStrideForLayout","layout","geom_SimpleGeometry","SimpleGeometry","getCoordinates","getFirstCoordinate","getFlatCoordinates","getLastCoordinate","getLayout","getSimplifiedGeometryInternal","getStride","setFlatCoordinates","setCoordinates","opt_layout","setLayout","nesting","getLayoutForStride","anchorX","anchorY","transform_scale","assignClosest","offset1","offset2","maxSquaredDelta","squaredDelta","arrayMaxSquaredDelta","ends","assignClosestPoint","maxDelta","isRing","opt_tmpPoint","squaredDistance","tmpPoint","assignClosestArrayPoint","deflateCoordinates","deflateCoordinatesArray","coordinatess","opt_ends","jj","inflateCoordinates","opt_coordinates","inflateCoordinatesArray","opt_coordinatess","inflateMultiCoordinatesArray","endss","opt_coordinatesss","coordinatesss","interpolatePoint","fraction","pointX","pointY","length_1","cumulativeLengths","haystack","needle","opt_comparator","cmp","comparator","low","high","found","binarySearch","lineStringCoordinateAtM","extrapolate","lo","hi","m0","linearRingContainsExtent","forEachCorner","linearRingContainsXY","wn","linearRingsContainsXY","point1","point2","intersectsLineString","coordinatesExtent","start","startRel","endRel","startX","startY","endX","endY","slope","intersectsSegment","intersectsLinearRingArray","intersectsLinearRing","lineStringLength","douglasPeucker","simplifiedFlatCoordinates","simplifiedOffset","markers","last","first","maxSquaredDistance","squaredDistance_1","douglasPeuckerArray","simplifiedEnds","snap","quantize","quantizeArray","LineString_extends","geom_LineString","LineString","flatMidpoint_","flatMidpointRevision_","maxDelta_","maxDeltaRevision_","appendCoordinate","forEachSegment","getCoordinateAtM","opt_extrapolate","getCoordinateAt","getLength","getFlatMidpoint","MultiLineString_extends","geom_MultiLineString","MultiLineString","ends_","lineStrings","lineString","appendLineString","opt_interpolate","interpolate","lineStringsCoordinateAtM","getEnds","getLineString","getLineStrings","getFlatMidpoints","midpoints","intersectsLineStringArray","Point_extends","geom_Point","Point","deflateCoordinate","MultiPoint_extends","geom_MultiPoint","MultiPoint","appendPoint","getPoint","getPoints","points","area_linearRing","twiceArea","area_linearRings","LinearRing_extends","geom_LinearRing","LinearRing","getArea","getInteriorPointOfArray","flatCenters","flatCentersOffset","intersections","rr","maxSegmentLength","segmentLength","abs","reverse_coordinates","linearRingIsClockwise","edge","linearRingsAreOriented","opt_right","isClockwise","orientLinearRings","orientLinearRingsArray","Polygon_extends","Polygon_Polygon","Polygon","flatInteriorPointRevision_","flatInteriorPoint_","orientedRevision_","orientedFlatCoordinates_","appendLinearRing","linearRing","getOrientedFlatCoordinates","getFlatInteriorPoint","flatCenter","getInteriorPoint","getLinearRingCount","getLinearRing","getLinearRings","linearRings","geom_Polygon","fromExtent","MultiPolygon_extends","geom_MultiPolygon","MultiPolygon","opt_endss","endss_","flatInteriorPointsRevision_","flatInteriorPoints_","polygons","polygon","appendPolygon","newEndss","multiArrayMaxSquaredDelta","assignClosestMultiArrayPoint","linearRingssContainsXY","linearRingss","getEndss","getFlatInteriorPoints","center_linearRingss","interiorPoints","getInteriorPointsOfMultiArray","getInteriorPoints","linearRingssAreOriented","simplifiedEndss","quantizeMultiArray","getPolygon","prevEnds","getPolygons","intersectsLinearRingMultiArray","deflateMultiCoordinatesArray","lastEnds","GeoJSON_extends","readPointGeometry","readLineStringGeometry","readPolygonGeometry","readMultiPointGeometry","readMultiLineStringGeometry","readMultiPolygonGeometry","readGeometryCollectionGeometry","geoJSON","writePointGeometry","writeLineStringGeometry","rightHanded","writePolygonGeometry","writeMultiPointGeometry","writeMultiLineStringGeometry","writeMultiPolygonGeometry","writeGeometryCollectionGeometry","format_GeoJSON","GeoJSON","geometryName","extractGeometryName_","extractGeometryName","geoJSONFeature","geoJSONFeatures","crs","CollectionEventType","ADD","REMOVE","Collection_extends","Collection_Property","CollectionEvent","opt_element","opt_index","element","ol_Collection","Collection","opt_array","unique_","unique","array_","assertUnique_","updateLength_","getArray","elem","removeAt","setAt","opt_except","MapEvent_extends","ol_MapEvent","MapEvent","opt_frameState","frameState","MapBrowserEvent_extends","ol_MapBrowserEvent","MapBrowserEvent","browserEvent","opt_dragging","originalEvent","pixel","getEventPixel","getCoordinateFromPixel","dragging","ua","navigator","userAgent","FIREFOX","SAFARI","WEBKIT","MAC","DEVICE_PIXEL_RATIO","devicePixelRatio","TOUCH","POINTER","MSPOINTER","MapBrowserEventType","SINGLECLICK","POINTERDRAG","POINTERMOVE","POINTERDOWN","POINTERUP","POINTEROVER","POINTEROUT","POINTERENTER","POINTERLEAVE","POINTERCANCEL","MapBrowserPointerEvent_extends","ol_MapBrowserPointerEvent","MapBrowserPointerEvent","pointerEvent","pointer_EventType","pointer_EventSource","EventSource","dispatcher","mapping","mapping_","getEvents","getHandlerForEvent","MouseSource_extends","POINTER_ID","POINTER_TYPE","mousedown","inEvent","isEventSimulatedFromTouch_","pointerMap","cancel","prepareEvent","down","mousemove","move","mouseup","button","up","cleanupMouse","mouseover","enterOver","mouseout","leaveOut","cloneEvent","pd","pointerId","isPrimary","pointerType","pointer_MouseSource","MouseSource","lastTouches","lts","clientX","clientY","MsSource_extends","POINTER_TYPES","msPointerDown","prepareEvent_","msPointerMove","msPointerUp","cleanup","msPointerOut","msPointerOver","msPointerCancel","msLostPointerCapture","makeEvent","msGotPointerCapture","pointer_MsSource","MsSource","MSPointerDown","MSPointerMove","MSPointerUp","MSPointerOut","MSPointerOver","MSPointerCancel","MSGotPointerCapture","MSLostPointerCapture","NativeSource_extends","pointerDown","fireNativeEvent","pointerMove","pointerUp","pointerOut","pointerOver","pointerCancel","lostPointerCapture","gotPointerCapture","pointer_NativeSource","NativeSource","pointerdown","pointermove","pointerup","pointerout","pointerover","pointercancel","gotpointercapture","lostpointercapture","PointerEvent_extends","HAS_BUTTONS","PointerEvent","opt_eventDict","eventDict","buttons","which","getButtons","pressure","getPressure","bubbles","cancelable","detail","screenX","screenY","ctrlKey","altKey","shiftKey","metaKey","relatedTarget","width","tiltX","tiltY","hwTimestamp","ev","MouseEvent","pointer_PointerEvent","TouchSource_extends","touchstart","vacuumTouches_","setPrimaryTouch_","changedTouches","dedupSynthMouse_","clickCount_","processTouches_","overDown_","touchmove","moveOverOut_","touchend","upOut_","touchcancel","cancelOut_","pointer_TouchSource","TouchSource","mouseSource","firstTouchId_","resetId_","dedupTimeout_","isPrimaryTouch_","inTouch","identifier","cancelResetClickCount_","removePrimaryPointer_","inPointer","resetClickCount_","resetClickCountHandler_","touchToPointer_","radiusX","radiusY","force","inFunction","touches","pointer","findTouch_","touchList","searchId","out","outTarget","over","enter","outEvent","leave","cleanUpPointer_","lt_1","PointerEventHandler_extends","CLONE_PROPS","pointer_PointerEventHandler","PointerEventHandler","element_","eventMap_","eventSourceList_","registerSources","registerSource","register_","newEvents","handler","eventSource","addEvents_","unregister_","removeEvents_","eventHandler_","events","eventName","eventCopy","fireEvent","contains_","container","contained","inType","wrapMouseEvent","MapBrowserEventHandler_extends","ol_MapBrowserEventHandler","MapBrowserEventHandler","moveTolerance","clickTimeoutId_","dragging_","dragListenerKeys_","moveTolerance_","down_","activePointers_","trackedTouches_","pointerEventHandler_","documentPointerEventHandler_","pointerdownListenerKey_","handlePointerDown_","relayedListenerKey_","relayEvent_","emulateClick_","newEvent","updateActivePointers_","handlePointerUp_","isMouseActionButton_","handlePointerMove_","isMoving_","MapEventType","MapProperty","LAYERGROUP","SIZE","TARGET","VIEW","render_EventType","TileState","structs_PriorityQueue","PriorityQueue","priorityFunction","keyFunction","priorityFunction_","keyFunction_","elements_","priorities_","queuedElements_","dequeue","elements","priorities","siftUp_","elementKey","enqueue","priority","siftDown_","getCount","getLeftChildIndex_","getRightChildIndex_","getParentIndex_","heapify_","isKeyQueued","isQueued","startIndex","lIndex","rIndex","smallerChildIndex","parentIndex","reprioritize","TileQueue_extends","ol_TileQueue","TileQueue","tilePriorityFunction","tileChangeCallback","getKey","tileChangeCallback_","tilesLoading_","tilesLoadingKeys_","added","handleTileChange","getTilesLoading","tile","getState","hifi","tileKey","loadMoreTiles","maxTotalLoading","maxNewLoads","newLoads","abortedTiles","DEFAULT_TILE_SIZE","none","getViewportClampedResolution","maxExtent","viewportSize","xResolution","yResolution","getSmoothClampedResolution","maxResolution","minResolution","createMinMaxResolution","opt_smooth","opt_maxExtent","opt_isMoving","cappedMaxRes","disable","rotationconstraint_none","ViewHint","ViewProperty","padNumber","opt_precision","numberString","toFixed","decimal","degreesToStringHDMS","hemispheres","degrees","opt_fractionDigits","normalizedDegrees","dflPrecision","precision","deg","sec","charAt","coordinate_equals","coordinate1","coordinate2","coordinate_rotate","cosAngle","sinAngle","View_extends","DEFAULT_MIN_ZOOM","animationCallback","returnValue","isNoopAnimation","animation","sourceCenter","targetCenter","sourceResolution","targetResolution","sourceRotation","targetRotation","ol_View","View","hints_","animations_","updateAnimationKey_","targetCenter_","targetResolution_","targetRotation_","applyOptions_","resolutionConstraintInfo","resolutionConstraint","minZoom","maxZoom","zoomFactor","multiWorld","smooth","smoothResolutionConstraint","resolutions","constrainResolution","capped","createSnapToResolutions","constrainOnlyCenter","defaultMaxResolution","defaultMinResolution","power","opt_minResolution","zoomLevel","createSnapToPower","extent_1","constraint","createResolutionConstraint","maxResolution_","minResolution_","zoomFactor_","resolutions_","minZoom_","centerConstraint","onlyCenter","smoothExtentConstraint","viewWidth","viewHeight","ratio","createCenterConstraint","rotationConstraint","enableRotation","constrainRotation","opt_tolerance","theta","createRotationConstraint","constraints_","setRotation","setCenter","setResolution","zoom","setZoom","resolveConstraints","options_","getUpdatedOptions_","newOptions","getResolution","getRotation","var_args","isDef","animate_","animationCount","now","series","complete","setHint","updateAnimations_","getInteracting","cancelAnimationFrame","seriesComplete","elapsed","progress","getSizeFromViewport_","constrainedResolution","calculateCenterZoom","applyTargetState_","constrainedRotation","calculateCenterRotate","requestAnimationFrame","currentCenter","currentResolution","opt_rotation","selector","metrics","getComputedStyle","parseInt","w","h","getConstraints","getHints","opt_hints","calculateExtent","opt_size","getMaxResolution","getMinResolution","getMaxZoom","getZoomForResolution","setMaxZoom","getMinZoom","setMinZoom","setConstrainResolution","enabled","getResolutions","getResolutionForExtent","getResolutionForValueFunction","opt_power","getValueForResolutionFunction","pixelRatio","nearest","baseLevel","fit","geometryOrExtent","padding","coords","minRotX","minRotY","maxRotX","maxRotY","rotX","rotY","getConstrainedResolution","centerRotX","centerRotY","getConstrainedCenter","centerOn","position","centerX","centerY","adjustCenter","deltaCoordinates","adjustResolution","isMoving","adjustZoom","adjustRotation","newRotation","hint","opt_doNotCancelAnims","opt_forceMoving","newCenter","opt_resolutionDirection","beginInteraction","endInteraction","opt_targetResolution","targetZoom","opt_direction","targetRes","createCanvasContext2D","opt_width","opt_height","canvas","getContext","dom_outerWidth","offsetWidth","marginLeft","marginRight","dom_outerHeight","offsetHeight","marginTop","marginBottom","replaceNode","oldNode","replaceChild","removeNode","removeChildren","lastChild","layer_Property","OPACITY","VISIBLE","Z_INDEX","MAX_RESOLUTION","MIN_RESOLUTION","SOURCE","Base_extends","Base","BaseLayer","opacity","visible","zIndex","className_","className","state_","getClassName","getLayerState","layer","managed","getOpacity","sourceState","getSourceState","getVisible","getLayersArray","getLayerStatesArray","opt_states","setMaxResolution","setMinResolution","setOpacity","setVisible","setZIndex","zindex","State","UNDEFINED","LOADING","READY","Group_extends","Group_Property","LAYERS","Group","LayerGroup","baseOptions","layers","layersListenerKeys_","listenerKeys_","handleLayersChanged_","setLayers","handleLayerChange_","getLayers","handleLayersAdd_","handleLayersRemove_","layersArray","collectionEvent","states","pos","ownLayerState","layerState","PluggableMap_extends","ol_PluggableMap","PluggableMap","optionsInternal","keyboardEventTarget","getElementById","controls","interactions","overlays","layerGroup","createOptionsInternal","maxTilesLoading_","maxTilesLoading","pixelRatio_","animationDelayKey_","animationDelay_","renderFrame_","coordinateToPixelTransform_","pixelToCoordinateTransform_","frameIndex_","frameState_","previousExtent_","viewPropertyListenerKey_","viewChangeListenerKey_","layerGroupPropertyListenerKeys_","viewport_","overflow","msTouchAction","touchAction","overlayContainer_","overlayContainerStopEvent_","mapBrowserEventHandler_","handleMapBrowserEvent","keyboardEventTarget_","keyHandlerKeys_","handleBrowserEvent","overlays_","overlayIdIndex_","renderer_","createRenderer","handleResize_","focus_","postRenderFunctions_","tileQueue_","getTilePriority","handleTileChange_","skippedFeatureUids_","handleLayerGroupChanged_","handleViewChanged_","handleSizeChanged_","handleTargetChanged_","control","interaction","addOverlayInternal_","addControl","getControls","addInteraction","getInteractions","addLayer","getLayerGroup","addOverlay","overlay","getOverlays","setTarget","forEachFeatureAtPixel","hitTolerance","layerFilter","forEachFeatureAtCoordinate","getFeaturesAtPixel","forEachLayerAtPixel","hasFeatureAtPixel","hasFeatureAtCoordinate","getEventCoordinate","viewportPosition","getBoundingClientRect","eventPosition","top","getTarget","getTargetElement","pixelToCoordinateTransform","getOverlayById","getPixelFromCoordinate","coordinateToPixelTransform","getRenderer","getSize","getOverlayContainer","getOverlayContainerStopEvent","tileSourceKey","tileCenter","tileResolution","wantedTiles","focus","HTMLElement","parentElement","interactionsArray","handlePostRender","tileQueue","hints","viewHints","lowOnFrameBudget","getLoading","getSource","loading","dispatchRenderEvent","postRenderFunctions","render","targetElement","updateSize","removeLayerRenderers","handleViewPropertyChanged_","isRendered","renderSync","removeControl","removeInteraction","removeLayer","removeOverlay","viewState","previousFrameState","hasArea","layerStatesArray","skippedFeatureUids","usedTiles","renderFrame","setLayerGroup","setSize","setView","skipFeature","computedStyle","parseFloat","unskipFeature","cache","Control_extends","control_Control","Control","target_","listenerKeys","CLASS_HIDDEN","CLASS_SELECTABLE","CLASS_UNSELECTABLE","CLASS_CONTROL","CLASS_COLLAPSED","getFontFamilies","font","family","fontFamily","Layer_extends","visibleAtResolution","layer_Layer","Layer","mapPrecomposeKey_","mapRenderKey_","sourceChangeKey_","handleSourcePropertyChange_","setSource","handleSourceChange_","layerRenderer","prepareFrame","renderEvent","Attribution_extends","Attribution_render","mapEvent","updateElement_","control_Attribution","Attribution","ulElement_","collapsed_","collapsed","overrideCollapsible_","collapsible","collapsible_","tipLabel","collapseLabel","collapseLabel_","textContent","label","label_","activeLabel","handleClick_","cssClasses","renderedAttributions_","renderedVisible_","collectSourceAttributions_","lookup","visibleAttributions","attributionGetter","getAttributions","attributions","getAttributionsCollapsible","setCollapsible","display","innerHTML","handleToggle_","classList","toggle","getCollapsible","setCollapsed","getCollapsed","Rotate_extends","Rotate_render","rotation_","autoHide_","control_Rotate","Rotate","callResetNorth_","resetNorth","duration_","autoHide","resetNorth_","Zoom_extends","control_Zoom","Zoom","zoomInLabel","zoomOutLabel","zoomInTipLabel","zoomOutTipLabel","inElement","outElement","zoomByDelta_","ol_Kinetic","Kinetic","decay","minVelocity","delay","decay_","minVelocity_","delay_","points_","angle_","initialVelocity_","lastIndex","firstIndex","atan2","getDistance","getAngle","DoubleClickZoom_extends","stopEvent","delta_","interaction_DoubleClickZoom","DoubleClickZoom","altShiftKeysOnly","condition_focus","activeElement","always","mouseActionButton","noModifierKeys","shiftKeyOnly","targetNotEditable","tagName","mouseOnly","Pointer_extends","Pointer_centroid","pointerEvents","Pointer","PointerInteraction","handleDownEvent","handleDragEvent","handleMoveEvent","handleUpEvent","stopDown","handlingDownUpSequence","trackedPointers_","targetPointers","updateTrackedPointers_","handledUp","handled","isPointerDraggingEvent","event_1","DragPan_extends","interaction_DragPan","DragPan","kinetic_","kinetic","lastCentroid","lastPointersCount_","panning_","condition_","condition","noKinetic_","centroid","distance","centerpx","DragRotate_extends","interaction_DragRotate","DragRotate","lastAngle_","Box_extends","Box","RenderBox","geometry_","startPixel_","endPixel_","render_","startPixel","endPixel","setPixels","createOrUpdateGeometry","DragBox_extends","DragBoxEventType","DragBoxEvent","interaction_DragBox","DragBox","box_","minArea_","onBoxEnd_","onBoxEnd","boxEndCondition_","boxEndCondition","defaultBoxEndCondition","DragZoom_extends","out_","mapExtent","boxPixelExtent","scaleFromCenter","interaction_DragZoom","DragZoom","KeyCode","UP","DOWN","KeyboardPan_extends","KeyboardPan_handleEvent","keyCode","mapUnitsDelta","pixelDelta_","pan","interaction_KeyboardPan","KeyboardPan","defaultCondition_","pixelDelta","KeyboardZoom_extends","KeyboardZoom_handleEvent","charCode","charCodeAt","interaction_KeyboardZoom","KeyboardZoom","MouseWheelZoom_extends","Mode","interaction_MouseWheelZoom","MouseWheelZoom","totalDelta_","lastDelta_","timeout_","useAnchor_","useAnchor","lastAnchor_","startTime_","timeoutId_","mode_","trackpadEventGap_","trackpadTimeoutId_","trackpadDeltaPerZoom_","endInteraction_","sign","wheelEvent","deltaMode","WheelEvent","DOM_DELTA_PIXEL","DOM_DELTA_LINE","wheelDeltaY","timeLeft","handleWheelZoom_","setMouseAnchor","PinchRotate_extends","interaction_PinchRotate","PinchRotate","pointerOptions","anchor_","rotating_","rotationDelta_","threshold_","threshold","rotationDelta","touch0","touch1","PinchZoom_extends","interaction_PinchZoom","PinchZoom","lastDistance_","lastScaleDelta_","scaleDelta","Event_extends","render_Event","RenderEvent","opt_inversePixelTransform","opt_context","opt_glContext","inversePixelTransform","context","glContext","HEX_COLOR_RE_","NAMED_COLOR_RE_","cacheSize","normalize","color","color_toString","g","IconImageCache","cache_","cacheSize_","maxCacheSize_","canExpireCache","expire","iconImage","src","crossOrigin","maxCacheSize","asString","shared","Map_extends","expireIconCache","renderer_Map","MapRenderer","layerRenderers_","layerRendererListeners_","calculateMatrices2D","removeLayerRendererByKey_","thisArg2","viewResolution","translatedCoordinate","projectionExtent","worldWidth","layerStates","getLayerRenderer","callback_1","getWrapX","layerKey","renderer","handleLayerRendererChange_","getLayerRenderers","scheduleExpireIconCache","scheduleRemoveUnusedLayerRenderers","layerStatesMap","acc","_loop_1","this_1","Composite_extends","Composite","CompositeMapRenderer","children_","oldChildren","oldChild","newChild","replaceChildren","getDataAtPixel","ol_Map_extends","ol_Map","Map","zoomOptions","rotateOptions","attribution","attributionOptions","altShiftDragRotate","doubleClickZoom","zoomDelta","zoomDuration","dragPan","onFocusOnly","pinchRotate","pinchZoom","keyboard","mouseWheelZoom","shiftDragZoom","interaction_defaults","asColorLike","ImageState","IDLE","LOADED","LRUCache_extends","structs_LRUCache","LRUCache","opt_highWaterMark","highWaterMark","count_","entries_","oldest_","newest_","containsKey","entry","value_","key_","newer","older","peekLast","peekLastKey","peekFirstKey","LabelCache_extends","LabelCache_LabelCache","LabelCache","consumers","consumer","consumerId","prune","outer","release","defaultLineDash","defaultPadding","labelCache","checkedFonts","measureContext","textHeights","checkFont","interval","referenceWidth","retries","checked","referenceFonts","isAvailable","getMeasureContext","weight","fontWeight","available","referenceFont","measureText","check","done","clearInterval","fontSpec","fontFamilies","setInterval","div","heights","measureTextHeight","body","measureTextWidth","canvas_measureAndCacheTextWidth","rotateAtOffset","offsetX","offsetY","resetTransform","drawImage","image","originX","originY","globalAlpha","setTransform","Image","ImageStyle","opacity_","rotateWithView_","rotateWithView","scale_","getScale","getRotateWithView","getAnchor","getImage","getHitDetectionImage","getImageState","getImageSize","getHitDetectionImageSize","getOrigin","setRotateWithView","setScale","listenImageChange","unlistenImageChange","RegularShape_extends","style_RegularShape","RegularShape","canvas_","hitDetectionCanvas_","fill_","origin_","radius_","radius","radius1","radius2_","radius2","stroke_","stroke","size_","imageSize_","hitDetectionImageSize_","getFill","getRadius","getRadius2","getStroke","strokeStyle","lineCap","lineJoin","miterLimit","lineDash","lineDashOffset","strokeWidth","getColor","getLineDash","getLineDashOffset","getLineJoin","getLineCap","getMiterLimit","renderOptions","imageSize","draw_","createHitDetectionCanvas_","angle0","radiusC","beginPath","arc","lineTo","fillStyle","lineWidth","setLineDash","closePath","drawHitDetectionCanvas_","Circle_extends","Circle","CircleStyle","setRadius","style_Fill","Fill","color_","setColor","style_Stroke","Stroke","lineCap_","lineDash_","lineDashOffset_","lineJoin_","miterLimit_","width_","setLineCap","setLineDashOffset","setLineJoin","setMiterLimit","setWidth","Style","geometryFunction_","defaultGeometryFunction","image_","text_","zIndex_","getText","setRenderer","getGeometryFunction","setFill","setImage","setStroke","setText","defaultStyles","createDefaultStyle","style_Style","BaseVector_extends","BaseVector_Property","BaseVector","BaseVectorLayer","renderBuffer","updateWhileAnimating","updateWhileInteracting","declutter_","declutter","renderBuffer_","updateWhileAnimating_","updateWhileInteracting_","getDeclutter","getRenderBuffer","getRenderOrder","getUpdateWhileAnimating","getUpdateWhileInteracting","setRenderOrder","renderOrder","styleFunction","toFunction","render_VectorContext","VectorContext","drawCustom","drawGeometry","drawCircle","circleGeometry","drawFeature","drawGeometryCollection","geometryCollectionGeometry","drawLineString","lineStringGeometry","drawMultiLineString","multiLineStringGeometry","drawMultiPoint","multiPointGeometry","drawMultiPolygon","multiPolygonGeometry","drawPoint","pointGeometry","drawPolygon","polygonGeometry","drawText","setFillStrokeStyle","setImageStyle","imageStyle","opt_declutterGroup","setTextStyle","textStyle","Instruction","BEGIN_GEOMETRY","BEGIN_PATH","CLOSE_PATH","CUSTOM","DRAW_CHARS","DRAW_IMAGE","END_GEOMETRY","FILL","MOVE_TO_LINE_TO","SET_FILL_STYLE","SET_STROKE_STYLE","STROKE","Instruction_fillInstruction","Instruction_strokeInstruction","beginPathInstruction","closePathInstruction","canvas_Instruction","Builder_extends","Builder","CanvasBuilder","maxLineWidth","beginGeometryInstruction1_","beginGeometryInstruction2_","bufferedMaxExtent_","instructions","tmpCoordinate_","hitDetectionInstructions","applyPixelRatio","dashArray","dash","appendFlatCoordinates","closed","skipFirst","myEnd","getBufferedMaxExtent","lastRel","nextRel","lastXCoord","lastYCoord","nextCoord","skipped","drawCustomCoordinates_","builderEnds","builderEnd","beginGeometry","builderEndss","builderBegin","myEnds","endGeometry","finish","reverseHitDetectionInstructions","reverse","instruction","fillStyleColor","strokeStyleColor","strokeStyleLineCap","strokeStyleLineDash","strokeStyleLineDashOffset","strokeStyleLineJoin","strokeStyleWidth","strokeStyleMiterLimit","createFill","fillInstruction","applyStroke","createStroke","updateFillStyle","currentFillStyle","updateStrokeStyle","currentStrokeStyle","currentLineCap","currentLineDash","currentLineDashOffset","currentLineJoin","currentLineWidth","currentMiterLimit","endGeometryInstruction","ImageBuilder_extends","ImageBuilder","CanvasImageBuilder","declutterGroup_","hitDetectionImage_","anchorX_","anchorY_","height_","originX_","originY_","drawCoordinates_","myBegin","declutterGroup","hitDetectionImage","LineStringBuilder_extends","LineStringBuilder","CanvasLineStringBuilder","drawFlatCoordinates_","moveToLineToInstruction","lastStroke","PolygonBuilder_extends","PolygonBuilder","CanvasPolygonBuilder","drawFlatCoordinatess_","numEnds","setFillStrokeStyles_","circleInstruction","matchingChunk","maxAngle","m12","m23","x12","y12","x23","y23","chunkStart","chunkEnd","chunkM","acos","TextPlacement","LINE","TextBuilder_extends","TEXT_ALIGN","middle","hanging","alphabetic","ideographic","bottom","BATCH_CONSTRUCTORS","Default","Text","CanvasTextBuilder","labels_","textOffsetX_","textOffsetY_","textRotateWithView_","textRotation_","textFillState_","fillStates","textStrokeState_","strokeStates","textState_","textStates","textKey_","fillKey_","strokeKey_","fillState","strokeState","textState","geometryType","placement","textAlign","flatOffset","flatEnd","oo","range","drawChars_","geometryWidths","saveTextStates_","backgroundFill","backgroundStroke","pixelRatio_1","strokeKey","textKey","textBaseline","fillKey","baseline","textScale","textFillStyle","textStrokeStyle","getFont","getOverflow","getMaxAngle","getPlacement","getTextAlign","getTextBaseline","getBackgroundFill","getBackgroundStroke","getPadding","textOffsetX","getOffsetX","textOffsetY","getOffsetY","textRotateWithView","textRotation","canvas_BuilderGroup","BuilderGroup","tolerance_","maxExtent_","resolution_","buildersByZIndex_","addDeclutter","group","builderInstructions","zKey","builders","builderKey","builderInstruction","getBuilder","builderType","zIndexKey","replays","replay","Constructor","BuilderType","DEFAULT","IMAGE","drawTextOnPath","startM","measureAndCacheTextWidth","previousAngle","numChars","segmentM","chunk","chunkLength","char","charLength","charM","segmentPos","unshift","Executor_extends","tmpExtent","Executor_tmpTransform","p1","p2","p3","p4","canvas_Executor","Executor","overlaps","declutterTree","alignFill_","coordinateCache_","renderedTransform_","pixelCoordinates_","viewRotation_","widths_","getTextImage","align","lines","numLines","widths","currentWidth","measureTextWidths","lineHeight","renderWidth","leftRight","strokeText","fillText","replayTextBackground_","strokeInstruction","moveTo","setStrokeStyle_","replayImage_","snapToPixel","fillStroke","boxW","boxH","boxX","boxY","strokePadding","declutterArgs","origin_1","repeatSize","save","restore","renderDeclutter_","groupCount","box","declutterData","drawTextImageWithPointPlacement_","execute_","skippedFeaturesHash","featureCallback","opt_hitExtent","pixelCoordinates","transform1","transform2","dd","prevX","prevY","roundX","roundY","skipFeatures","pendingFill","pendingStroke","lastFillInstruction","lastStrokeInstruction","coordinateCache","viewRotation","batchSize","labelWithAnchor","widthIndex","measurePixelRatio","pixelRatioScale","cachedWidths","pathLength","textLength","cc","chars","execute","executeHitDetection","opt_featureCallback","ExecutorGroup_extends","ORDER","ExecutorGroup_ExecutorGroup","ExecutorGroup","allInstructions","opt_renderBuffer","declutterTree_","overlaps_","executorsByZIndex_","hitDetectionContext_","hitDetectionTransform_","createExecutors_","clip","flatClipCoords","getClipCoords","executors","instructionByZindex","hasExecutors","candidates","declutterReplays","hitExtent","contextSize","clearRect","declutteredFeatures","mask","circleArrayCache","arraySize","fillCircleArrayRowToMiddle","getCircleArray","imageData","getImageData","i_1","j_1","result_1","executor","zs","opt_builderTypes","opt_declutterReplays","builderTypes","0","canvas_ExecutorGroup","renderer_Layer_extends","renderer_Layer","LayerRenderer","layer_","loadedTileCallback","tiles","tileCoord","createLoadedTileFinder","tileRange","forEachLoadedTile","getLayer","handleImageChange_","renderIfReadyAndVisible","loadImage","imageState","canvas_Layer_extends","canvas_Layer","CanvasLayerRenderer","renderedResolution","tempTransform_","pixelTransform_","inversePixelTransform_","transformOrigin","halfWidth","halfHeight","topLeft","topRight","bottomRight","bottomLeft","clipUnrotated","inverted","dispatchRenderEvent_","preRender","postRender","getRenderTransform","renderPixel","Uint8Array","SIMPLIFY_TOLERANCE","GEOMETRY_RENDERERS","builderGroup","imageReplay","textReplay","lineStringReplay","polygonReplay","replayGroup","geometryRenderer","circleReplay","defaultOrder","feature1","feature2","getSquaredTolerance","getTolerance","renderFeature","renderGeometry","renderFeatureInternal","VectorLayer_extends","canvas_VectorLayer","CanvasVectorLayerRenderer","vectorLayer","rbush_default","dirty_","renderedRevision_","renderedResolution_","renderedExtent_","renderedRenderOrder_","replayGroup_","replayGroupChanged","handleFontsChanged_","canvasTransform","vectorSource","clipExtent","clipped","world","transform_1","transform_2","layer_1","features_1","handleStyleImageChange_","animating","interacting","frameStateExtent","vectorLayerRevision","vectorLayerRenderBuffer","vectorLayerRenderOrder","gutter","loadFeatures","dirty","features_2","forEachFeatureInExtent","replayGroupInstructions","executorGroup","getOverlaps","Vector_extends","Vector","VectorLayer","featureloader_xhr","url","success","failure","xhr","XMLHttpRequest","open","responseType","onload","status","responseText","responseXML","DOMParser","parseFromString","onerror","send","loadFeaturesXhr","loadingstrategy_all","Source_extends","adaptAttributions","attributionLike","source_Source","Source","attributions_","attributionsCollapsible_","attributionsCollapsible","wrapX_","wrapX","refresh","setAttributions","setState","VectorEventType","structs_RBush","RBush","opt_maxEntries","rbush_","items_","extents","uid","getAll","getInExtent","forEach_","forEachInExtent","source_Vector_extends","VectorSourceEvent","opt_feature","source_Vector","VectorSource","loader_","format_","url_","loader","strategy_","strategy","collection","useSpatialIndex","featuresRtree_","loadedExtentsRtree_","nullGeometryFeatures_","idIndex_","undefIdIndex_","featureChangeKeys_","featuresCollection_","addFeaturesInternal","bindFeaturesCollection_","addFeature","addFeatureInternal","featureKey","addToIndex_","setupChangeEvents_","handleFeatureChange_","valid","newFeatures","geometryFeatures","length_2","length_3","modifyingCollection","removeFeature","opt_fast","featureId","removeFeatureInternal","clearEvent","forEachFeature","forEachFeatureAtCoordinateDirect","forEachFeatureIntersectingExtent","getFeaturesCollection","getFeatures","getFeaturesAtCoordinate","getFeaturesInExtent","getClosestFeatureToCoordinate","opt_filter","closestFeature","previousMinSquaredDistance","minDistance","getFeatureById","getFormat","getUrl","sid","removeFromIdIndex_","hasFeature","loadedExtentsRtree","extentsToLoad","extentToLoad","removeLoadedExtent","removed","setLoader","setUrl","toPrecision","factor","ol_hashed","viewport","LOG2E","clientWidth","LN2","hashHandler","lib_default","onMoveEnd","DEFAULT_FILL_COLOR","style_Text","font_","textAlign_","textBaseline_","maxAngle_","placement_","overflow_","offsetX_","offsetY_","backgroundFill_","backgroundStroke_","padding_","setOverflow","setFont","setMaxAngle","setOffsetX","setOffsetY","setPlacement","setTextAlign","setTextBaseline","setBackgroundFill","setBackgroundStroke","setPadding","OverlayPositioning","BOTTOM_LEFT","BOTTOM_CENTER","BOTTOM_RIGHT","CENTER_LEFT","CENTER_CENTER","CENTER_RIGHT","TOP_LEFT","TOP_CENTER","TOP_RIGHT","Overlay_extends","Overlay_Property","ELEMENT","MAP","OFFSET","POSITION","POSITIONING","ol_Overlay","Overlay","insertFirst","autoPan","autoPanAnimation","autoPanMargin","rendered","bottom_","left_","right_","top_","mapPostrenderListenerKey","handleElementChanged","handleMapChanged","handleOffsetChanged","handlePositionChanged","handlePositioningChanged","setElement","setOffset","setPositioning","positioning","setPosition","getOffset","getPosition","getPositioning","updatePixelPosition","panIntoView","mapRect","getRect","overlayRect","offsetLeft","offsetRight","offsetTop","offsetBottom","centerPx","newCenterPx","pageXOffset","pageYOffset","mapSize","updateRenderedPosition","top_1","getOptions","colormap_default","getCountry","main_map","main_source","main_layer","popup","covid_deaths","covid_cases","toStringHDMS","lonLat","lon","toLonLat","$","popover","html"],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 30);\n","const util = require('util');\n\n/**\n * Get the type of a value.\n * @param {*} value The value.\n * @return {string} The type.\n */\nexports.typeOf = function typeOf(value) {\n  let type = typeof value;\n  if (type === 'object') {\n    if (value === null) {\n      type = 'null';\n    } else if (util.isArray(value)) {\n      type = 'array';\n    } else if (util.isDate(value)) {\n      type = 'date';\n    } else if (util.isRegExp(value)) {\n      type = 'regexp';\n    } else if (util.isError(value)) {\n      type = 'error';\n    }\n  }\n  return type;\n};\n\n/**\n * Copy properties from one object to another.\n * @param {Object} dest The destination object.\n * @param {Object} source The source object.\n * @return {Object} The destination object.\n */\nexports.extend = function(dest, source) {\n  for (const key in source) {\n    dest[key] = source[key];\n  }\n  return dest;\n};\n\n/**\n * Generate an array of alternating name, value from an object's properties.\n * @param {Object} object The object to zip.\n * @return {Array} The array of name, value [, name, value]*.\n */\nexports.zip = function(object) {\n  const zipped = [];\n  let count = 0;\n  for (const key in object) {\n    zipped[2 * count] = key;\n    zipped[2 * count + 1] = object[key];\n    ++count;\n  }\n  return zipped;\n};\n\n/**\n * Generate an object from an array of alternating name, value items.\n * @param {Array} array The array of name, value [, name, value]*.\n * @return {Object} The zipped up object.\n */\nexports.unzip = function(array) {\n  const object = {};\n  for (let i = 0, ii = array.length; i < ii; i += 2) {\n    object[array[i]] = array[i + 1];\n  }\n  return object;\n};\n","'use strict';\n\nmodule.exports = rbush;\nmodule.exports.default = rbush;\n\nvar quickselect = require('quickselect');\n\nfunction rbush(maxEntries, format) {\n    if (!(this instanceof rbush)) return new rbush(maxEntries, format);\n\n    // max entries in a node is 9 by default; min node fill is 40% for best performance\n    this._maxEntries = Math.max(4, maxEntries || 9);\n    this._minEntries = Math.max(2, Math.ceil(this._maxEntries * 0.4));\n\n    if (format) {\n        this._initFormat(format);\n    }\n\n    this.clear();\n}\n\nrbush.prototype = {\n\n    all: function () {\n        return this._all(this.data, []);\n    },\n\n    search: function (bbox) {\n\n        var node = this.data,\n            result = [],\n            toBBox = this.toBBox;\n\n        if (!intersects(bbox, node)) return result;\n\n        var nodesToSearch = [],\n            i, len, child, childBBox;\n\n        while (node) {\n            for (i = 0, len = node.children.length; i < len; i++) {\n\n                child = node.children[i];\n                childBBox = node.leaf ? toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf) result.push(child);\n                    else if (contains(bbox, childBBox)) this._all(child, result);\n                    else nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return result;\n    },\n\n    collides: function (bbox) {\n\n        var node = this.data,\n            toBBox = this.toBBox;\n\n        if (!intersects(bbox, node)) return false;\n\n        var nodesToSearch = [],\n            i, len, child, childBBox;\n\n        while (node) {\n            for (i = 0, len = node.children.length; i < len; i++) {\n\n                child = node.children[i];\n                childBBox = node.leaf ? toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf || contains(bbox, childBBox)) return true;\n                    nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return false;\n    },\n\n    load: function (data) {\n        if (!(data && data.length)) return this;\n\n        if (data.length < this._minEntries) {\n            for (var i = 0, len = data.length; i < len; i++) {\n                this.insert(data[i]);\n            }\n            return this;\n        }\n\n        // recursively build the tree with the given data from scratch using OMT algorithm\n        var node = this._build(data.slice(), 0, data.length - 1, 0);\n\n        if (!this.data.children.length) {\n            // save as is if tree is empty\n            this.data = node;\n\n        } else if (this.data.height === node.height) {\n            // split root if trees have the same height\n            this._splitRoot(this.data, node);\n\n        } else {\n            if (this.data.height < node.height) {\n                // swap trees if inserted one is bigger\n                var tmpNode = this.data;\n                this.data = node;\n                node = tmpNode;\n            }\n\n            // insert the small tree into the large tree at appropriate level\n            this._insert(node, this.data.height - node.height - 1, true);\n        }\n\n        return this;\n    },\n\n    insert: function (item) {\n        if (item) this._insert(item, this.data.height - 1);\n        return this;\n    },\n\n    clear: function () {\n        this.data = createNode([]);\n        return this;\n    },\n\n    remove: function (item, equalsFn) {\n        if (!item) return this;\n\n        var node = this.data,\n            bbox = this.toBBox(item),\n            path = [],\n            indexes = [],\n            i, parent, index, goingUp;\n\n        // depth-first iterative tree traversal\n        while (node || path.length) {\n\n            if (!node) { // go up\n                node = path.pop();\n                parent = path[path.length - 1];\n                i = indexes.pop();\n                goingUp = true;\n            }\n\n            if (node.leaf) { // check current node\n                index = findItem(item, node.children, equalsFn);\n\n                if (index !== -1) {\n                    // item found, remove the item and condense tree upwards\n                    node.children.splice(index, 1);\n                    path.push(node);\n                    this._condense(path);\n                    return this;\n                }\n            }\n\n            if (!goingUp && !node.leaf && contains(node, bbox)) { // go down\n                path.push(node);\n                indexes.push(i);\n                i = 0;\n                parent = node;\n                node = node.children[0];\n\n            } else if (parent) { // go right\n                i++;\n                node = parent.children[i];\n                goingUp = false;\n\n            } else node = null; // nothing found\n        }\n\n        return this;\n    },\n\n    toBBox: function (item) { return item; },\n\n    compareMinX: compareNodeMinX,\n    compareMinY: compareNodeMinY,\n\n    toJSON: function () { return this.data; },\n\n    fromJSON: function (data) {\n        this.data = data;\n        return this;\n    },\n\n    _all: function (node, result) {\n        var nodesToSearch = [];\n        while (node) {\n            if (node.leaf) result.push.apply(result, node.children);\n            else nodesToSearch.push.apply(nodesToSearch, node.children);\n\n            node = nodesToSearch.pop();\n        }\n        return result;\n    },\n\n    _build: function (items, left, right, height) {\n\n        var N = right - left + 1,\n            M = this._maxEntries,\n            node;\n\n        if (N <= M) {\n            // reached leaf level; return leaf\n            node = createNode(items.slice(left, right + 1));\n            calcBBox(node, this.toBBox);\n            return node;\n        }\n\n        if (!height) {\n            // target height of the bulk-loaded tree\n            height = Math.ceil(Math.log(N) / Math.log(M));\n\n            // target number of root entries to maximize storage utilization\n            M = Math.ceil(N / Math.pow(M, height - 1));\n        }\n\n        node = createNode([]);\n        node.leaf = false;\n        node.height = height;\n\n        // split the items into M mostly square tiles\n\n        var N2 = Math.ceil(N / M),\n            N1 = N2 * Math.ceil(Math.sqrt(M)),\n            i, j, right2, right3;\n\n        multiSelect(items, left, right, N1, this.compareMinX);\n\n        for (i = left; i <= right; i += N1) {\n\n            right2 = Math.min(i + N1 - 1, right);\n\n            multiSelect(items, i, right2, N2, this.compareMinY);\n\n            for (j = i; j <= right2; j += N2) {\n\n                right3 = Math.min(j + N2 - 1, right2);\n\n                // pack each entry recursively\n                node.children.push(this._build(items, j, right3, height - 1));\n            }\n        }\n\n        calcBBox(node, this.toBBox);\n\n        return node;\n    },\n\n    _chooseSubtree: function (bbox, node, level, path) {\n\n        var i, len, child, targetNode, area, enlargement, minArea, minEnlargement;\n\n        while (true) {\n            path.push(node);\n\n            if (node.leaf || path.length - 1 === level) break;\n\n            minArea = minEnlargement = Infinity;\n\n            for (i = 0, len = node.children.length; i < len; i++) {\n                child = node.children[i];\n                area = bboxArea(child);\n                enlargement = enlargedArea(bbox, child) - area;\n\n                // choose entry with the least area enlargement\n                if (enlargement < minEnlargement) {\n                    minEnlargement = enlargement;\n                    minArea = area < minArea ? area : minArea;\n                    targetNode = child;\n\n                } else if (enlargement === minEnlargement) {\n                    // otherwise choose one with the smallest area\n                    if (area < minArea) {\n                        minArea = area;\n                        targetNode = child;\n                    }\n                }\n            }\n\n            node = targetNode || node.children[0];\n        }\n\n        return node;\n    },\n\n    _insert: function (item, level, isNode) {\n\n        var toBBox = this.toBBox,\n            bbox = isNode ? item : toBBox(item),\n            insertPath = [];\n\n        // find the best node for accommodating the item, saving all nodes along the path too\n        var node = this._chooseSubtree(bbox, this.data, level, insertPath);\n\n        // put the item into the node\n        node.children.push(item);\n        extend(node, bbox);\n\n        // split on node overflow; propagate upwards if necessary\n        while (level >= 0) {\n            if (insertPath[level].children.length > this._maxEntries) {\n                this._split(insertPath, level);\n                level--;\n            } else break;\n        }\n\n        // adjust bboxes along the insertion path\n        this._adjustParentBBoxes(bbox, insertPath, level);\n    },\n\n    // split overflowed node into two\n    _split: function (insertPath, level) {\n\n        var node = insertPath[level],\n            M = node.children.length,\n            m = this._minEntries;\n\n        this._chooseSplitAxis(node, m, M);\n\n        var splitIndex = this._chooseSplitIndex(node, m, M);\n\n        var newNode = createNode(node.children.splice(splitIndex, node.children.length - splitIndex));\n        newNode.height = node.height;\n        newNode.leaf = node.leaf;\n\n        calcBBox(node, this.toBBox);\n        calcBBox(newNode, this.toBBox);\n\n        if (level) insertPath[level - 1].children.push(newNode);\n        else this._splitRoot(node, newNode);\n    },\n\n    _splitRoot: function (node, newNode) {\n        // split root node\n        this.data = createNode([node, newNode]);\n        this.data.height = node.height + 1;\n        this.data.leaf = false;\n        calcBBox(this.data, this.toBBox);\n    },\n\n    _chooseSplitIndex: function (node, m, M) {\n\n        var i, bbox1, bbox2, overlap, area, minOverlap, minArea, index;\n\n        minOverlap = minArea = Infinity;\n\n        for (i = m; i <= M - m; i++) {\n            bbox1 = distBBox(node, 0, i, this.toBBox);\n            bbox2 = distBBox(node, i, M, this.toBBox);\n\n            overlap = intersectionArea(bbox1, bbox2);\n            area = bboxArea(bbox1) + bboxArea(bbox2);\n\n            // choose distribution with minimum overlap\n            if (overlap < minOverlap) {\n                minOverlap = overlap;\n                index = i;\n\n                minArea = area < minArea ? area : minArea;\n\n            } else if (overlap === minOverlap) {\n                // otherwise choose distribution with minimum area\n                if (area < minArea) {\n                    minArea = area;\n                    index = i;\n                }\n            }\n        }\n\n        return index;\n    },\n\n    // sorts node children by the best axis for split\n    _chooseSplitAxis: function (node, m, M) {\n\n        var compareMinX = node.leaf ? this.compareMinX : compareNodeMinX,\n            compareMinY = node.leaf ? this.compareMinY : compareNodeMinY,\n            xMargin = this._allDistMargin(node, m, M, compareMinX),\n            yMargin = this._allDistMargin(node, m, M, compareMinY);\n\n        // if total distributions margin value is minimal for x, sort by minX,\n        // otherwise it's already sorted by minY\n        if (xMargin < yMargin) node.children.sort(compareMinX);\n    },\n\n    // total margin of all possible split distributions where each node is at least m full\n    _allDistMargin: function (node, m, M, compare) {\n\n        node.children.sort(compare);\n\n        var toBBox = this.toBBox,\n            leftBBox = distBBox(node, 0, m, toBBox),\n            rightBBox = distBBox(node, M - m, M, toBBox),\n            margin = bboxMargin(leftBBox) + bboxMargin(rightBBox),\n            i, child;\n\n        for (i = m; i < M - m; i++) {\n            child = node.children[i];\n            extend(leftBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(leftBBox);\n        }\n\n        for (i = M - m - 1; i >= m; i--) {\n            child = node.children[i];\n            extend(rightBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(rightBBox);\n        }\n\n        return margin;\n    },\n\n    _adjustParentBBoxes: function (bbox, path, level) {\n        // adjust bboxes along the given tree path\n        for (var i = level; i >= 0; i--) {\n            extend(path[i], bbox);\n        }\n    },\n\n    _condense: function (path) {\n        // go through the path, removing empty nodes and updating bboxes\n        for (var i = path.length - 1, siblings; i >= 0; i--) {\n            if (path[i].children.length === 0) {\n                if (i > 0) {\n                    siblings = path[i - 1].children;\n                    siblings.splice(siblings.indexOf(path[i]), 1);\n\n                } else this.clear();\n\n            } else calcBBox(path[i], this.toBBox);\n        }\n    },\n\n    _initFormat: function (format) {\n        // data format (minX, minY, maxX, maxY accessors)\n\n        // uses eval-type function compilation instead of just accepting a toBBox function\n        // because the algorithms are very sensitive to sorting functions performance,\n        // so they should be dead simple and without inner calls\n\n        var compareArr = ['return a', ' - b', ';'];\n\n        this.compareMinX = new Function('a', 'b', compareArr.join(format[0]));\n        this.compareMinY = new Function('a', 'b', compareArr.join(format[1]));\n\n        this.toBBox = new Function('a',\n            'return {minX: a' + format[0] +\n            ', minY: a' + format[1] +\n            ', maxX: a' + format[2] +\n            ', maxY: a' + format[3] + '};');\n    }\n};\n\nfunction findItem(item, items, equalsFn) {\n    if (!equalsFn) return items.indexOf(item);\n\n    for (var i = 0; i < items.length; i++) {\n        if (equalsFn(item, items[i])) return i;\n    }\n    return -1;\n}\n\n// calculate node's bbox from bboxes of its children\nfunction calcBBox(node, toBBox) {\n    distBBox(node, 0, node.children.length, toBBox, node);\n}\n\n// min bounding rectangle of node children from k to p-1\nfunction distBBox(node, k, p, toBBox, destNode) {\n    if (!destNode) destNode = createNode(null);\n    destNode.minX = Infinity;\n    destNode.minY = Infinity;\n    destNode.maxX = -Infinity;\n    destNode.maxY = -Infinity;\n\n    for (var i = k, child; i < p; i++) {\n        child = node.children[i];\n        extend(destNode, node.leaf ? toBBox(child) : child);\n    }\n\n    return destNode;\n}\n\nfunction extend(a, b) {\n    a.minX = Math.min(a.minX, b.minX);\n    a.minY = Math.min(a.minY, b.minY);\n    a.maxX = Math.max(a.maxX, b.maxX);\n    a.maxY = Math.max(a.maxY, b.maxY);\n    return a;\n}\n\nfunction compareNodeMinX(a, b) { return a.minX - b.minX; }\nfunction compareNodeMinY(a, b) { return a.minY - b.minY; }\n\nfunction bboxArea(a)   { return (a.maxX - a.minX) * (a.maxY - a.minY); }\nfunction bboxMargin(a) { return (a.maxX - a.minX) + (a.maxY - a.minY); }\n\nfunction enlargedArea(a, b) {\n    return (Math.max(b.maxX, a.maxX) - Math.min(b.minX, a.minX)) *\n           (Math.max(b.maxY, a.maxY) - Math.min(b.minY, a.minY));\n}\n\nfunction intersectionArea(a, b) {\n    var minX = Math.max(a.minX, b.minX),\n        minY = Math.max(a.minY, b.minY),\n        maxX = Math.min(a.maxX, b.maxX),\n        maxY = Math.min(a.maxY, b.maxY);\n\n    return Math.max(0, maxX - minX) *\n           Math.max(0, maxY - minY);\n}\n\nfunction contains(a, b) {\n    return a.minX <= b.minX &&\n           a.minY <= b.minY &&\n           b.maxX <= a.maxX &&\n           b.maxY <= a.maxY;\n}\n\nfunction intersects(a, b) {\n    return b.minX <= a.maxX &&\n           b.minY <= a.maxY &&\n           b.maxX >= a.minX &&\n           b.maxY >= a.minY;\n}\n\nfunction createNode(children) {\n    return {\n        children: children,\n        height: 1,\n        leaf: true,\n        minX: Infinity,\n        minY: Infinity,\n        maxX: -Infinity,\n        maxY: -Infinity\n    };\n}\n\n// sort an array so that items come in groups of n unsorted items, with groups sorted between each other;\n// combines selection algorithm with binary divide & conquer approach\n\nfunction multiSelect(arr, left, right, n, compare) {\n    var stack = [left, right],\n        mid;\n\n    while (stack.length) {\n        right = stack.pop();\n        left = stack.pop();\n\n        if (right - left <= n) continue;\n\n        mid = left + Math.ceil((right - left) / n / 2) * n;\n        quickselect(arr, mid, left, right, compare);\n\n        stack.push(left, mid, mid, right);\n    }\n}\n","const Store = require('./store').Store;\nconst hash = require('./hash');\n\nlet store;\n\nfunction reset() {\n  if (store) {\n    window.removeEventListener('popstate', update);\n  }\n  window.addEventListener('popstate', update);\n  store = new Store(hash.deserialize(location.hash), function(\n    values,\n    defaults\n  ) {\n    const nonDefaults = {};\n    for (const key in values) {\n      if (values[key] !== defaults[key]) {\n        nonDefaults[key] = values[key];\n      }\n    }\n    history.pushState(values, '', hash.serialize(nonDefaults));\n  });\n}\n\nfunction update() {\n  store.update(hash.deserialize(location.hash));\n}\n\n/**\n * Register a new state provider.\n * @param {Object} config Schema config.\n * @param {function(Object)} callback Called immediately with initial state.\n * @return {function(Object)} Call this function with any updates to the state.\n */\nexports.register = function(config, callback) {\n  return store.register(config, callback);\n};\n\n/**\n * Unregister an existing state provider.\n * @param {function(Object)} callback Callback registered by the provider.\n */\nexports.unregister = function(callback) {\n  store.unregister(callback);\n};\n\n/**\n * Serialize values as they would be represented in the hash.\n * @param {Object} values An object with values to be serialized.\n * @return {string} The values as they would be represented in the hash.\n */\nexports.serialize = function(values) {\n  return hash.serialize(store.serialize(values));\n};\n\nexports.reset = reset;\n\nreset();\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar getOwnPropertyDescriptors = Object.getOwnPropertyDescriptors ||\n  function getOwnPropertyDescriptors(obj) {\n    var keys = Object.keys(obj);\n    var descriptors = {};\n    for (var i = 0; i < keys.length; i++) {\n      descriptors[keys[i]] = Object.getOwnPropertyDescriptor(obj, keys[i]);\n    }\n    return descriptors;\n  };\n\nvar formatRegExp = /%[sdj%]/g;\nexports.format = function(f) {\n  if (!isString(f)) {\n    var objects = [];\n    for (var i = 0; i < arguments.length; i++) {\n      objects.push(inspect(arguments[i]));\n    }\n    return objects.join(' ');\n  }\n\n  var i = 1;\n  var args = arguments;\n  var len = args.length;\n  var str = String(f).replace(formatRegExp, function(x) {\n    if (x === '%%') return '%';\n    if (i >= len) return x;\n    switch (x) {\n      case '%s': return String(args[i++]);\n      case '%d': return Number(args[i++]);\n      case '%j':\n        try {\n          return JSON.stringify(args[i++]);\n        } catch (_) {\n          return '[Circular]';\n        }\n      default:\n        return x;\n    }\n  });\n  for (var x = args[i]; i < len; x = args[++i]) {\n    if (isNull(x) || !isObject(x)) {\n      str += ' ' + x;\n    } else {\n      str += ' ' + inspect(x);\n    }\n  }\n  return str;\n};\n\n\n// Mark that a method should not be used.\n// Returns a modified function which warns once by default.\n// If --no-deprecation is set, then it is a no-op.\nexports.deprecate = function(fn, msg) {\n  if (typeof process !== 'undefined' && process.noDeprecation === true) {\n    return fn;\n  }\n\n  // Allow for deprecating things in the process of starting up.\n  if (typeof process === 'undefined') {\n    return function() {\n      return exports.deprecate(fn, msg).apply(this, arguments);\n    };\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (process.throwDeprecation) {\n        throw new Error(msg);\n      } else if (process.traceDeprecation) {\n        console.trace(msg);\n      } else {\n        console.error(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n};\n\n\nvar debugs = {};\nvar debugEnviron;\nexports.debuglog = function(set) {\n  if (isUndefined(debugEnviron))\n    debugEnviron = process.env.NODE_DEBUG || '';\n  set = set.toUpperCase();\n  if (!debugs[set]) {\n    if (new RegExp('\\\\b' + set + '\\\\b', 'i').test(debugEnviron)) {\n      var pid = process.pid;\n      debugs[set] = function() {\n        var msg = exports.format.apply(exports, arguments);\n        console.error('%s %d: %s', set, pid, msg);\n      };\n    } else {\n      debugs[set] = function() {};\n    }\n  }\n  return debugs[set];\n};\n\n\n/**\n * Echos the value of a value. Trys to print the value out\n * in the best way possible given the different types.\n *\n * @param {Object} obj The object to print out.\n * @param {Object} opts Optional options object that alters the output.\n */\n/* legacy: obj, showHidden, depth, colors*/\nfunction inspect(obj, opts) {\n  // default options\n  var ctx = {\n    seen: [],\n    stylize: stylizeNoColor\n  };\n  // legacy...\n  if (arguments.length >= 3) ctx.depth = arguments[2];\n  if (arguments.length >= 4) ctx.colors = arguments[3];\n  if (isBoolean(opts)) {\n    // legacy...\n    ctx.showHidden = opts;\n  } else if (opts) {\n    // got an \"options\" object\n    exports._extend(ctx, opts);\n  }\n  // set default options\n  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;\n  if (isUndefined(ctx.depth)) ctx.depth = 2;\n  if (isUndefined(ctx.colors)) ctx.colors = false;\n  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;\n  if (ctx.colors) ctx.stylize = stylizeWithColor;\n  return formatValue(ctx, obj, ctx.depth);\n}\nexports.inspect = inspect;\n\n\n// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\ninspect.colors = {\n  'bold' : [1, 22],\n  'italic' : [3, 23],\n  'underline' : [4, 24],\n  'inverse' : [7, 27],\n  'white' : [37, 39],\n  'grey' : [90, 39],\n  'black' : [30, 39],\n  'blue' : [34, 39],\n  'cyan' : [36, 39],\n  'green' : [32, 39],\n  'magenta' : [35, 39],\n  'red' : [31, 39],\n  'yellow' : [33, 39]\n};\n\n// Don't use 'blue' not visible on cmd.exe\ninspect.styles = {\n  'special': 'cyan',\n  'number': 'yellow',\n  'boolean': 'yellow',\n  'undefined': 'grey',\n  'null': 'bold',\n  'string': 'green',\n  'date': 'magenta',\n  // \"name\": intentionally not styling\n  'regexp': 'red'\n};\n\n\nfunction stylizeWithColor(str, styleType) {\n  var style = inspect.styles[styleType];\n\n  if (style) {\n    return '\\u001b[' + inspect.colors[style][0] + 'm' + str +\n           '\\u001b[' + inspect.colors[style][1] + 'm';\n  } else {\n    return str;\n  }\n}\n\n\nfunction stylizeNoColor(str, styleType) {\n  return str;\n}\n\n\nfunction arrayToHash(array) {\n  var hash = {};\n\n  array.forEach(function(val, idx) {\n    hash[val] = true;\n  });\n\n  return hash;\n}\n\n\nfunction formatValue(ctx, value, recurseTimes) {\n  // Provide a hook for user-specified inspect functions.\n  // Check that value is an object with an inspect function on it\n  if (ctx.customInspect &&\n      value &&\n      isFunction(value.inspect) &&\n      // Filter out the util module, it's inspect function is special\n      value.inspect !== exports.inspect &&\n      // Also filter out any prototype objects using the circular check.\n      !(value.constructor && value.constructor.prototype === value)) {\n    var ret = value.inspect(recurseTimes, ctx);\n    if (!isString(ret)) {\n      ret = formatValue(ctx, ret, recurseTimes);\n    }\n    return ret;\n  }\n\n  // Primitive types cannot have properties\n  var primitive = formatPrimitive(ctx, value);\n  if (primitive) {\n    return primitive;\n  }\n\n  // Look up the keys of the object.\n  var keys = Object.keys(value);\n  var visibleKeys = arrayToHash(keys);\n\n  if (ctx.showHidden) {\n    keys = Object.getOwnPropertyNames(value);\n  }\n\n  // IE doesn't make error fields non-enumerable\n  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx\n  if (isError(value)\n      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {\n    return formatError(value);\n  }\n\n  // Some type of object without properties can be shortcutted.\n  if (keys.length === 0) {\n    if (isFunction(value)) {\n      var name = value.name ? ': ' + value.name : '';\n      return ctx.stylize('[Function' + name + ']', 'special');\n    }\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    }\n    if (isDate(value)) {\n      return ctx.stylize(Date.prototype.toString.call(value), 'date');\n    }\n    if (isError(value)) {\n      return formatError(value);\n    }\n  }\n\n  var base = '', array = false, braces = ['{', '}'];\n\n  // Make Array say that they are Array\n  if (isArray(value)) {\n    array = true;\n    braces = ['[', ']'];\n  }\n\n  // Make functions say that they are functions\n  if (isFunction(value)) {\n    var n = value.name ? ': ' + value.name : '';\n    base = ' [Function' + n + ']';\n  }\n\n  // Make RegExps say that they are RegExps\n  if (isRegExp(value)) {\n    base = ' ' + RegExp.prototype.toString.call(value);\n  }\n\n  // Make dates with properties first say the date\n  if (isDate(value)) {\n    base = ' ' + Date.prototype.toUTCString.call(value);\n  }\n\n  // Make error with message first say the error\n  if (isError(value)) {\n    base = ' ' + formatError(value);\n  }\n\n  if (keys.length === 0 && (!array || value.length == 0)) {\n    return braces[0] + base + braces[1];\n  }\n\n  if (recurseTimes < 0) {\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    } else {\n      return ctx.stylize('[Object]', 'special');\n    }\n  }\n\n  ctx.seen.push(value);\n\n  var output;\n  if (array) {\n    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n  } else {\n    output = keys.map(function(key) {\n      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n    });\n  }\n\n  ctx.seen.pop();\n\n  return reduceToSingleString(output, base, braces);\n}\n\n\nfunction formatPrimitive(ctx, value) {\n  if (isUndefined(value))\n    return ctx.stylize('undefined', 'undefined');\n  if (isString(value)) {\n    var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '')\n                                             .replace(/'/g, \"\\\\'\")\n                                             .replace(/\\\\\"/g, '\"') + '\\'';\n    return ctx.stylize(simple, 'string');\n  }\n  if (isNumber(value))\n    return ctx.stylize('' + value, 'number');\n  if (isBoolean(value))\n    return ctx.stylize('' + value, 'boolean');\n  // For some reason typeof null is \"object\", so special case here.\n  if (isNull(value))\n    return ctx.stylize('null', 'null');\n}\n\n\nfunction formatError(value) {\n  return '[' + Error.prototype.toString.call(value) + ']';\n}\n\n\nfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n  var output = [];\n  for (var i = 0, l = value.length; i < l; ++i) {\n    if (hasOwnProperty(value, String(i))) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          String(i), true));\n    } else {\n      output.push('');\n    }\n  }\n  keys.forEach(function(key) {\n    if (!key.match(/^\\d+$/)) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          key, true));\n    }\n  });\n  return output;\n}\n\n\nfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n  var name, str, desc;\n  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };\n  if (desc.get) {\n    if (desc.set) {\n      str = ctx.stylize('[Getter/Setter]', 'special');\n    } else {\n      str = ctx.stylize('[Getter]', 'special');\n    }\n  } else {\n    if (desc.set) {\n      str = ctx.stylize('[Setter]', 'special');\n    }\n  }\n  if (!hasOwnProperty(visibleKeys, key)) {\n    name = '[' + key + ']';\n  }\n  if (!str) {\n    if (ctx.seen.indexOf(desc.value) < 0) {\n      if (isNull(recurseTimes)) {\n        str = formatValue(ctx, desc.value, null);\n      } else {\n        str = formatValue(ctx, desc.value, recurseTimes - 1);\n      }\n      if (str.indexOf('\\n') > -1) {\n        if (array) {\n          str = str.split('\\n').map(function(line) {\n            return '  ' + line;\n          }).join('\\n').substr(2);\n        } else {\n          str = '\\n' + str.split('\\n').map(function(line) {\n            return '   ' + line;\n          }).join('\\n');\n        }\n      }\n    } else {\n      str = ctx.stylize('[Circular]', 'special');\n    }\n  }\n  if (isUndefined(name)) {\n    if (array && key.match(/^\\d+$/)) {\n      return str;\n    }\n    name = JSON.stringify('' + key);\n    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n      name = name.substr(1, name.length - 2);\n      name = ctx.stylize(name, 'name');\n    } else {\n      name = name.replace(/'/g, \"\\\\'\")\n                 .replace(/\\\\\"/g, '\"')\n                 .replace(/(^\"|\"$)/g, \"'\");\n      name = ctx.stylize(name, 'string');\n    }\n  }\n\n  return name + ': ' + str;\n}\n\n\nfunction reduceToSingleString(output, base, braces) {\n  var numLinesEst = 0;\n  var length = output.reduce(function(prev, cur) {\n    numLinesEst++;\n    if (cur.indexOf('\\n') >= 0) numLinesEst++;\n    return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1;\n  }, 0);\n\n  if (length > 60) {\n    return braces[0] +\n           (base === '' ? '' : base + '\\n ') +\n           ' ' +\n           output.join(',\\n  ') +\n           ' ' +\n           braces[1];\n  }\n\n  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n}\n\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\nfunction isArray(ar) {\n  return Array.isArray(ar);\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return isObject(re) && objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return isObject(d) && objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\n\nfunction isError(e) {\n  return isObject(e) &&\n      (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = require('./support/isBuffer');\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\n\nfunction pad(n) {\n  return n < 10 ? '0' + n.toString(10) : n.toString(10);\n}\n\n\nvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',\n              'Oct', 'Nov', 'Dec'];\n\n// 26 Feb 16:19:34\nfunction timestamp() {\n  var d = new Date();\n  var time = [pad(d.getHours()),\n              pad(d.getMinutes()),\n              pad(d.getSeconds())].join(':');\n  return [d.getDate(), months[d.getMonth()], time].join(' ');\n}\n\n\n// log is just a thin wrapper to console.log that prepends a timestamp\nexports.log = function() {\n  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));\n};\n\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * The Function.prototype.inherits from lang.js rewritten as a standalone\n * function (not on Function.prototype). NOTE: If this file is to be loaded\n * during bootstrapping this function needs to be rewritten using some native\n * functions as prototype setup using normal JavaScript does not work as\n * expected during bootstrapping (see mirror.js in r114903).\n *\n * @param {function} ctor Constructor function which needs to inherit the\n *     prototype.\n * @param {function} superCtor Constructor function to inherit prototype from.\n */\nexports.inherits = require('inherits');\n\nexports._extend = function(origin, add) {\n  // Don't do anything if add isn't an object\n  if (!add || !isObject(add)) return origin;\n\n  var keys = Object.keys(add);\n  var i = keys.length;\n  while (i--) {\n    origin[keys[i]] = add[keys[i]];\n  }\n  return origin;\n};\n\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nvar kCustomPromisifiedSymbol = typeof Symbol !== 'undefined' ? Symbol('util.promisify.custom') : undefined;\n\nexports.promisify = function promisify(original) {\n  if (typeof original !== 'function')\n    throw new TypeError('The \"original\" argument must be of type Function');\n\n  if (kCustomPromisifiedSymbol && original[kCustomPromisifiedSymbol]) {\n    var fn = original[kCustomPromisifiedSymbol];\n    if (typeof fn !== 'function') {\n      throw new TypeError('The \"util.promisify.custom\" argument must be of type Function');\n    }\n    Object.defineProperty(fn, kCustomPromisifiedSymbol, {\n      value: fn, enumerable: false, writable: false, configurable: true\n    });\n    return fn;\n  }\n\n  function fn() {\n    var promiseResolve, promiseReject;\n    var promise = new Promise(function (resolve, reject) {\n      promiseResolve = resolve;\n      promiseReject = reject;\n    });\n\n    var args = [];\n    for (var i = 0; i < arguments.length; i++) {\n      args.push(arguments[i]);\n    }\n    args.push(function (err, value) {\n      if (err) {\n        promiseReject(err);\n      } else {\n        promiseResolve(value);\n      }\n    });\n\n    try {\n      original.apply(this, args);\n    } catch (err) {\n      promiseReject(err);\n    }\n\n    return promise;\n  }\n\n  Object.setPrototypeOf(fn, Object.getPrototypeOf(original));\n\n  if (kCustomPromisifiedSymbol) Object.defineProperty(fn, kCustomPromisifiedSymbol, {\n    value: fn, enumerable: false, writable: false, configurable: true\n  });\n  return Object.defineProperties(\n    fn,\n    getOwnPropertyDescriptors(original)\n  );\n}\n\nexports.promisify.custom = kCustomPromisifiedSymbol\n\nfunction callbackifyOnRejected(reason, cb) {\n  // `!reason` guard inspired by bluebird (Ref: https://goo.gl/t5IS6M).\n  // Because `null` is a special error value in callbacks which means \"no error\n  // occurred\", we error-wrap so the callback consumer can distinguish between\n  // \"the promise rejected with null\" or \"the promise fulfilled with undefined\".\n  if (!reason) {\n    var newReason = new Error('Promise was rejected with a falsy value');\n    newReason.reason = reason;\n    reason = newReason;\n  }\n  return cb(reason);\n}\n\nfunction callbackify(original) {\n  if (typeof original !== 'function') {\n    throw new TypeError('The \"original\" argument must be of type Function');\n  }\n\n  // We DO NOT return the promise as it gives the user a false sense that\n  // the promise is actually somehow related to the callback's execution\n  // and that the callback throwing will reject the promise.\n  function callbackified() {\n    var args = [];\n    for (var i = 0; i < arguments.length; i++) {\n      args.push(arguments[i]);\n    }\n\n    var maybeCb = args.pop();\n    if (typeof maybeCb !== 'function') {\n      throw new TypeError('The last argument must be of type Function');\n    }\n    var self = this;\n    var cb = function() {\n      return maybeCb.apply(self, arguments);\n    };\n    // In true node style we process the callback on `nextTick` with all the\n    // implications (stack, `uncaughtException`, `async_hooks`)\n    original.apply(this, args)\n      .then(function(ret) { process.nextTick(cb, null, ret) },\n            function(rej) { process.nextTick(callbackifyOnRejected, rej, cb) });\n  }\n\n  Object.setPrototypeOf(callbackified, Object.getPrototypeOf(original));\n  Object.defineProperties(callbackified,\n                          getOwnPropertyDescriptors(original));\n  return callbackified;\n}\nexports.callbackify = callbackify;\n","const util = require('util');\n\nconst enc = encodeURIComponent;\n\nconst serializers = {\n  string: function(str) {\n    if (typeof str !== 'string') {\n      throw new Error('Expected string to serialize: ' + str);\n    }\n    return enc(str);\n  },\n  number: function(num) {\n    if (typeof num !== 'number') {\n      throw new Error('Expected number to serialize: ' + num);\n    }\n    return enc(String(num));\n  },\n  boolean: function(bool) {\n    if (typeof bool !== 'boolean') {\n      throw new Error('Expected boolean to serialize: ' + bool);\n    }\n    return bool ? '1' : '0';\n  },\n  date: function(date) {\n    if (!util.isDate(date)) {\n      throw new Error('Expected date to serialize: ' + date);\n    }\n    return enc(date.toISOString());\n  },\n  array: function(array) {\n    if (!util.isArray(array)) {\n      throw new Error('Expected array to serialize: ' + array);\n    }\n    return enc(JSON.stringify(array));\n  },\n  object: function(obj) {\n    return enc(JSON.stringify(obj));\n  }\n};\n\n/**\n * Get a serializer for a value of the given type.\n * @param {string} type Value type.\n * @return {function(*): string} Function that serializes a value to a string.\n */\nexports.get = function(type) {\n  if (!(type in serializers)) {\n    throw new Error('Unable to serialize type: ' + type);\n  }\n  return serializers[type];\n};\n","/*\n * Ben Postlethwaite\n * January 2013\n * License MIT\n */\n'use strict';\n\nvar colorScale = require('./colorScale');\nvar lerp = require('lerp')\n\nmodule.exports = createColormap;\n\nfunction createColormap (spec) {\n    /*\n     * Default Options\n     */\n    var indicies, fromrgba, torgba,\n        nsteps, cmap, colormap, format,\n        nshades, colors, alpha, i;\n\n    if ( !spec ) spec = {};\n\n    nshades = (spec.nshades || 72) - 1;\n    format = spec.format || 'hex';\n\n    colormap = spec.colormap;\n    if (!colormap) colormap = 'jet';\n\n    if (typeof colormap === 'string') {\n        colormap = colormap.toLowerCase();\n\n        if (!colorScale[colormap]) {\n            throw Error(colormap + ' not a supported colorscale');\n        }\n\n        cmap = colorScale[colormap];\n\n    } else if (Array.isArray(colormap)) {\n        cmap = colormap.slice();\n\n    } else {\n        throw Error('unsupported colormap option', colormap);\n    }\n\n    if (cmap.length > nshades + 1) {\n        throw new Error(\n            colormap+' map requires nshades to be at least size '+cmap.length\n        );\n    }\n\n    if (!Array.isArray(spec.alpha)) {\n\n        if (typeof spec.alpha === 'number') {\n            alpha = [spec.alpha, spec.alpha];\n\n        } else {\n            alpha = [1, 1];\n        }\n\n    } else if (spec.alpha.length !== 2) {\n        alpha = [1, 1];\n\n    } else {\n        alpha = spec.alpha.slice();\n    }\n\n    // map index points from 0..1 to 0..n-1\n    indicies = cmap.map(function(c) {\n        return Math.round(c.index * nshades);\n    });\n\n    // Add alpha channel to the map\n    alpha[0] = Math.min(Math.max(alpha[0], 0), 1);\n    alpha[1] = Math.min(Math.max(alpha[1], 0), 1);\n\n    var steps = cmap.map(function(c, i) {\n        var index = cmap[i].index\n\n        var rgba = cmap[i].rgb.slice();\n\n        // if user supplies their own map use it\n        if (rgba.length === 4 && rgba[3] >= 0 && rgba[3] <= 1) {\n            return rgba\n        }\n        rgba[3] = alpha[0] + (alpha[1] - alpha[0])*index;\n\n        return rgba\n    })\n\n\n    /*\n     * map increasing linear values between indicies to\n     * linear steps in colorvalues\n     */\n    var colors = []\n    for (i = 0; i < indicies.length-1; ++i) {\n        nsteps = indicies[i+1] - indicies[i];\n        fromrgba = steps[i];\n        torgba = steps[i+1];\n\n        for (var j = 0; j < nsteps; j++) {\n            var amt = j / nsteps\n            colors.push([\n                Math.round(lerp(fromrgba[0], torgba[0], amt)),\n                Math.round(lerp(fromrgba[1], torgba[1], amt)),\n                Math.round(lerp(fromrgba[2], torgba[2], amt)),\n                lerp(fromrgba[3], torgba[3], amt)\n            ])\n        }\n    }\n\n    //add 1 step as last value\n    colors.push(cmap[cmap.length - 1].rgb.concat(alpha[1]))\n\n    if (format === 'hex') colors = colors.map( rgb2hex );\n    else if (format === 'rgbaString') colors = colors.map( rgbaStr );\n    else if (format === 'float') colors = colors.map( rgb2float );\n\n    return colors;\n};\n\nfunction rgb2float (rgba) {\n    return [\n        rgba[0] / 255,\n        rgba[1] / 255,\n        rgba[2] / 255,\n        rgba[3]\n    ]\n}\n\nfunction rgb2hex (rgba) {\n    var dig, hex = '#';\n    for (var i = 0; i < 3; ++i) {\n        dig = rgba[i];\n        dig = dig.toString(16);\n        hex += ('00' + dig).substr( dig.length );\n    }\n    return hex;\n}\n\nfunction rgbaStr (rgba) {\n    return 'rgba(' + rgba.join(',') + ')';\n}\n","\nvar content = require(\"!!../css-loader/dist/cjs.js!./ol.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../css-loader/dist/cjs.js!./ol.css\", function() {\n\t\tvar newContent = require(\"!!../css-loader/dist/cjs.js!./ol.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \".ol-box {\\n  box-sizing: border-box;\\n  border-radius: 2px;\\n  border: 2px solid blue;\\n}\\n\\n.ol-mouse-position {\\n  top: 8px;\\n  right: 8px;\\n  position: absolute;\\n}\\n\\n.ol-scale-line {\\n  background: rgba(0,60,136,0.3);\\n  border-radius: 4px;\\n  bottom: 8px;\\n  left: 8px;\\n  padding: 2px;\\n  position: absolute;\\n}\\n.ol-scale-line-inner {\\n  border: 1px solid #eee;\\n  border-top: none;\\n  color: #eee;\\n  font-size: 10px;\\n  text-align: center;\\n  margin: 1px;\\n  will-change: contents, width;\\n  transition: all 0.25s;\\n}\\n.ol-scale-bar {\\n  position: absolute;\\n  bottom: 8px;\\n  left: 8px;\\n}\\n.ol-scale-step-marker {\\n  width: 1px;\\n  height: 15px;\\n  background-color: #000000;\\n  float: right;\\n  z-Index: 10;\\n}\\n.ol-scale-step-text {\\n  position: absolute;\\n  bottom: -5px;\\n  font-size: 12px;\\n  z-Index: 11;\\n  color: #000000;\\n  text-shadow: -2px 0 #FFFFFF, 0 2px #FFFFFF, 2px 0 #FFFFFF, 0 -2px #FFFFFF;\\n}\\n.ol-scale-text {\\n  position: absolute;\\n  font-size: 14px;\\n  text-align: center;\\n  bottom: 25px;\\n  color: #000000;\\n  text-shadow: -2px 0 #FFFFFF, 0 2px #FFFFFF, 2px 0 #FFFFFF, 0 -2px #FFFFFF;\\n}\\n.ol-scale-singlebar {\\n  position: relative;\\n  height: 10px;\\n  z-Index: 9;\\n  border: 1px solid black;\\n}\\n\\n.ol-overlay-container {\\n  will-change: left,right,top,bottom;\\n}\\n\\n.ol-unsupported {\\n  display: none;\\n}\\n.ol-viewport, .ol-unselectable {\\n  -webkit-touch-callout: none;\\n  -webkit-user-select: none;\\n  -moz-user-select: none;\\n  -ms-user-select: none;\\n  user-select: none;\\n  -webkit-tap-highlight-color: rgba(0,0,0,0);\\n}\\n.ol-selectable {\\n  -webkit-touch-callout: default;\\n  -webkit-user-select: text;\\n  -moz-user-select: text;\\n  -ms-user-select: text;\\n  user-select: text;\\n}\\n.ol-grabbing {\\n  cursor: -webkit-grabbing;\\n  cursor: -moz-grabbing;\\n  cursor: grabbing;\\n}\\n.ol-grab {\\n  cursor: move;\\n  cursor: -webkit-grab;\\n  cursor: -moz-grab;\\n  cursor: grab;\\n}\\n.ol-control {\\n  position: absolute;\\n  background-color: rgba(255,255,255,0.4);\\n  border-radius: 4px;\\n  padding: 2px;\\n}\\n.ol-control:hover {\\n  background-color: rgba(255,255,255,0.6);\\n}\\n.ol-zoom {\\n  top: .5em;\\n  left: .5em;\\n}\\n.ol-rotate {\\n  top: .5em;\\n  right: .5em;\\n  transition: opacity .25s linear, visibility 0s linear;\\n}\\n.ol-rotate.ol-hidden {\\n  opacity: 0;\\n  visibility: hidden;\\n  transition: opacity .25s linear, visibility 0s linear .25s;\\n}\\n.ol-zoom-extent {\\n  top: 4.643em;\\n  left: .5em;\\n}\\n.ol-full-screen {\\n  right: .5em;\\n  top: .5em;\\n}\\n@media print {\\n  .ol-control {\\n    display: none;\\n  }\\n}\\n\\n.ol-control button {\\n  display: block;\\n  margin: 1px;\\n  padding: 0;\\n  color: white;\\n  font-size: 1.14em;\\n  font-weight: bold;\\n  text-decoration: none;\\n  text-align: center;\\n  height: 1.375em;\\n  width: 1.375em;\\n  line-height: .4em;\\n  background-color: rgba(0,60,136,0.5);\\n  border: none;\\n  border-radius: 2px;\\n}\\n.ol-control button::-moz-focus-inner {\\n  border: none;\\n  padding: 0;\\n}\\n.ol-zoom-extent button {\\n  line-height: 1.4em;\\n}\\n.ol-compass {\\n  display: block;\\n  font-weight: normal;\\n  font-size: 1.2em;\\n  will-change: transform;\\n}\\n.ol-touch .ol-control button {\\n  font-size: 1.5em;\\n}\\n.ol-touch .ol-zoom-extent {\\n  top: 5.5em;\\n}\\n.ol-control button:hover,\\n.ol-control button:focus {\\n  text-decoration: none;\\n  background-color: rgba(0,60,136,0.7);\\n}\\n.ol-zoom .ol-zoom-in {\\n  border-radius: 2px 2px 0 0;\\n}\\n.ol-zoom .ol-zoom-out {\\n  border-radius: 0 0 2px 2px;\\n}\\n\\n\\n.ol-attribution {\\n  text-align: right;\\n  bottom: .5em;\\n  right: .5em;\\n  max-width: calc(100% - 1.3em);\\n}\\n\\n.ol-attribution ul {\\n  margin: 0;\\n  padding: 0 .5em;\\n  font-size: .7rem;\\n  line-height: 1.375em;\\n  color: #000;\\n  text-shadow: 0 0 2px #fff;\\n}\\n.ol-attribution li {\\n  display: inline;\\n  list-style: none;\\n  line-height: inherit;\\n}\\n.ol-attribution li:not(:last-child):after {\\n  content: \\\" \\\";\\n}\\n.ol-attribution img {\\n  max-height: 2em;\\n  max-width: inherit;\\n  vertical-align: middle;\\n}\\n.ol-attribution ul, .ol-attribution button {\\n  display: inline-block;\\n}\\n.ol-attribution.ol-collapsed ul {\\n  display: none;\\n}\\n.ol-attribution:not(.ol-collapsed) {\\n  background: rgba(255,255,255,0.8);\\n}\\n.ol-attribution.ol-uncollapsible {\\n  bottom: 0;\\n  right: 0;\\n  border-radius: 4px 0 0;\\n  height: 1.1em;\\n  line-height: 1em;\\n}\\n.ol-attribution.ol-uncollapsible img {\\n  margin-top: -.2em;\\n  max-height: 1.6em;\\n}\\n.ol-attribution.ol-uncollapsible button {\\n  display: none;\\n}\\n\\n.ol-zoomslider {\\n  top: 4.5em;\\n  left: .5em;\\n  height: 200px;\\n}\\n.ol-zoomslider button {\\n  position: relative;\\n  height: 10px;\\n}\\n\\n.ol-touch .ol-zoomslider {\\n  top: 5.5em;\\n}\\n\\n.ol-overviewmap {\\n  left: 0.5em;\\n  bottom: 0.5em;\\n}\\n.ol-overviewmap.ol-uncollapsible {\\n  bottom: 0;\\n  left: 0;\\n  border-radius: 0 4px 0 0;\\n}\\n.ol-overviewmap .ol-overviewmap-map,\\n.ol-overviewmap button {\\n  display: inline-block;\\n}\\n.ol-overviewmap .ol-overviewmap-map {\\n  border: 1px solid #7b98bc;\\n  height: 150px;\\n  margin: 2px;\\n  width: 150px;\\n}\\n.ol-overviewmap:not(.ol-collapsed) button{\\n  bottom: 1px;\\n  left: 2px;\\n  position: absolute;\\n}\\n.ol-overviewmap.ol-collapsed .ol-overviewmap-map,\\n.ol-overviewmap.ol-uncollapsible button {\\n  display: none;\\n}\\n.ol-overviewmap:not(.ol-collapsed) {\\n  background: rgba(255,255,255,0.8);\\n}\\n.ol-overviewmap-box {\\n  border: 2px dotted rgba(0,60,136,0.7);\\n}\\n\\n.ol-overviewmap .ol-overviewmap-box:hover {\\n  cursor: move;\\n}\\n\", \"\"]);\n\n","\"use strict\";\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function (useSourceMap) {\n  var list = []; // return the list of modules as css string\n\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = cssWithMappingToString(item, useSourceMap);\n\n      if (item[2]) {\n        return '@media ' + item[2] + '{' + content + '}';\n      } else {\n        return content;\n      }\n    }).join('');\n  }; // import a list of modules into the list\n\n\n  list.i = function (modules, mediaQuery) {\n    if (typeof modules === 'string') {\n      modules = [[null, modules, '']];\n    }\n\n    var alreadyImportedModules = {};\n\n    for (var i = 0; i < this.length; i++) {\n      var id = this[i][0];\n\n      if (id != null) {\n        alreadyImportedModules[id] = true;\n      }\n    }\n\n    for (i = 0; i < modules.length; i++) {\n      var item = modules[i]; // skip already imported module\n      // this implementation is not 100% perfect for weird media query combinations\n      // when a module is imported multiple times with different media queries.\n      // I hope this will never occur (Hey this way we have smaller bundles)\n\n      if (item[0] == null || !alreadyImportedModules[item[0]]) {\n        if (mediaQuery && !item[2]) {\n          item[2] = mediaQuery;\n        } else if (mediaQuery) {\n          item[2] = '(' + item[2] + ') and (' + mediaQuery + ')';\n        }\n\n        list.push(item);\n      }\n    }\n  };\n\n  return list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n  var content = item[1] || '';\n  var cssMapping = item[3];\n\n  if (!cssMapping) {\n    return content;\n  }\n\n  if (useSourceMap && typeof btoa === 'function') {\n    var sourceMapping = toComment(cssMapping);\n    var sourceURLs = cssMapping.sources.map(function (source) {\n      return '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */';\n    });\n    return [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n  }\n\n  return [content].join('\\n');\n} // Adapted from convert-source-map (MIT)\n\n\nfunction toComment(sourceMap) {\n  // eslint-disable-next-line no-undef\n  var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n  var data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;\n  return '/*# ' + data + ' */';\n}","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\nvar stylesInDom = {};\n\nvar\tmemoize = function (fn) {\n\tvar memo;\n\n\treturn function () {\n\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\n\t\treturn memo;\n\t};\n};\n\nvar isOldIE = memoize(function () {\n\t// Test for IE <= 9 as proposed by Browserhacks\n\t// @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n\t// Tests for existence of standard globals is to allow style-loader\n\t// to operate correctly into non-standard environments\n\t// @see https://github.com/webpack-contrib/style-loader/issues/177\n\treturn window && document && document.all && !window.atob;\n});\n\nvar getTarget = function (target, parent) {\n  if (parent){\n    return parent.querySelector(target);\n  }\n  return document.querySelector(target);\n};\n\nvar getElement = (function (fn) {\n\tvar memo = {};\n\n\treturn function(target, parent) {\n                // If passing function in options, then use it for resolve \"head\" element.\n                // Useful for Shadow Root style i.e\n                // {\n                //   insertInto: function () { return document.querySelector(\"#foo\").shadowRoot }\n                // }\n                if (typeof target === 'function') {\n                        return target();\n                }\n                if (typeof memo[target] === \"undefined\") {\n\t\t\tvar styleTarget = getTarget.call(this, target, parent);\n\t\t\t// Special case to return head of iframe instead of iframe itself\n\t\t\tif (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n\t\t\t\ttry {\n\t\t\t\t\t// This will throw an exception if access to iframe is blocked\n\t\t\t\t\t// due to cross-origin restrictions\n\t\t\t\t\tstyleTarget = styleTarget.contentDocument.head;\n\t\t\t\t} catch(e) {\n\t\t\t\t\tstyleTarget = null;\n\t\t\t\t}\n\t\t\t}\n\t\t\tmemo[target] = styleTarget;\n\t\t}\n\t\treturn memo[target]\n\t};\n})();\n\nvar singleton = null;\nvar\tsingletonCounter = 0;\nvar\tstylesInsertedAtTop = [];\n\nvar\tfixUrls = require(\"./urls\");\n\nmodule.exports = function(list, options) {\n\tif (typeof DEBUG !== \"undefined\" && DEBUG) {\n\t\tif (typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\n\t}\n\n\toptions = options || {};\n\n\toptions.attrs = typeof options.attrs === \"object\" ? options.attrs : {};\n\n\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n\t// tags it will allow on a page\n\tif (!options.singleton && typeof options.singleton !== \"boolean\") options.singleton = isOldIE();\n\n\t// By default, add <style> tags to the <head> element\n        if (!options.insertInto) options.insertInto = \"head\";\n\n\t// By default, add <style> tags to the bottom of the target\n\tif (!options.insertAt) options.insertAt = \"bottom\";\n\n\tvar styles = listToStyles(list, options);\n\n\taddStylesToDom(styles, options);\n\n\treturn function update (newList) {\n\t\tvar mayRemove = [];\n\n\t\tfor (var i = 0; i < styles.length; i++) {\n\t\t\tvar item = styles[i];\n\t\t\tvar domStyle = stylesInDom[item.id];\n\n\t\t\tdomStyle.refs--;\n\t\t\tmayRemove.push(domStyle);\n\t\t}\n\n\t\tif(newList) {\n\t\t\tvar newStyles = listToStyles(newList, options);\n\t\t\taddStylesToDom(newStyles, options);\n\t\t}\n\n\t\tfor (var i = 0; i < mayRemove.length; i++) {\n\t\t\tvar domStyle = mayRemove[i];\n\n\t\t\tif(domStyle.refs === 0) {\n\t\t\t\tfor (var j = 0; j < domStyle.parts.length; j++) domStyle.parts[j]();\n\n\t\t\t\tdelete stylesInDom[domStyle.id];\n\t\t\t}\n\t\t}\n\t};\n};\n\nfunction addStylesToDom (styles, options) {\n\tfor (var i = 0; i < styles.length; i++) {\n\t\tvar item = styles[i];\n\t\tvar domStyle = stylesInDom[item.id];\n\n\t\tif(domStyle) {\n\t\t\tdomStyle.refs++;\n\n\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\n\t\t\t\tdomStyle.parts[j](item.parts[j]);\n\t\t\t}\n\n\t\t\tfor(; j < item.parts.length; j++) {\n\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\t\t} else {\n\t\t\tvar parts = [];\n\n\t\t\tfor(var j = 0; j < item.parts.length; j++) {\n\t\t\t\tparts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\n\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\n\t\t}\n\t}\n}\n\nfunction listToStyles (list, options) {\n\tvar styles = [];\n\tvar newStyles = {};\n\n\tfor (var i = 0; i < list.length; i++) {\n\t\tvar item = list[i];\n\t\tvar id = options.base ? item[0] + options.base : item[0];\n\t\tvar css = item[1];\n\t\tvar media = item[2];\n\t\tvar sourceMap = item[3];\n\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\n\n\t\tif(!newStyles[id]) styles.push(newStyles[id] = {id: id, parts: [part]});\n\t\telse newStyles[id].parts.push(part);\n\t}\n\n\treturn styles;\n}\n\nfunction insertStyleElement (options, style) {\n\tvar target = getElement(options.insertInto)\n\n\tif (!target) {\n\t\tthrow new Error(\"Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.\");\n\t}\n\n\tvar lastStyleElementInsertedAtTop = stylesInsertedAtTop[stylesInsertedAtTop.length - 1];\n\n\tif (options.insertAt === \"top\") {\n\t\tif (!lastStyleElementInsertedAtTop) {\n\t\t\ttarget.insertBefore(style, target.firstChild);\n\t\t} else if (lastStyleElementInsertedAtTop.nextSibling) {\n\t\t\ttarget.insertBefore(style, lastStyleElementInsertedAtTop.nextSibling);\n\t\t} else {\n\t\t\ttarget.appendChild(style);\n\t\t}\n\t\tstylesInsertedAtTop.push(style);\n\t} else if (options.insertAt === \"bottom\") {\n\t\ttarget.appendChild(style);\n\t} else if (typeof options.insertAt === \"object\" && options.insertAt.before) {\n\t\tvar nextSibling = getElement(options.insertAt.before, target);\n\t\ttarget.insertBefore(style, nextSibling);\n\t} else {\n\t\tthrow new Error(\"[Style Loader]\\n\\n Invalid value for parameter 'insertAt' ('options.insertAt') found.\\n Must be 'top', 'bottom', or Object.\\n (https://github.com/webpack-contrib/style-loader#insertat)\\n\");\n\t}\n}\n\nfunction removeStyleElement (style) {\n\tif (style.parentNode === null) return false;\n\tstyle.parentNode.removeChild(style);\n\n\tvar idx = stylesInsertedAtTop.indexOf(style);\n\tif(idx >= 0) {\n\t\tstylesInsertedAtTop.splice(idx, 1);\n\t}\n}\n\nfunction createStyleElement (options) {\n\tvar style = document.createElement(\"style\");\n\n\tif(options.attrs.type === undefined) {\n\t\toptions.attrs.type = \"text/css\";\n\t}\n\n\tif(options.attrs.nonce === undefined) {\n\t\tvar nonce = getNonce();\n\t\tif (nonce) {\n\t\t\toptions.attrs.nonce = nonce;\n\t\t}\n\t}\n\n\taddAttrs(style, options.attrs);\n\tinsertStyleElement(options, style);\n\n\treturn style;\n}\n\nfunction createLinkElement (options) {\n\tvar link = document.createElement(\"link\");\n\n\tif(options.attrs.type === undefined) {\n\t\toptions.attrs.type = \"text/css\";\n\t}\n\toptions.attrs.rel = \"stylesheet\";\n\n\taddAttrs(link, options.attrs);\n\tinsertStyleElement(options, link);\n\n\treturn link;\n}\n\nfunction addAttrs (el, attrs) {\n\tObject.keys(attrs).forEach(function (key) {\n\t\tel.setAttribute(key, attrs[key]);\n\t});\n}\n\nfunction getNonce() {\n\tif (typeof __webpack_nonce__ === 'undefined') {\n\t\treturn null;\n\t}\n\n\treturn __webpack_nonce__;\n}\n\nfunction addStyle (obj, options) {\n\tvar style, update, remove, result;\n\n\t// If a transform function was defined, run it on the css\n\tif (options.transform && obj.css) {\n\t    result = typeof options.transform === 'function'\n\t\t ? options.transform(obj.css) \n\t\t : options.transform.default(obj.css);\n\n\t    if (result) {\n\t    \t// If transform returns a value, use that instead of the original css.\n\t    \t// This allows running runtime transformations on the css.\n\t    \tobj.css = result;\n\t    } else {\n\t    \t// If the transform function returns a falsy value, don't add this css.\n\t    \t// This allows conditional loading of css\n\t    \treturn function() {\n\t    \t\t// noop\n\t    \t};\n\t    }\n\t}\n\n\tif (options.singleton) {\n\t\tvar styleIndex = singletonCounter++;\n\n\t\tstyle = singleton || (singleton = createStyleElement(options));\n\n\t\tupdate = applyToSingletonTag.bind(null, style, styleIndex, false);\n\t\tremove = applyToSingletonTag.bind(null, style, styleIndex, true);\n\n\t} else if (\n\t\tobj.sourceMap &&\n\t\ttypeof URL === \"function\" &&\n\t\ttypeof URL.createObjectURL === \"function\" &&\n\t\ttypeof URL.revokeObjectURL === \"function\" &&\n\t\ttypeof Blob === \"function\" &&\n\t\ttypeof btoa === \"function\"\n\t) {\n\t\tstyle = createLinkElement(options);\n\t\tupdate = updateLink.bind(null, style, options);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\n\t\t\tif(style.href) URL.revokeObjectURL(style.href);\n\t\t};\n\t} else {\n\t\tstyle = createStyleElement(options);\n\t\tupdate = applyToTag.bind(null, style);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\t\t};\n\t}\n\n\tupdate(obj);\n\n\treturn function updateStyle (newObj) {\n\t\tif (newObj) {\n\t\t\tif (\n\t\t\t\tnewObj.css === obj.css &&\n\t\t\t\tnewObj.media === obj.media &&\n\t\t\t\tnewObj.sourceMap === obj.sourceMap\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tupdate(obj = newObj);\n\t\t} else {\n\t\t\tremove();\n\t\t}\n\t};\n}\n\nvar replaceText = (function () {\n\tvar textStore = [];\n\n\treturn function (index, replacement) {\n\t\ttextStore[index] = replacement;\n\n\t\treturn textStore.filter(Boolean).join('\\n');\n\t};\n})();\n\nfunction applyToSingletonTag (style, index, remove, obj) {\n\tvar css = remove ? \"\" : obj.css;\n\n\tif (style.styleSheet) {\n\t\tstyle.styleSheet.cssText = replaceText(index, css);\n\t} else {\n\t\tvar cssNode = document.createTextNode(css);\n\t\tvar childNodes = style.childNodes;\n\n\t\tif (childNodes[index]) style.removeChild(childNodes[index]);\n\n\t\tif (childNodes.length) {\n\t\t\tstyle.insertBefore(cssNode, childNodes[index]);\n\t\t} else {\n\t\t\tstyle.appendChild(cssNode);\n\t\t}\n\t}\n}\n\nfunction applyToTag (style, obj) {\n\tvar css = obj.css;\n\tvar media = obj.media;\n\n\tif(media) {\n\t\tstyle.setAttribute(\"media\", media)\n\t}\n\n\tif(style.styleSheet) {\n\t\tstyle.styleSheet.cssText = css;\n\t} else {\n\t\twhile(style.firstChild) {\n\t\t\tstyle.removeChild(style.firstChild);\n\t\t}\n\n\t\tstyle.appendChild(document.createTextNode(css));\n\t}\n}\n\nfunction updateLink (link, options, obj) {\n\tvar css = obj.css;\n\tvar sourceMap = obj.sourceMap;\n\n\t/*\n\t\tIf convertToAbsoluteUrls isn't defined, but sourcemaps are enabled\n\t\tand there is no publicPath defined then lets turn convertToAbsoluteUrls\n\t\ton by default.  Otherwise default to the convertToAbsoluteUrls option\n\t\tdirectly\n\t*/\n\tvar autoFixUrls = options.convertToAbsoluteUrls === undefined && sourceMap;\n\n\tif (options.convertToAbsoluteUrls || autoFixUrls) {\n\t\tcss = fixUrls(css);\n\t}\n\n\tif (sourceMap) {\n\t\t// http://stackoverflow.com/a/26603875\n\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\n\t}\n\n\tvar blob = new Blob([css], { type: \"text/css\" });\n\n\tvar oldSrc = link.href;\n\n\tlink.href = URL.createObjectURL(blob);\n\n\tif(oldSrc) URL.revokeObjectURL(oldSrc);\n}\n","\n/**\n * When source maps are enabled, `style-loader` uses a link element with a data-uri to\n * embed the css on the page. This breaks all relative urls because now they are relative to a\n * bundle instead of the current page.\n *\n * One solution is to only use full urls, but that may be impossible.\n *\n * Instead, this function \"fixes\" the relative urls to be absolute according to the current page location.\n *\n * A rudimentary test suite is located at `test/fixUrls.js` and can be run via the `npm test` command.\n *\n */\n\nmodule.exports = function (css) {\n  // get current location\n  var location = typeof window !== \"undefined\" && window.location;\n\n  if (!location) {\n    throw new Error(\"fixUrls requires window.location\");\n  }\n\n\t// blank or null?\n\tif (!css || typeof css !== \"string\") {\n\t  return css;\n  }\n\n  var baseUrl = location.protocol + \"//\" + location.host;\n  var currentDir = baseUrl + location.pathname.replace(/\\/[^\\/]*$/, \"/\");\n\n\t// convert each url(...)\n\t/*\n\tThis regular expression is just a way to recursively match brackets within\n\ta string.\n\n\t /url\\s*\\(  = Match on the word \"url\" with any whitespace after it and then a parens\n\t   (  = Start a capturing group\n\t     (?:  = Start a non-capturing group\n\t         [^)(]  = Match anything that isn't a parentheses\n\t         |  = OR\n\t         \\(  = Match a start parentheses\n\t             (?:  = Start another non-capturing groups\n\t                 [^)(]+  = Match anything that isn't a parentheses\n\t                 |  = OR\n\t                 \\(  = Match a start parentheses\n\t                     [^)(]*  = Match anything that isn't a parentheses\n\t                 \\)  = Match a end parentheses\n\t             )  = End Group\n              *\\) = Match anything and then a close parens\n          )  = Close non-capturing group\n          *  = Match anything\n       )  = Close capturing group\n\t \\)  = Match a close parens\n\n\t /gi  = Get all matches, not the first.  Be case insensitive.\n\t */\n\tvar fixedCss = css.replace(/url\\s*\\(((?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)\\)/gi, function(fullMatch, origUrl) {\n\t\t// strip quotes (if they exist)\n\t\tvar unquotedOrigUrl = origUrl\n\t\t\t.trim()\n\t\t\t.replace(/^\"(.*)\"$/, function(o, $1){ return $1; })\n\t\t\t.replace(/^'(.*)'$/, function(o, $1){ return $1; });\n\n\t\t// already a full url? no change\n\t\tif (/^(#|data:|http:\\/\\/|https:\\/\\/|file:\\/\\/\\/|\\s*$)/i.test(unquotedOrigUrl)) {\n\t\t  return fullMatch;\n\t\t}\n\n\t\t// convert the url to a full url\n\t\tvar newUrl;\n\n\t\tif (unquotedOrigUrl.indexOf(\"//\") === 0) {\n\t\t  \t//TODO: should we add protocol?\n\t\t\tnewUrl = unquotedOrigUrl;\n\t\t} else if (unquotedOrigUrl.indexOf(\"/\") === 0) {\n\t\t\t// path should be relative to the base url\n\t\t\tnewUrl = baseUrl + unquotedOrigUrl; // already starts with '/'\n\t\t} else {\n\t\t\t// path should be relative to current directory\n\t\t\tnewUrl = currentDir + unquotedOrigUrl.replace(/^\\.\\//, \"\"); // Strip leading './'\n\t\t}\n\n\t\t// send back the fixed url(...)\n\t\treturn \"url(\" + JSON.stringify(newUrl) + \")\";\n\t});\n\n\t// send back the fixed css\n\treturn fixedCss;\n};\n","const Schema = require('./schema').Schema;\nconst util = require('./util');\nconst serializers = require('./serializers');\n\n/**\n * An object backed store of string values.  Allows registering multiple state\n * providers.\n * @param {Object} values Initial serialized values.\n * @param {function(Object)} callback Called with an object of serialized\n *     values and defaults whenever a provider updates state.\n * @constructor\n */\nconst Store = (exports.Store = function(values, callback) {\n  this._values = values;\n  this._defaults = {};\n  this._providers = [];\n  this._callback = callback;\n  this._callbackTimer = null;\n});\n\nStore.prototype._scheduleCallback = function() {\n  if (this._callbackTimer) {\n    clearTimeout(this._callbackTimer);\n  }\n  this._callbackTimer = setTimeout(this._debouncedCallback.bind(this));\n};\n\nStore.prototype._debouncedCallback = function() {\n  this._callbackTimer = null;\n  this._callback(this._values, this._defaults);\n};\n\nStore.prototype.update = function(values) {\n  if (this._updateTimer) {\n    clearTimeout(this._updateTimer);\n  }\n  this._updateTimer = setTimeout(this._debouncedUpdate.bind(this, values));\n};\n\nStore.prototype._debouncedUpdate = function(newValues) {\n  this._updateTimer = null;\n  const values = this._values;\n  const providers = this._providers.slice(); // callbacks may unregister providers\n  for (let i = providers.length - 1; i >= 0; --i) {\n    const provider = providers[i];\n    const schema = provider.schema;\n    let changed = false;\n    const state = {};\n    schema.forEachKey(function(key, prefixed) {\n      let deserialized;\n      if (!(prefixed in newValues)) {\n        deserialized = schema.getDefault(key);\n        const serializedDefault = schema.serialize(key, deserialized);\n        if (values[prefixed] !== serializedDefault) {\n          changed = true;\n          values[prefixed] = serializedDefault;\n          state[key] = deserialized;\n        }\n      } else if (values[prefixed] !== newValues[prefixed]) {\n        try {\n          deserialized = schema.deserialize(key, newValues[prefixed]);\n          values[prefixed] = newValues[prefixed];\n          state[key] = deserialized;\n          changed = true;\n        } catch (err) {\n          // invalid value, pass\n        }\n      }\n    });\n    if (changed && this._providers.indexOf(provider) >= 0) {\n      provider.callback(state);\n    }\n  }\n};\n\n/**\n * Unregister a provider.  Deletes the provider's values from the underlying\n * store and calls the store's callback.\n * @param {Function} callback The provider's callback.\n */\nStore.prototype.unregister = function(callback) {\n  let removedProvider;\n  this._providers = this._providers.filter(function(provider) {\n    const remove = provider.callback === callback;\n    if (remove) {\n      removedProvider = provider;\n    }\n    return !remove;\n  });\n  if (!removedProvider) {\n    throw new Error('Unable to unregister hashed state provider');\n  }\n  const values = this._values;\n  const defaults = this._defaults;\n  removedProvider.schema.forEachKey(function(key, prefixed) {\n    delete values[prefixed];\n    delete defaults[prefixed];\n  });\n  this._scheduleCallback();\n};\n\n/**\n * Register a new state provider.\n * @param {Object} config Schema config.\n * @param {function(Object)} callback Called by the store on state changes.\n * @return {function(Object)} Called by the provider on state changes.\n */\nStore.prototype.register = function(config, callback) {\n  const provider = {\n    schema: new Schema(config),\n    callback: callback\n  };\n\n  // ensure there are no conflicts with existing providers\n  for (let i = 0, ii = this._providers.length; i < ii; ++i) {\n    const conflicts = provider.schema.conflicts(this._providers[i].schema);\n    if (conflicts) {\n      throw new Error(\n        'Provider already registered using the same name: ' + conflicts\n      );\n    }\n    if (provider.callback === this._providers[i].callback) {\n      throw new Error('Provider already registered with the same callback');\n    }\n  }\n\n  this._providers.push(provider);\n  this._initializeProvider(provider);\n\n  return function update(state) {\n    if (this._providers.indexOf(provider) === -1) {\n      throw new Error('Unregistered provider attempting to update state');\n    }\n    const schema = provider.schema;\n    let changed = false;\n    const values = this._values;\n    schema.forEachKey(function(key, prefixed) {\n      if (key in state) {\n        const serializedValue = schema.serialize(key, state[key], state);\n        if (values[prefixed] !== serializedValue) {\n          changed = true;\n          values[prefixed] = serializedValue;\n        }\n      }\n    });\n    if (changed) {\n      this._scheduleCallback();\n    }\n  }.bind(this);\n};\n\n/**\n * Call provider with initial values.\n * @param {Object} provider Provider to be initialized.\n */\nStore.prototype._initializeProvider = function(provider) {\n  const state = {};\n  const defaults = {};\n  const values = this._values;\n  provider.schema.forEachKey(function(key, prefixed) {\n    let deserializedValue;\n    const deserializedDefault = provider.schema.getDefault(key);\n    const serializedDefault = provider.schema.serialize(\n      key,\n      deserializedDefault\n    );\n    if (prefixed in values) {\n      try {\n        deserializedValue = provider.schema.deserialize(key, values[prefixed]);\n      } catch (err) {\n        deserializedValue = deserializedDefault;\n      }\n    } else {\n      deserializedValue = deserializedDefault;\n    }\n    state[key] = deserializedValue;\n    defaults[prefixed] = serializedDefault;\n    values[prefixed] = provider.schema.serialize(key, deserializedValue);\n  });\n  for (const prefixed in defaults) {\n    this._defaults[prefixed] = defaults[prefixed];\n  }\n  provider.callback(state);\n};\n\n/**\n * Serialize values with provider serializers where available.\n * @param {Object} values Values to be serialized.\n * @return {Object} The serialized values.\n */\nStore.prototype.serialize = function(values) {\n  const serialized = {};\n  for (let i = 0, ii = this._providers.length; i < ii; ++i) {\n    const provider = this._providers[i];\n    provider.schema.forEachKey(function(key, prefixed) {\n      if (prefixed in values) {\n        serialized[prefixed] = provider.schema.serialize(\n          key,\n          values[prefixed],\n          values\n        );\n      }\n    });\n  }\n  for (const key in values) {\n    if (!(key in serialized)) {\n      const value = values[key];\n      const type = util.typeOf(value);\n      const serializer = serializers.get(type);\n      serialized[key] = serializer(value);\n    }\n  }\n  return serialized;\n};\n","const Field = require('./field').Field;\nconst util = require('./util');\n\n/**\n * Create a new schema.  A schema is a collection of field definitions.\n * @param {Object} config Keys are field names, values are field configs.\n * @constructor\n */\nconst Schema = (exports.Schema = function(config) {\n  config = util.extend({}, config);\n  const fields = {};\n  let prefix;\n  if ('_' in config) {\n    prefix = config._;\n    delete config._;\n  }\n  for (const key in config) {\n    fields[key] = new Field(config[key]);\n  }\n  this._prefix = prefix;\n  this._fields = fields;\n});\n\n/**\n * Get the prefixed version of a key.\n * @param {string} key The key.\n * @return {string} The prefixed key.\n */\nSchema.prototype.getPrefixed = function(key) {\n  return this._prefix ? this._prefix + '.' + key : key;\n};\n\n/**\n * Call a callback for each field key.\n * @param {function(string, number)} callback Called with a local field key and\n *     a prefixed key.\n * @param {Object} thisArg This argument for the callback.\n */\nSchema.prototype.forEachKey = function(callback, thisArg) {\n  let more;\n  for (const key in this._fields) {\n    more = callback.call(thisArg, key, this.getPrefixed(key));\n    if (more === false) {\n      return;\n    }\n  }\n};\n\n/**\n * Serialize a value.\n * @param {string} key The key or field name.\n * @param {*} value The value to serialize.\n * @param {Object} values Additional values for providers to use when serializing.\n * @return {string} The serialized value.\n */\nSchema.prototype.serialize = function(key, value, values) {\n  if (!(key in this._fields)) {\n    throw new Error('Unknown key: ' + key);\n  }\n  return this._fields[key].serialize(value, values);\n};\n\n/**\n * Deserialize a value.\n * @param {string} key The key or field name.\n * @param {string} str The serialized value.\n * @return {*} The deserialized value.\n */\nSchema.prototype.deserialize = function(key, str) {\n  if (!(key in this._fields)) {\n    throw new Error('Unknown key: ' + key);\n  }\n  return this._fields[key].deserialize(str);\n};\n\n/**\n * Get the default value for a particular field.\n * @param {string} key The key or field name.\n * @return {*} The default value.\n */\nSchema.prototype.getDefault = function(key) {\n  if (!(key in this._fields)) {\n    throw new Error('Unknown key: ' + key);\n  }\n  return this._fields[key].default;\n};\n\n/**\n * Determine if one schema conflicts with another.  Two schemas conflict if\n * any of their prefixed keys are the same.\n * @param {Schema} other The other schema.\n * @return {boolean|string} This schema conflicts with the other.  If the two\n *     schemas conflict, the return will be the first conflicting key (with\n *     any prefix).\n */\nSchema.prototype.conflicts = function(other) {\n  const thisPrefixedKeys = {};\n  for (const key in this._fields) {\n    thisPrefixedKeys[this.getPrefixed(key)] = true;\n  }\n\n  let conflicts = false;\n  other.forEachKey(function(_, prefixed) {\n    if (prefixed in thisPrefixedKeys) {\n      conflicts = prefixed;\n    }\n    return !conflicts;\n  });\n  return conflicts;\n};\n","const util = require('./util');\n\nconst serializers = require('./serializers');\nconst deserializers = require('./deserializers');\n\n/**\n * Create a new field.  A field must have a default value (`default`) and is\n * capable of serializing and deserializing values.\n * @param {Object} config Field configuration.  Must have a `default` property\n *     with a default value.  May have optional `serialize` and `deserialize`\n *     functions.  As a shorthand for providing a config object with a `default`\n *     property, a default value may be provided directly.\n * @constructor\n */\nexports.Field = function(config) {\n  if (util.typeOf(config) !== 'object') {\n    this.default = config;\n  } else if (!('default' in config)) {\n    throw new Error('Missing default');\n  } else {\n    this.default = config.default;\n  }\n\n  const type = util.typeOf(this.default);\n  this.serialize = config.serialize || serializers.get(type);\n  this.deserialize = config.deserialize || deserializers.get(type);\n};\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","module.exports = function isBuffer(arg) {\n  return arg && typeof arg === 'object'\n    && typeof arg.copy === 'function'\n    && typeof arg.fill === 'function'\n    && typeof arg.readUInt8 === 'function';\n}","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\n","const util = require('./util');\n\nconst dec = decodeURIComponent;\n\nconst noop = function() {};\n\nconst deserializers = {\n  string: function(str) {\n    if (!str || typeof str !== 'string') {\n      throw new Error('Expected string to deserialize: ' + str);\n    }\n    return dec(str);\n  },\n  number: function(str) {\n    if (!str || typeof str !== 'string') {\n      throw new Error('Expected string to deserialize: ' + str);\n    }\n    const num = Number(dec(str));\n    if (isNaN(num)) {\n      throw new Error('Expected to deserialize a number: ' + str);\n    }\n    return num;\n  },\n  boolean: function(str) {\n    if (!str || typeof str !== 'string') {\n      throw new Error('Expected string to deserialize: ' + str);\n    }\n    let bool;\n    if (str === '1') {\n      bool = true;\n    } else if (str === '0') {\n      bool = false;\n    } else {\n      throw new Error('Expected \"1\" or \"0\" for boolean: ' + str);\n    }\n    return bool;\n  },\n  date: function(str) {\n    if (!str || typeof str !== 'string') {\n      throw new Error('Expected string to deserialize: ' + str);\n    }\n    const date = new Date(dec(str));\n    if (isNaN(date.getTime())) {\n      throw new Error('Expected to deserialize a date: ' + str);\n    }\n    return date;\n  },\n  array: function(str) {\n    if (!str || typeof str !== 'string') {\n      throw new Error('Expected string to deserialize: ' + str);\n    }\n    let array;\n    try {\n      array = JSON.parse(dec(str));\n    } catch (err) {\n      noop();\n    }\n    if (!array || util.typeOf(array) !== 'array') {\n      throw new Error('Expected to deserialize an array: ' + str);\n    }\n    return array;\n  },\n  object: function(str) {\n    if (!str || typeof str !== 'string') {\n      throw new Error('Expected string to deserialize: ' + str);\n    }\n    let obj;\n    try {\n      obj = JSON.parse(dec(str));\n    } catch (err) {\n      noop();\n    }\n    if (!obj || util.typeOf(obj) !== 'object') {\n      throw new Error('Expected to deserialize an object: ' + str);\n    }\n    return obj;\n  }\n};\n\n/**\n * Get a deserializer for a value of the given type.\n * @param {string} type Value type.\n * @return {function(string): *} Function that deserializes a string to a value.\n */\nexports.get = function(type) {\n  if (!(type in deserializers)) {\n    throw new Error('Unable to deserialize type: ' + type);\n  }\n  return deserializers[type];\n};\n","const util = require('./util');\n\n/**\n * Get values from a hash string.\n * @param {string} hash The hash string (e.g. '#/foo/bar').\n * @return {Object} The string values (e.g. {foo: 'bar'}).\n */\nfunction deserialize(hash) {\n  let zipped;\n  if (hash.length > 2) {\n    const path = hash.substring(2);\n    zipped = path.split('/');\n  } else {\n    zipped = [];\n  }\n  return util.unzip(zipped);\n}\n\n/**\n * Serialize values for the hash.\n * @param {Object} values The values to serialize.\n * @return {string} The hash string.\n */\nfunction serialize(values) {\n  let path = '#';\n  const parts = util.zip(values);\n  if (parts.length > 0) {\n    path = '#/' + parts.join('/');\n  }\n  return path;\n}\n\nexports.deserialize = deserialize;\nexports.serialize = serialize;\n","module.exports={\n\t\"jet\":[{\"index\":0,\"rgb\":[0,0,131]},{\"index\":0.125,\"rgb\":[0,60,170]},{\"index\":0.375,\"rgb\":[5,255,255]},{\"index\":0.625,\"rgb\":[255,255,0]},{\"index\":0.875,\"rgb\":[250,0,0]},{\"index\":1,\"rgb\":[128,0,0]}],\n\n\t\"hsv\":[{\"index\":0,\"rgb\":[255,0,0]},{\"index\":0.169,\"rgb\":[253,255,2]},{\"index\":0.173,\"rgb\":[247,255,2]},{\"index\":0.337,\"rgb\":[0,252,4]},{\"index\":0.341,\"rgb\":[0,252,10]},{\"index\":0.506,\"rgb\":[1,249,255]},{\"index\":0.671,\"rgb\":[2,0,253]},{\"index\":0.675,\"rgb\":[8,0,253]},{\"index\":0.839,\"rgb\":[255,0,251]},{\"index\":0.843,\"rgb\":[255,0,245]},{\"index\":1,\"rgb\":[255,0,6]}],\n\n\t\"hot\":[{\"index\":0,\"rgb\":[0,0,0]},{\"index\":0.3,\"rgb\":[230,0,0]},{\"index\":0.6,\"rgb\":[255,210,0]},{\"index\":1,\"rgb\":[255,255,255]}],\n\n\t\"cool\":[{\"index\":0,\"rgb\":[0,255,255]},{\"index\":1,\"rgb\":[255,0,255]}],\n\n\t\"spring\":[{\"index\":0,\"rgb\":[255,0,255]},{\"index\":1,\"rgb\":[255,255,0]}],\n\n\t\"summer\":[{\"index\":0,\"rgb\":[0,128,102]},{\"index\":1,\"rgb\":[255,255,102]}],\n\n\t\"autumn\":[{\"index\":0,\"rgb\":[255,0,0]},{\"index\":1,\"rgb\":[255,255,0]}],\n\n\t\"winter\":[{\"index\":0,\"rgb\":[0,0,255]},{\"index\":1,\"rgb\":[0,255,128]}],\n\n\t\"bone\":[{\"index\":0,\"rgb\":[0,0,0]},{\"index\":0.376,\"rgb\":[84,84,116]},{\"index\":0.753,\"rgb\":[169,200,200]},{\"index\":1,\"rgb\":[255,255,255]}],\n\n\t\"copper\":[{\"index\":0,\"rgb\":[0,0,0]},{\"index\":0.804,\"rgb\":[255,160,102]},{\"index\":1,\"rgb\":[255,199,127]}],\n\n\t\"greys\":[{\"index\":0,\"rgb\":[0,0,0]},{\"index\":1,\"rgb\":[255,255,255]}],\n\n\t\"yignbu\":[{\"index\":0,\"rgb\":[8,29,88]},{\"index\":0.125,\"rgb\":[37,52,148]},{\"index\":0.25,\"rgb\":[34,94,168]},{\"index\":0.375,\"rgb\":[29,145,192]},{\"index\":0.5,\"rgb\":[65,182,196]},{\"index\":0.625,\"rgb\":[127,205,187]},{\"index\":0.75,\"rgb\":[199,233,180]},{\"index\":0.875,\"rgb\":[237,248,217]},{\"index\":1,\"rgb\":[255,255,217]}],\n\n\t\"greens\":[{\"index\":0,\"rgb\":[0,68,27]},{\"index\":0.125,\"rgb\":[0,109,44]},{\"index\":0.25,\"rgb\":[35,139,69]},{\"index\":0.375,\"rgb\":[65,171,93]},{\"index\":0.5,\"rgb\":[116,196,118]},{\"index\":0.625,\"rgb\":[161,217,155]},{\"index\":0.75,\"rgb\":[199,233,192]},{\"index\":0.875,\"rgb\":[229,245,224]},{\"index\":1,\"rgb\":[247,252,245]}],\n\n\t\"yiorrd\":[{\"index\":0,\"rgb\":[128,0,38]},{\"index\":0.125,\"rgb\":[189,0,38]},{\"index\":0.25,\"rgb\":[227,26,28]},{\"index\":0.375,\"rgb\":[252,78,42]},{\"index\":0.5,\"rgb\":[253,141,60]},{\"index\":0.625,\"rgb\":[254,178,76]},{\"index\":0.75,\"rgb\":[254,217,118]},{\"index\":0.875,\"rgb\":[255,237,160]},{\"index\":1,\"rgb\":[255,255,204]}],\n\n\t\"bluered\":[{\"index\":0,\"rgb\":[0,0,255]},{\"index\":1,\"rgb\":[255,0,0]}],\n\n\t\"rdbu\":[{\"index\":0,\"rgb\":[5,10,172]},{\"index\":0.35,\"rgb\":[106,137,247]},{\"index\":0.5,\"rgb\":[190,190,190]},{\"index\":0.6,\"rgb\":[220,170,132]},{\"index\":0.7,\"rgb\":[230,145,90]},{\"index\":1,\"rgb\":[178,10,28]}],\n\n\t\"picnic\":[{\"index\":0,\"rgb\":[0,0,255]},{\"index\":0.1,\"rgb\":[51,153,255]},{\"index\":0.2,\"rgb\":[102,204,255]},{\"index\":0.3,\"rgb\":[153,204,255]},{\"index\":0.4,\"rgb\":[204,204,255]},{\"index\":0.5,\"rgb\":[255,255,255]},{\"index\":0.6,\"rgb\":[255,204,255]},{\"index\":0.7,\"rgb\":[255,153,255]},{\"index\":0.8,\"rgb\":[255,102,204]},{\"index\":0.9,\"rgb\":[255,102,102]},{\"index\":1,\"rgb\":[255,0,0]}],\n\n\t\"rainbow\":[{\"index\":0,\"rgb\":[150,0,90]},{\"index\":0.125,\"rgb\":[0,0,200]},{\"index\":0.25,\"rgb\":[0,25,255]},{\"index\":0.375,\"rgb\":[0,152,255]},{\"index\":0.5,\"rgb\":[44,255,150]},{\"index\":0.625,\"rgb\":[151,255,0]},{\"index\":0.75,\"rgb\":[255,234,0]},{\"index\":0.875,\"rgb\":[255,111,0]},{\"index\":1,\"rgb\":[255,0,0]}],\n\n\t\"portland\":[{\"index\":0,\"rgb\":[12,51,131]},{\"index\":0.25,\"rgb\":[10,136,186]},{\"index\":0.5,\"rgb\":[242,211,56]},{\"index\":0.75,\"rgb\":[242,143,56]},{\"index\":1,\"rgb\":[217,30,30]}],\n\n\t\"blackbody\":[{\"index\":0,\"rgb\":[0,0,0]},{\"index\":0.2,\"rgb\":[230,0,0]},{\"index\":0.4,\"rgb\":[230,210,0]},{\"index\":0.7,\"rgb\":[255,255,255]},{\"index\":1,\"rgb\":[160,200,255]}],\n\n\t\"earth\":[{\"index\":0,\"rgb\":[0,0,130]},{\"index\":0.1,\"rgb\":[0,180,180]},{\"index\":0.2,\"rgb\":[40,210,40]},{\"index\":0.4,\"rgb\":[230,230,50]},{\"index\":0.6,\"rgb\":[120,70,20]},{\"index\":1,\"rgb\":[255,255,255]}],\n\n\t\"electric\":[{\"index\":0,\"rgb\":[0,0,0]},{\"index\":0.15,\"rgb\":[30,0,100]},{\"index\":0.4,\"rgb\":[120,0,100]},{\"index\":0.6,\"rgb\":[160,90,0]},{\"index\":0.8,\"rgb\":[230,200,0]},{\"index\":1,\"rgb\":[255,250,220]}],\n\n\t\"alpha\": [{\"index\":0, \"rgb\": [255,255,255,0]},{\"index\":1, \"rgb\": [255,255,255,1]}],\n\n\t\"viridis\": [{\"index\":0,\"rgb\":[68,1,84]},{\"index\":0.13,\"rgb\":[71,44,122]},{\"index\":0.25,\"rgb\":[59,81,139]},{\"index\":0.38,\"rgb\":[44,113,142]},{\"index\":0.5,\"rgb\":[33,144,141]},{\"index\":0.63,\"rgb\":[39,173,129]},{\"index\":0.75,\"rgb\":[92,200,99]},{\"index\":0.88,\"rgb\":[170,220,50]},{\"index\":1,\"rgb\":[253,231,37]}],\n\n\t\"inferno\": [{\"index\":0,\"rgb\":[0,0,4]},{\"index\":0.13,\"rgb\":[31,12,72]},{\"index\":0.25,\"rgb\":[85,15,109]},{\"index\":0.38,\"rgb\":[136,34,106]},{\"index\":0.5,\"rgb\":[186,54,85]},{\"index\":0.63,\"rgb\":[227,89,51]},{\"index\":0.75,\"rgb\":[249,140,10]},{\"index\":0.88,\"rgb\":[249,201,50]},{\"index\":1,\"rgb\":[252,255,164]}],\n\n\t\"magma\": [{\"index\":0,\"rgb\":[0,0,4]},{\"index\":0.13,\"rgb\":[28,16,68]},{\"index\":0.25,\"rgb\":[79,18,123]},{\"index\":0.38,\"rgb\":[129,37,129]},{\"index\":0.5,\"rgb\":[181,54,122]},{\"index\":0.63,\"rgb\":[229,80,100]},{\"index\":0.75,\"rgb\":[251,135,97]},{\"index\":0.88,\"rgb\":[254,194,135]},{\"index\":1,\"rgb\":[252,253,191]}],\n\n\t\"plasma\": [{\"index\":0,\"rgb\":[13,8,135]},{\"index\":0.13,\"rgb\":[75,3,161]},{\"index\":0.25,\"rgb\":[125,3,168]},{\"index\":0.38,\"rgb\":[168,34,150]},{\"index\":0.5,\"rgb\":[203,70,121]},{\"index\":0.63,\"rgb\":[229,107,93]},{\"index\":0.75,\"rgb\":[248,148,65]},{\"index\":0.88,\"rgb\":[253,195,40]},{\"index\":1,\"rgb\":[240,249,33]}],\n\n\t\"warm\": [{\"index\":0,\"rgb\":[125,0,179]},{\"index\":0.13,\"rgb\":[172,0,187]},{\"index\":0.25,\"rgb\":[219,0,170]},{\"index\":0.38,\"rgb\":[255,0,130]},{\"index\":0.5,\"rgb\":[255,63,74]},{\"index\":0.63,\"rgb\":[255,123,0]},{\"index\":0.75,\"rgb\":[234,176,0]},{\"index\":0.88,\"rgb\":[190,228,0]},{\"index\":1,\"rgb\":[147,255,0]}],\n\n\t\"cool\": [{\"index\":0,\"rgb\":[125,0,179]},{\"index\":0.13,\"rgb\":[116,0,218]},{\"index\":0.25,\"rgb\":[98,74,237]},{\"index\":0.38,\"rgb\":[68,146,231]},{\"index\":0.5,\"rgb\":[0,204,197]},{\"index\":0.63,\"rgb\":[0,247,146]},{\"index\":0.75,\"rgb\":[0,255,88]},{\"index\":0.88,\"rgb\":[40,255,8]},{\"index\":1,\"rgb\":[147,255,0]}],\n\n\t\"rainbow-soft\": [{\"index\":0,\"rgb\":[125,0,179]},{\"index\":0.1,\"rgb\":[199,0,180]},{\"index\":0.2,\"rgb\":[255,0,121]},{\"index\":0.3,\"rgb\":[255,108,0]},{\"index\":0.4,\"rgb\":[222,194,0]},{\"index\":0.5,\"rgb\":[150,255,0]},{\"index\":0.6,\"rgb\":[0,255,55]},{\"index\":0.7,\"rgb\":[0,246,150]},{\"index\":0.8,\"rgb\":[50,167,222]},{\"index\":0.9,\"rgb\":[103,51,235]},{\"index\":1,\"rgb\":[124,0,186]}],\n\n\t\"bathymetry\": [{\"index\":0,\"rgb\":[40,26,44]},{\"index\":0.13,\"rgb\":[59,49,90]},{\"index\":0.25,\"rgb\":[64,76,139]},{\"index\":0.38,\"rgb\":[63,110,151]},{\"index\":0.5,\"rgb\":[72,142,158]},{\"index\":0.63,\"rgb\":[85,174,163]},{\"index\":0.75,\"rgb\":[120,206,163]},{\"index\":0.88,\"rgb\":[187,230,172]},{\"index\":1,\"rgb\":[253,254,204]}],\n\n\t\"cdom\": [{\"index\":0,\"rgb\":[47,15,62]},{\"index\":0.13,\"rgb\":[87,23,86]},{\"index\":0.25,\"rgb\":[130,28,99]},{\"index\":0.38,\"rgb\":[171,41,96]},{\"index\":0.5,\"rgb\":[206,67,86]},{\"index\":0.63,\"rgb\":[230,106,84]},{\"index\":0.75,\"rgb\":[242,149,103]},{\"index\":0.88,\"rgb\":[249,193,135]},{\"index\":1,\"rgb\":[254,237,176]}],\n\n\t\"chlorophyll\": [{\"index\":0,\"rgb\":[18,36,20]},{\"index\":0.13,\"rgb\":[25,63,41]},{\"index\":0.25,\"rgb\":[24,91,59]},{\"index\":0.38,\"rgb\":[13,119,72]},{\"index\":0.5,\"rgb\":[18,148,80]},{\"index\":0.63,\"rgb\":[80,173,89]},{\"index\":0.75,\"rgb\":[132,196,122]},{\"index\":0.88,\"rgb\":[175,221,162]},{\"index\":1,\"rgb\":[215,249,208]}],\n\n\t\"density\": [{\"index\":0,\"rgb\":[54,14,36]},{\"index\":0.13,\"rgb\":[89,23,80]},{\"index\":0.25,\"rgb\":[110,45,132]},{\"index\":0.38,\"rgb\":[120,77,178]},{\"index\":0.5,\"rgb\":[120,113,213]},{\"index\":0.63,\"rgb\":[115,151,228]},{\"index\":0.75,\"rgb\":[134,185,227]},{\"index\":0.88,\"rgb\":[177,214,227]},{\"index\":1,\"rgb\":[230,241,241]}],\n\n\t\"freesurface-blue\": [{\"index\":0,\"rgb\":[30,4,110]},{\"index\":0.13,\"rgb\":[47,14,176]},{\"index\":0.25,\"rgb\":[41,45,236]},{\"index\":0.38,\"rgb\":[25,99,212]},{\"index\":0.5,\"rgb\":[68,131,200]},{\"index\":0.63,\"rgb\":[114,156,197]},{\"index\":0.75,\"rgb\":[157,181,203]},{\"index\":0.88,\"rgb\":[200,208,216]},{\"index\":1,\"rgb\":[241,237,236]}],\n\n\t\"freesurface-red\": [{\"index\":0,\"rgb\":[60,9,18]},{\"index\":0.13,\"rgb\":[100,17,27]},{\"index\":0.25,\"rgb\":[142,20,29]},{\"index\":0.38,\"rgb\":[177,43,27]},{\"index\":0.5,\"rgb\":[192,87,63]},{\"index\":0.63,\"rgb\":[205,125,105]},{\"index\":0.75,\"rgb\":[216,162,148]},{\"index\":0.88,\"rgb\":[227,199,193]},{\"index\":1,\"rgb\":[241,237,236]}],\n\n\t\"oxygen\": [{\"index\":0,\"rgb\":[64,5,5]},{\"index\":0.13,\"rgb\":[106,6,15]},{\"index\":0.25,\"rgb\":[144,26,7]},{\"index\":0.38,\"rgb\":[168,64,3]},{\"index\":0.5,\"rgb\":[188,100,4]},{\"index\":0.63,\"rgb\":[206,136,11]},{\"index\":0.75,\"rgb\":[220,174,25]},{\"index\":0.88,\"rgb\":[231,215,44]},{\"index\":1,\"rgb\":[248,254,105]}],\n\n\t\"par\": [{\"index\":0,\"rgb\":[51,20,24]},{\"index\":0.13,\"rgb\":[90,32,35]},{\"index\":0.25,\"rgb\":[129,44,34]},{\"index\":0.38,\"rgb\":[159,68,25]},{\"index\":0.5,\"rgb\":[182,99,19]},{\"index\":0.63,\"rgb\":[199,134,22]},{\"index\":0.75,\"rgb\":[212,171,35]},{\"index\":0.88,\"rgb\":[221,210,54]},{\"index\":1,\"rgb\":[225,253,75]}],\n\n\t\"phase\": [{\"index\":0,\"rgb\":[145,105,18]},{\"index\":0.13,\"rgb\":[184,71,38]},{\"index\":0.25,\"rgb\":[186,58,115]},{\"index\":0.38,\"rgb\":[160,71,185]},{\"index\":0.5,\"rgb\":[110,97,218]},{\"index\":0.63,\"rgb\":[50,123,164]},{\"index\":0.75,\"rgb\":[31,131,110]},{\"index\":0.88,\"rgb\":[77,129,34]},{\"index\":1,\"rgb\":[145,105,18]}],\n\n\t\"salinity\": [{\"index\":0,\"rgb\":[42,24,108]},{\"index\":0.13,\"rgb\":[33,50,162]},{\"index\":0.25,\"rgb\":[15,90,145]},{\"index\":0.38,\"rgb\":[40,118,137]},{\"index\":0.5,\"rgb\":[59,146,135]},{\"index\":0.63,\"rgb\":[79,175,126]},{\"index\":0.75,\"rgb\":[120,203,104]},{\"index\":0.88,\"rgb\":[193,221,100]},{\"index\":1,\"rgb\":[253,239,154]}],\n\n\t\"temperature\": [{\"index\":0,\"rgb\":[4,35,51]},{\"index\":0.13,\"rgb\":[23,51,122]},{\"index\":0.25,\"rgb\":[85,59,157]},{\"index\":0.38,\"rgb\":[129,79,143]},{\"index\":0.5,\"rgb\":[175,95,130]},{\"index\":0.63,\"rgb\":[222,112,101]},{\"index\":0.75,\"rgb\":[249,146,66]},{\"index\":0.88,\"rgb\":[249,196,65]},{\"index\":1,\"rgb\":[232,250,91]}],\n\n\t\"turbidity\": [{\"index\":0,\"rgb\":[34,31,27]},{\"index\":0.13,\"rgb\":[65,50,41]},{\"index\":0.25,\"rgb\":[98,69,52]},{\"index\":0.38,\"rgb\":[131,89,57]},{\"index\":0.5,\"rgb\":[161,112,59]},{\"index\":0.63,\"rgb\":[185,140,66]},{\"index\":0.75,\"rgb\":[202,174,88]},{\"index\":0.88,\"rgb\":[216,209,126]},{\"index\":1,\"rgb\":[233,246,171]}],\n\n\t\"velocity-blue\": [{\"index\":0,\"rgb\":[17,32,64]},{\"index\":0.13,\"rgb\":[35,52,116]},{\"index\":0.25,\"rgb\":[29,81,156]},{\"index\":0.38,\"rgb\":[31,113,162]},{\"index\":0.5,\"rgb\":[50,144,169]},{\"index\":0.63,\"rgb\":[87,173,176]},{\"index\":0.75,\"rgb\":[149,196,189]},{\"index\":0.88,\"rgb\":[203,221,211]},{\"index\":1,\"rgb\":[254,251,230]}],\n\n\t\"velocity-green\": [{\"index\":0,\"rgb\":[23,35,19]},{\"index\":0.13,\"rgb\":[24,64,38]},{\"index\":0.25,\"rgb\":[11,95,45]},{\"index\":0.38,\"rgb\":[39,123,35]},{\"index\":0.5,\"rgb\":[95,146,12]},{\"index\":0.63,\"rgb\":[152,165,18]},{\"index\":0.75,\"rgb\":[201,186,69]},{\"index\":0.88,\"rgb\":[233,216,137]},{\"index\":1,\"rgb\":[255,253,205]}],\n\n\t\"cubehelix\": [{\"index\":0,\"rgb\":[0,0,0]},{\"index\":0.07,\"rgb\":[22,5,59]},{\"index\":0.13,\"rgb\":[60,4,105]},{\"index\":0.2,\"rgb\":[109,1,135]},{\"index\":0.27,\"rgb\":[161,0,147]},{\"index\":0.33,\"rgb\":[210,2,142]},{\"index\":0.4,\"rgb\":[251,11,123]},{\"index\":0.47,\"rgb\":[255,29,97]},{\"index\":0.53,\"rgb\":[255,54,69]},{\"index\":0.6,\"rgb\":[255,85,46]},{\"index\":0.67,\"rgb\":[255,120,34]},{\"index\":0.73,\"rgb\":[255,157,37]},{\"index\":0.8,\"rgb\":[241,191,57]},{\"index\":0.87,\"rgb\":[224,220,93]},{\"index\":0.93,\"rgb\":[218,241,142]},{\"index\":1,\"rgb\":[227,253,198]}]\n};\n","function lerp(v0, v1, t) {\n    return v0*(1-t)+v1*t\n}\nmodule.exports = lerp","(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(global.quickselect = factory());\n}(this, (function () { 'use strict';\n\nfunction quickselect(arr, k, left, right, compare) {\n    quickselectStep(arr, k, left || 0, right || (arr.length - 1), compare || defaultCompare);\n}\n\nfunction quickselectStep(arr, k, left, right, compare) {\n\n    while (right > left) {\n        if (right - left > 600) {\n            var n = right - left + 1;\n            var m = k - left + 1;\n            var z = Math.log(n);\n            var s = 0.5 * Math.exp(2 * z / 3);\n            var sd = 0.5 * Math.sqrt(z * s * (n - s) / n) * (m - n / 2 < 0 ? -1 : 1);\n            var newLeft = Math.max(left, Math.floor(k - m * s / n + sd));\n            var newRight = Math.min(right, Math.floor(k + (n - m) * s / n + sd));\n            quickselectStep(arr, k, newLeft, newRight, compare);\n        }\n\n        var t = arr[k];\n        var i = left;\n        var j = right;\n\n        swap(arr, left, k);\n        if (compare(arr[right], t) > 0) swap(arr, left, right);\n\n        while (i < j) {\n            swap(arr, i, j);\n            i++;\n            j--;\n            while (compare(arr[i], t) < 0) i++;\n            while (compare(arr[j], t) > 0) j--;\n        }\n\n        if (compare(arr[left], t) === 0) swap(arr, left, j);\n        else {\n            j++;\n            swap(arr, j, right);\n        }\n\n        if (j <= k) left = j + 1;\n        if (k <= j) right = j - 1;\n    }\n}\n\nfunction swap(arr, i, j) {\n    var tmp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = tmp;\n}\n\nfunction defaultCompare(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n}\n\nreturn quickselect;\n\n})));\n","/**\n * @module ol/functions\n */\n/**\n * Always returns true.\n * @returns {boolean} true.\n */\nexport function TRUE() {\n    return true;\n}\n/**\n * Always returns false.\n * @returns {boolean} false.\n */\nexport function FALSE() {\n    return false;\n}\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() { }\n//# sourceMappingURL=functions.js.map","/**\n * @module ol/obj\n */\n/**\n * Polyfill for Object.assign().  Assigns enumerable and own properties from\n * one or more source objects to a target object.\n * See https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign.\n *\n * @param {!Object} target The target object.\n * @param {...Object} var_sources The source object(s).\n * @return {!Object} The modified target object.\n */\nexport var assign = (typeof Object.assign === 'function') ? Object.assign : function (target, var_sources) {\n    if (target === undefined || target === null) {\n        throw new TypeError('Cannot convert undefined or null to object');\n    }\n    var output = Object(target);\n    for (var i = 1, ii = arguments.length; i < ii; ++i) {\n        var source = arguments[i];\n        if (source !== undefined && source !== null) {\n            for (var key in source) {\n                if (source.hasOwnProperty(key)) {\n                    output[key] = source[key];\n                }\n            }\n        }\n    }\n    return output;\n};\n/**\n * Removes all properties from an object.\n * @param {Object} object The object to clear.\n */\nexport function clear(object) {\n    for (var property in object) {\n        delete object[property];\n    }\n}\n/**\n * Polyfill for Object.values().  Get an array of property values from an object.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/values\n *\n * @param {!Object<K,V>} object The object from which to get the values.\n * @return {!Array<V>} The property values.\n * @template K,V\n */\nexport var getValues = (typeof Object.values === 'function') ? Object.values : function (object) {\n    var values = [];\n    for (var property in object) {\n        values.push(object[property]);\n    }\n    return values;\n};\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n    var property;\n    for (property in object) {\n        return false;\n    }\n    return !property;\n}\n//# sourceMappingURL=obj.js.map","/**\n * @module ol/events\n */\nimport { clear } from './obj.js';\n/**\n * Key to use with {@link module:ol/Observable~Observable#unByKey}.\n * @typedef {Object} EventsKey\n * @property {Object} [bindTo]\n * @property {ListenerFunction} [boundListener]\n * @property {boolean} callOnce\n * @property {number} [deleteIndex]\n * @property {ListenerFunction} listener\n * @property {import(\"./events/Target.js\").EventTargetLike} target\n * @property {string} type\n * @api\n */\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n/**\n * @param {EventsKey} listenerObj Listener object.\n * @return {ListenerFunction} Bound listener.\n */\nexport function bindListener(listenerObj) {\n    var boundListener = function (evt) {\n        var listener = listenerObj.listener;\n        var bindTo = listenerObj.bindTo || listenerObj.target;\n        if (listenerObj.callOnce) {\n            unlistenByKey(listenerObj);\n        }\n        return listener.call(bindTo, evt);\n    };\n    listenerObj.boundListener = boundListener;\n    return boundListener;\n}\n/**\n * Finds the matching {@link module:ol/events~EventsKey} in the given listener\n * array.\n *\n * @param {!Array<!EventsKey>} listeners Array of listeners.\n * @param {!Function} listener The listener function.\n * @param {Object=} opt_this The `this` value inside the listener.\n * @param {boolean=} opt_setDeleteIndex Set the deleteIndex on the matching\n *     listener, for {@link module:ol/events~unlistenByKey}.\n * @return {EventsKey|undefined} The matching listener object.\n */\nexport function findListener(listeners, listener, opt_this, opt_setDeleteIndex) {\n    var listenerObj;\n    for (var i = 0, ii = listeners.length; i < ii; ++i) {\n        listenerObj = listeners[i];\n        if (listenerObj.listener === listener &&\n            listenerObj.bindTo === opt_this) {\n            if (opt_setDeleteIndex) {\n                listenerObj.deleteIndex = i;\n            }\n            return listenerObj;\n        }\n    }\n    return undefined;\n}\n/**\n * @param {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @param {string} type Type.\n * @return {Array<EventsKey>|undefined} Listeners.\n */\nexport function getListeners(target, type) {\n    var listenerMap = getListenerMap(target);\n    return listenerMap ? listenerMap[type] : undefined;\n}\n/**\n * Get the lookup of listeners.\n * @param {Object} target Target.\n * @param {boolean=} opt_create If a map should be created if it doesn't exist.\n * @return {!Object<string, Array<EventsKey>>} Map of\n *     listeners by event type.\n */\nfunction getListenerMap(target, opt_create) {\n    var listenerMap = target.ol_lm;\n    if (!listenerMap && opt_create) {\n        listenerMap = target.ol_lm = {};\n    }\n    return listenerMap;\n}\n/**\n * Remove the listener map from a target.\n * @param {Object} target Target.\n */\nfunction removeListenerMap(target) {\n    delete target.ol_lm;\n}\n/**\n * Clean up all listener objects of the given type.  All properties on the\n * listener objects will be removed, and if no listeners remain in the listener\n * map, it will be removed from the target.\n * @param {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @param {string} type Type.\n */\nfunction removeListeners(target, type) {\n    var listeners = getListeners(target, type);\n    if (listeners) {\n        for (var i = 0, ii = listeners.length; i < ii; ++i) {\n            /** @type {import(\"./events/Target.js\").default} */ (target).\n                removeEventListener(type, listeners[i].boundListener);\n            clear(listeners[i]);\n        }\n        listeners.length = 0;\n        var listenerMap = getListenerMap(target);\n        if (listenerMap) {\n            delete listenerMap[type];\n            if (Object.keys(listenerMap).length === 0) {\n                removeListenerMap(target);\n            }\n        }\n    }\n}\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events~unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean=} opt_once If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, opt_this, opt_once) {\n    var listenerMap = getListenerMap(target, true);\n    var listeners = listenerMap[type];\n    if (!listeners) {\n        listeners = listenerMap[type] = [];\n    }\n    var listenerObj = findListener(listeners, listener, opt_this, false);\n    if (listenerObj) {\n        if (!opt_once) {\n            // Turn one-off listener into a permanent one.\n            listenerObj.callOnce = false;\n        }\n    }\n    else {\n        listenerObj = {\n            bindTo: opt_this,\n            callOnce: !!opt_once,\n            listener: listener,\n            target: target,\n            type: type\n        };\n        /** @type {import(\"./events/Target.js\").default} */ (target).\n            addEventListener(type, bindListener(listenerObj));\n        listeners.push(listenerObj);\n    }\n    return listenerObj;\n}\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events~unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events~listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, opt_this) {\n    return listen(target, type, listener, opt_this, true);\n}\n/**\n * Unregisters an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * To return a listener, this function needs to be called with the exact same\n * arguments that were used for a previous {@link module:ol/events~listen} call.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n */\nexport function unlisten(target, type, listener, opt_this) {\n    var listeners = getListeners(target, type);\n    if (listeners) {\n        var listenerObj = findListener(listeners, listener, opt_this, true);\n        if (listenerObj) {\n            unlistenByKey(listenerObj);\n        }\n    }\n}\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events~listen} or {@link module:ol/events~listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n    if (key && key.target) {\n        /** @type {import(\"./events/Target.js\").default} */ (key.target).\n            removeEventListener(key.type, key.boundListener);\n        var listeners = getListeners(key.target, key.type);\n        if (listeners) {\n            var i = 'deleteIndex' in key ? key.deleteIndex : listeners.indexOf(key);\n            if (i !== -1) {\n                listeners.splice(i, 1);\n            }\n            if (listeners.length === 0) {\n                removeListeners(key.target, key.type);\n            }\n        }\n        clear(key);\n    }\n}\n/**\n * Unregisters all event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Target.\n */\nexport function unlistenAll(target) {\n    var listenerMap = getListenerMap(target);\n    if (listenerMap) {\n        for (var type in listenerMap) {\n            removeListeners(target, type);\n        }\n    }\n}\n//# sourceMappingURL=events.js.map","/**\n * @module ol/events/Event\n */\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nvar Event = /** @class */ (function () {\n    /**\n     * @param {string} type Type.\n     */\n    function Event(type) {\n        /**\n         * @type {boolean}\n         */\n        this.propagationStopped;\n        /**\n         * The event type.\n         * @type {string}\n         * @api\n         */\n        this.type = type;\n        /**\n         * The event target.\n         * @type {Object}\n         * @api\n         */\n        this.target = null;\n    }\n    /**\n     * Stop event propagation.\n     * @api\n     */\n    Event.prototype.preventDefault = function () {\n        this.propagationStopped = true;\n    };\n    /**\n     * Stop event propagation.\n     * @api\n     */\n    Event.prototype.stopPropagation = function () {\n        this.propagationStopped = true;\n    };\n    return Event;\n}());\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n    evt.stopPropagation();\n}\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n    evt.preventDefault();\n}\nexport default Event;\n//# sourceMappingURL=Event.js.map","/**\n * @module ol/events/EventType\n */\n/**\n * @enum {string}\n * @const\n */\nexport default {\n    /**\n     * Generic change event. Triggered when the revision counter is increased.\n     * @event module:ol/events/Event~Event#change\n     * @api\n     */\n    CHANGE: 'change',\n    CLEAR: 'clear',\n    CONTEXTMENU: 'contextmenu',\n    CLICK: 'click',\n    DBLCLICK: 'dblclick',\n    DRAGENTER: 'dragenter',\n    DRAGOVER: 'dragover',\n    DROP: 'drop',\n    ERROR: 'error',\n    KEYDOWN: 'keydown',\n    KEYPRESS: 'keypress',\n    LOAD: 'load',\n    MOUSEDOWN: 'mousedown',\n    MOUSEMOVE: 'mousemove',\n    MOUSEOUT: 'mouseout',\n    MOUSEUP: 'mouseup',\n    MOUSEWHEEL: 'mousewheel',\n    MSPOINTERDOWN: 'MSPointerDown',\n    RESIZE: 'resize',\n    TOUCHSTART: 'touchstart',\n    TOUCHMOVE: 'touchmove',\n    TOUCHEND: 'touchend',\n    WHEEL: 'wheel'\n};\n//# sourceMappingURL=EventType.js.map","/**\n * @module ol/util\n */\n/**\n * @return {?} Any return.\n */\nexport function abstract() {\n    return /** @type {?} */ ((function () {\n        throw new Error('Unimplemented abstract method.');\n    })());\n}\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nvar uidCounter_ = 0;\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @function module:ol.getUid\n * @api\n */\nexport function getUid(obj) {\n    return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport var VERSION = '6.0.0-beta.6';\n//# sourceMappingURL=util.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport { unlistenAll } from '../events.js';\nimport { VOID } from '../functions.js';\nimport Event from './Event.js';\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nvar Target = /** @class */ (function (_super) {\n    __extends(Target, _super);\n    function Target() {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {!Object<string, number>}\n         */\n        _this.pendingRemovals_ = {};\n        /**\n         * @private\n         * @type {!Object<string, number>}\n         */\n        _this.dispatching_ = {};\n        /**\n         * @private\n         * @type {!Object<string, Array<import(\"../events.js\").ListenerFunction>>}\n         */\n        _this.listeners_ = {};\n        return _this;\n    }\n    /**\n     * @param {string} type Type.\n     * @param {import(\"../events.js\").ListenerFunction} listener Listener.\n     */\n    Target.prototype.addEventListener = function (type, listener) {\n        var listeners = this.listeners_[type];\n        if (!listeners) {\n            listeners = this.listeners_[type] = [];\n        }\n        if (listeners.indexOf(listener) === -1) {\n            listeners.push(listener);\n        }\n    };\n    /**\n     * Dispatches an event and calls all listeners listening for events\n     * of this type. The event parameter can either be a string or an\n     * Object with a `type` property.\n     *\n     * @param {{type: string,\n     *     target: (EventTargetLike|undefined),\n     *     propagationStopped: (boolean|undefined)}|\n     *     import(\"./Event.js\").default|string} event Event object.\n     * @return {boolean|undefined} `false` if anyone called preventDefault on the\n     *     event object or if any of the listeners returned false.\n     * @api\n     */\n    Target.prototype.dispatchEvent = function (event) {\n        var evt = typeof event === 'string' ? new Event(event) : event;\n        var type = evt.type;\n        evt.target = this;\n        var listeners = this.listeners_[type];\n        var propagate;\n        if (listeners) {\n            if (!(type in this.dispatching_)) {\n                this.dispatching_[type] = 0;\n                this.pendingRemovals_[type] = 0;\n            }\n            ++this.dispatching_[type];\n            for (var i = 0, ii = listeners.length; i < ii; ++i) {\n                if (listeners[i].call(this, evt) === false || evt.propagationStopped) {\n                    propagate = false;\n                    break;\n                }\n            }\n            --this.dispatching_[type];\n            if (this.dispatching_[type] === 0) {\n                var pendingRemovals = this.pendingRemovals_[type];\n                delete this.pendingRemovals_[type];\n                while (pendingRemovals--) {\n                    this.removeEventListener(type, VOID);\n                }\n                delete this.dispatching_[type];\n            }\n            return propagate;\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    Target.prototype.disposeInternal = function () {\n        unlistenAll(this);\n    };\n    /**\n     * Get the listeners for a specified event type. Listeners are returned in the\n     * order that they will be called in.\n     *\n     * @param {string} type Type.\n     * @return {Array<import(\"../events.js\").ListenerFunction>} Listeners.\n     */\n    Target.prototype.getListeners = function (type) {\n        return this.listeners_[type];\n    };\n    /**\n     * @param {string=} opt_type Type. If not provided,\n     *     `true` will be returned if this event target has any listeners.\n     * @return {boolean} Has listeners.\n     */\n    Target.prototype.hasListener = function (opt_type) {\n        return opt_type ?\n            opt_type in this.listeners_ :\n            Object.keys(this.listeners_).length > 0;\n    };\n    /**\n     * @param {string} type Type.\n     * @param {import(\"../events.js\").ListenerFunction} listener Listener.\n     */\n    Target.prototype.removeEventListener = function (type, listener) {\n        var listeners = this.listeners_[type];\n        if (listeners) {\n            var index = listeners.indexOf(listener);\n            if (type in this.pendingRemovals_) {\n                // make listener a no-op, and remove later in #dispatchEvent()\n                listeners[index] = VOID;\n                ++this.pendingRemovals_[type];\n            }\n            else {\n                listeners.splice(index, 1);\n                if (listeners.length === 0) {\n                    delete this.listeners_[type];\n                }\n            }\n        }\n    };\n    return Target;\n}(Disposable));\nexport default Target;\n//# sourceMappingURL=Target.js.map","/**\n * @module ol/ObjectEventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    /**\n     * Triggered when a property is changed.\n     * @event module:ol/Object.ObjectEvent#propertychange\n     * @api\n     */\n    PROPERTYCHANGE: 'propertychange'\n};\n//# sourceMappingURL=ObjectEventType.js.map","/**\n * @module ol/Disposable\n */\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nvar Disposable = /** @class */ (function () {\n    function Disposable() {\n        /**\n         * The object has already been disposed.\n         * @type {boolean}\n         * @private\n         */\n        this.disposed_ = false;\n    }\n    /**\n     * Clean up.\n     */\n    Disposable.prototype.dispose = function () {\n        if (!this.disposed_) {\n            this.disposed_ = true;\n            this.disposeInternal();\n        }\n    };\n    /**\n     * Extension point for disposable objects.\n     * @protected\n     */\n    Disposable.prototype.disposeInternal = function () { };\n    return Disposable;\n}());\nexport default Disposable;\n//# sourceMappingURL=Disposable.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Observable\n */\nimport { listen, unlistenByKey, unlisten, listenOnce } from './events.js';\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").Event\n * @api\n */\nvar Observable = /** @class */ (function (_super) {\n    __extends(Observable, _super);\n    function Observable() {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.revision_ = 0;\n        return _this;\n    }\n    /**\n     * Increases the revision counter and dispatches a 'change' event.\n     * @api\n     */\n    Observable.prototype.changed = function () {\n        ++this.revision_;\n        this.dispatchEvent(EventType.CHANGE);\n    };\n    /**\n     * Get the version number for this object.  Each time the object is modified,\n     * its version number will be incremented.\n     * @return {number} Revision.\n     * @api\n     */\n    Observable.prototype.getRevision = function () {\n        return this.revision_;\n    };\n    /**\n     * Listen for a certain type of event.\n     * @param {string|Array<string>} type The event type or array of event types.\n     * @param {function(?): ?} listener The listener function.\n     * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n     *     called with an array of event types as the first argument, the return\n     *     will be an array of keys.\n     * @api\n     */\n    Observable.prototype.on = function (type, listener) {\n        if (Array.isArray(type)) {\n            var len = type.length;\n            var keys = new Array(len);\n            for (var i = 0; i < len; ++i) {\n                keys[i] = listen(this, type[i], listener);\n            }\n            return keys;\n        }\n        else {\n            return listen(this, /** @type {string} */ (type), listener);\n        }\n    };\n    /**\n     * Listen once for a certain type of event.\n     * @param {string|Array<string>} type The event type or array of event types.\n     * @param {function(?): ?} listener The listener function.\n     * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n     *     called with an array of event types as the first argument, the return\n     *     will be an array of keys.\n     * @api\n     */\n    Observable.prototype.once = function (type, listener) {\n        if (Array.isArray(type)) {\n            var len = type.length;\n            var keys = new Array(len);\n            for (var i = 0; i < len; ++i) {\n                keys[i] = listenOnce(this, type[i], listener);\n            }\n            return keys;\n        }\n        else {\n            return listenOnce(this, /** @type {string} */ (type), listener);\n        }\n    };\n    /**\n     * Unlisten for a certain type of event.\n     * @param {string|Array<string>} type The event type or array of event types.\n     * @param {function(?): ?} listener The listener function.\n     * @api\n     */\n    Observable.prototype.un = function (type, listener) {\n        if (Array.isArray(type)) {\n            for (var i = 0, ii = type.length; i < ii; ++i) {\n                unlisten(this, type[i], listener);\n            }\n            return;\n        }\n        else {\n            unlisten(this, /** @type {string} */ (type), listener);\n        }\n    };\n    return Observable;\n}(EventTarget));\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n    if (Array.isArray(key)) {\n        for (var i = 0, ii = key.length; i < ii; ++i) {\n            unlistenByKey(key[i]);\n        }\n    }\n    else {\n        unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n    }\n}\nexport default Observable;\n//# sourceMappingURL=Observable.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Object\n */\nimport { getUid } from './util.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport Event from './events/Event.js';\nimport { assign } from './obj.js';\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nvar ObjectEvent = /** @class */ (function (_super) {\n    __extends(ObjectEvent, _super);\n    /**\n     * @param {string} type The event type.\n     * @param {string} key The property name.\n     * @param {*} oldValue The old value for `key`.\n     */\n    function ObjectEvent(type, key, oldValue) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The name of the property whose value is changing.\n         * @type {string}\n         * @api\n         */\n        _this.key = key;\n        /**\n         * The old value. To get the new value use `e.target.get(e.key)` where\n         * `e` is the event object.\n         * @type {*}\n         * @api\n         */\n        _this.oldValue = oldValue;\n        return _this;\n    }\n    return ObjectEvent;\n}(Event));\nexport { ObjectEvent };\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nvar BaseObject = /** @class */ (function (_super) {\n    __extends(BaseObject, _super);\n    /**\n     * @param {Object<string, *>=} opt_values An object with key-value pairs.\n     */\n    function BaseObject(opt_values) {\n        var _this = _super.call(this) || this;\n        // Call {@link module:ol/util~getUid} to ensure that the order of objects' ids is\n        // the same as the order in which they were created.  This also helps to\n        // ensure that object properties are always added in the same order, which\n        // helps many JavaScript engines generate faster code.\n        getUid(_this);\n        /**\n         * @private\n         * @type {!Object<string, *>}\n         */\n        _this.values_ = {};\n        if (opt_values !== undefined) {\n            _this.setProperties(opt_values);\n        }\n        return _this;\n    }\n    /**\n     * Gets a value.\n     * @param {string} key Key name.\n     * @return {*} Value.\n     * @api\n     */\n    BaseObject.prototype.get = function (key) {\n        var value;\n        if (this.values_.hasOwnProperty(key)) {\n            value = this.values_[key];\n        }\n        return value;\n    };\n    /**\n     * Get a list of object property names.\n     * @return {Array<string>} List of property names.\n     * @api\n     */\n    BaseObject.prototype.getKeys = function () {\n        return Object.keys(this.values_);\n    };\n    /**\n     * Get an object of all property names and values.\n     * @return {Object<string, *>} Object.\n     * @api\n     */\n    BaseObject.prototype.getProperties = function () {\n        return assign({}, this.values_);\n    };\n    /**\n     * @param {string} key Key name.\n     * @param {*} oldValue Old value.\n     */\n    BaseObject.prototype.notify = function (key, oldValue) {\n        var eventType;\n        eventType = getChangeEventType(key);\n        this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n        eventType = ObjectEventType.PROPERTYCHANGE;\n        this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    };\n    /**\n     * Sets a value.\n     * @param {string} key Key name.\n     * @param {*} value Value.\n     * @param {boolean=} opt_silent Update without triggering an event.\n     * @api\n     */\n    BaseObject.prototype.set = function (key, value, opt_silent) {\n        if (opt_silent) {\n            this.values_[key] = value;\n        }\n        else {\n            var oldValue = this.values_[key];\n            this.values_[key] = value;\n            if (oldValue !== value) {\n                this.notify(key, oldValue);\n            }\n        }\n    };\n    /**\n     * Sets a collection of key-value pairs.  Note that this changes any existing\n     * properties and adds new ones (it does not remove any existing properties).\n     * @param {Object<string, *>} values Values.\n     * @param {boolean=} opt_silent Update without triggering an event.\n     * @api\n     */\n    BaseObject.prototype.setProperties = function (values, opt_silent) {\n        for (var key in values) {\n            this.set(key, values[key], opt_silent);\n        }\n    };\n    /**\n     * Unsets a property.\n     * @param {string} key Key name.\n     * @param {boolean=} opt_silent Unset without triggering an event.\n     * @api\n     */\n    BaseObject.prototype.unset = function (key, opt_silent) {\n        if (key in this.values_) {\n            var oldValue = this.values_[key];\n            delete this.values_[key];\n            if (!opt_silent) {\n                this.notify(key, oldValue);\n            }\n        }\n    };\n    return BaseObject;\n}(Observable));\n/**\n * @type {Object<string, string>}\n */\nvar changeEventTypeCache = {};\n/**\n * @param {string} key Key name.\n * @return {string} Change name.\n */\nexport function getChangeEventType(key) {\n    return changeEventTypeCache.hasOwnProperty(key) ?\n        changeEventTypeCache[key] :\n        (changeEventTypeCache[key] = 'change:' + key);\n}\nexport default BaseObject;\n//# sourceMappingURL=Object.js.map","/**\n * @module ol/easing\n */\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n    return Math.pow(t, 3);\n}\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n    return 1 - easeIn(1 - t);\n}\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n    return 3 * t * t - 2 * t * t * t;\n}\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n    return t;\n}\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing~inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n    if (t < 0.5) {\n        return inAndOut(2 * t);\n    }\n    else {\n        return 1 - inAndOut(2 * (t - 0.5));\n    }\n}\n//# sourceMappingURL=easing.js.map","/**\n * @module ol/interaction/Property\n */\n/**\n * @enum {string}\n */\nexport default {\n    ACTIVE: 'active'\n};\n//# sourceMappingURL=Property.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/Interaction\n */\nimport BaseObject from '../Object.js';\nimport { easeOut, linear } from '../easing.js';\nimport InteractionProperty from './Property.js';\n/**\n * Object literal with config options for interactions.\n * @typedef {Object} InteractionOptions\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} handleEvent\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. If the function returns a falsy value, propagation of\n * the event to other interactions in the map's interactions chain will be\n * prevented (this includes functions with no explicit return). The interactions\n * are traversed in reverse order of the interactions collection of the map.\n */\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n * by a keyboard event not a button element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n * @api\n */\nvar Interaction = /** @class */ (function (_super) {\n    __extends(Interaction, _super);\n    /**\n     * @param {InteractionOptions} options Options.\n     */\n    function Interaction(options) {\n        var _this = _super.call(this) || this;\n        if (options.handleEvent) {\n            _this.handleEvent = options.handleEvent;\n        }\n        /**\n         * @private\n         * @type {import(\"../PluggableMap.js\").default}\n         */\n        _this.map_ = null;\n        _this.setActive(true);\n        return _this;\n    }\n    /**\n     * Return whether the interaction is currently active.\n     * @return {boolean} `true` if the interaction is active, `false` otherwise.\n     * @observable\n     * @api\n     */\n    Interaction.prototype.getActive = function () {\n        return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\n    };\n    /**\n     * Get the map associated with this interaction.\n     * @return {import(\"../PluggableMap.js\").default} Map.\n     * @api\n     */\n    Interaction.prototype.getMap = function () {\n        return this.map_;\n    };\n    /**\n     * Handles the {@link module:ol/MapBrowserEvent map browser event}.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n     * @return {boolean} `false` to stop event propagation.\n     * @api\n     */\n    Interaction.prototype.handleEvent = function (mapBrowserEvent) {\n        return true;\n    };\n    /**\n     * Activate or deactivate the interaction.\n     * @param {boolean} active Active.\n     * @observable\n     * @api\n     */\n    Interaction.prototype.setActive = function (active) {\n        this.set(InteractionProperty.ACTIVE, active);\n    };\n    /**\n     * Remove the interaction from its current map and attach it to the new map.\n     * Subclasses may set up event handlers to get notified about changes to\n     * the map here.\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     */\n    Interaction.prototype.setMap = function (map) {\n        this.map_ = map;\n    };\n    return Interaction;\n}(BaseObject));\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {import(\"../coordinate.js\").Coordinate} delta Delta.\n * @param {number=} opt_duration Duration.\n */\nexport function pan(view, delta, opt_duration) {\n    var currentCenter = view.getCenter();\n    if (currentCenter) {\n        var center = [currentCenter[0] + delta[0], currentCenter[1] + delta[1]];\n        view.animate_({\n            duration: opt_duration !== undefined ? opt_duration : 250,\n            easing: linear,\n            center: view.getConstrainedCenter(center)\n        });\n    }\n}\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor Anchor coordinate.\n * @param {number=} opt_duration Duration.\n */\nexport function zoomByDelta(view, delta, opt_anchor, opt_duration) {\n    var currentZoom = view.getZoom();\n    if (currentZoom === undefined) {\n        return;\n    }\n    var newZoom = view.getConstrainedZoom(currentZoom + delta);\n    var newResolution = view.getResolutionForZoom(newZoom);\n    if (view.getAnimating()) {\n        view.cancelAnimations();\n    }\n    view.animate({\n        resolution: newResolution,\n        anchor: opt_anchor,\n        duration: opt_duration !== undefined ? opt_duration : 250,\n        easing: easeOut\n    });\n}\nexport default Interaction;\n//# sourceMappingURL=Interaction.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/AssertionError\n */\nimport { VERSION } from './util.js';\n/**\n * Error object thrown when an assertion failed. This is an ECMA-262 Error,\n * extended with a `code` property.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error.\n */\nvar AssertionError = /** @class */ (function (_super) {\n    __extends(AssertionError, _super);\n    /**\n     * @param {number} code Error code.\n     */\n    function AssertionError(code) {\n        var _this = this;\n        var path = VERSION === 'latest' ? VERSION : 'v' + VERSION.split('-')[0];\n        var message = 'Assertion failed. See https://openlayers.org/en/' + path +\n            '/doc/errors/#' + code + ' for details.';\n        _this = _super.call(this, message) || this;\n        /**\n         * Error code. The meaning of the code can be found on\n         * https://openlayers.org/en/latest/doc/errors/ (replace `latest` with\n         * the version found in the OpenLayers script's header comment if a version\n         * other than the latest is used).\n         * @type {number}\n         * @api\n         */\n        _this.code = code;\n        /**\n         * @type {string}\n         */\n        _this.name = 'AssertionError';\n        // Re-assign message, see https://github.com/Rich-Harris/buble/issues/40\n        _this.message = message;\n        return _this;\n    }\n    return AssertionError;\n}(Error));\nexport default AssertionError;\n//# sourceMappingURL=AssertionError.js.map","/**\n * @module ol/asserts\n */\nimport AssertionError from './AssertionError.js';\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {number} errorCode Error code.\n */\nexport function assert(assertion, errorCode) {\n    if (!assertion) {\n        throw new AssertionError(errorCode);\n    }\n}\n//# sourceMappingURL=asserts.js.map","/**\n * @module ol/math\n */\nimport { assert } from './asserts.js';\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n    return Math.min(Math.max(value, min), max);\n}\n/**\n * Return the hyperbolic cosine of a given number. The method will use the\n * native `Math.cosh` function if it is available, otherwise the hyperbolic\n * cosine will be calculated via the reference implementation of the Mozilla\n * developer network.\n *\n * @param {number} x X.\n * @return {number} Hyperbolic cosine of x.\n */\nexport var cosh = (function () {\n    // Wrapped in a iife, to save the overhead of checking for the native\n    // implementation on every invocation.\n    var cosh;\n    if ('cosh' in Math) {\n        // The environment supports the native Math.cosh function, use it…\n        cosh = Math.cosh;\n    }\n    else {\n        // … else, use the reference implementation of MDN:\n        cosh = function (x) {\n            var y = /** @type {Math} */ (Math).exp(x);\n            return (y + 1 / y) / 2;\n        };\n    }\n    return cosh;\n}());\n/**\n * @param {number} x X.\n * @return {number} The smallest power of two greater than or equal to x.\n */\nexport function roundUpToPowerOfTwo(x) {\n    assert(0 < x, 29); // `x` must be greater than `0`\n    return Math.pow(2, Math.ceil(Math.log(x) / Math.LN2));\n}\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n    var dx = x2 - x1;\n    var dy = y2 - y1;\n    if (dx !== 0 || dy !== 0) {\n        var t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n        if (t > 1) {\n            x1 = x2;\n            y1 = y2;\n        }\n        else if (t > 0) {\n            x1 += dx * t;\n            y1 += dy * t;\n        }\n    }\n    return squaredDistance(x, y, x1, y1);\n}\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n    var dx = x2 - x1;\n    var dy = y2 - y1;\n    return dx * dx + dy * dy;\n}\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n    var n = mat.length;\n    for (var i = 0; i < n; i++) {\n        // Find max in the i-th column (ignoring i - 1 first rows)\n        var maxRow = i;\n        var maxEl = Math.abs(mat[i][i]);\n        for (var r = i + 1; r < n; r++) {\n            var absValue = Math.abs(mat[r][i]);\n            if (absValue > maxEl) {\n                maxEl = absValue;\n                maxRow = r;\n            }\n        }\n        if (maxEl === 0) {\n            return null; // matrix is singular\n        }\n        // Swap max row with i-th (current) row\n        var tmp = mat[maxRow];\n        mat[maxRow] = mat[i];\n        mat[i] = tmp;\n        // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n        for (var j = i + 1; j < n; j++) {\n            var coef = -mat[j][i] / mat[i][i];\n            for (var k = i; k < n + 1; k++) {\n                if (i == k) {\n                    mat[j][k] = 0;\n                }\n                else {\n                    mat[j][k] += coef * mat[i][k];\n                }\n            }\n        }\n    }\n    // Solve Ax=b for upper triangular matrix A (mat)\n    var x = new Array(n);\n    for (var l = n - 1; l >= 0; l--) {\n        x[l] = mat[l][n] / mat[l][l];\n        for (var m = l - 1; m >= 0; m--) {\n            mat[m][n] -= mat[m][l] * x[l];\n        }\n    }\n    return x;\n}\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n    return angleInRadians * 180 / Math.PI;\n}\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n    return angleInDegrees * Math.PI / 180;\n}\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n    var r = a % b;\n    return r * b < 0 ? r + b : r;\n}\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n    return a + x * (b - a);\n}\n//# sourceMappingURL=math.js.map","/**\n * @module ol/geom/GeometryType\n */\n/**\n * The geometry type. One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, `'Circle'`.\n * @enum {string}\n */\nexport default {\n    POINT: 'Point',\n    LINE_STRING: 'LineString',\n    LINEAR_RING: 'LinearRing',\n    POLYGON: 'Polygon',\n    MULTI_POINT: 'MultiPoint',\n    MULTI_LINE_STRING: 'MultiLineString',\n    MULTI_POLYGON: 'MultiPolygon',\n    GEOMETRY_COLLECTION: 'GeometryCollection',\n    CIRCLE: 'Circle'\n};\n//# sourceMappingURL=GeometryType.js.map","/**\n * @module ol/extent/Corner\n */\n/**\n * Extent corner.\n * @enum {string}\n */\nexport default {\n    BOTTOM_LEFT: 'bottom-left',\n    BOTTOM_RIGHT: 'bottom-right',\n    TOP_LEFT: 'top-left',\n    TOP_RIGHT: 'top-right'\n};\n//# sourceMappingURL=Corner.js.map","/**\n * @module ol/extent/Relationship\n */\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n    UNKNOWN: 0,\n    INTERSECTING: 1,\n    ABOVE: 2,\n    RIGHT: 4,\n    BELOW: 8,\n    LEFT: 16\n};\n//# sourceMappingURL=Relationship.js.map","/**\n * @module ol/extent\n */\nimport { assert } from './asserts.js';\nimport Corner from './extent/Corner.js';\nimport Relationship from './extent/Relationship.js';\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n    var extent = createEmpty();\n    for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n        extendCoordinate(extent, coordinates[i]);\n    }\n    return extent;\n}\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent=} opt_extent Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, opt_extent) {\n    var minX = Math.min.apply(null, xs);\n    var minY = Math.min.apply(null, ys);\n    var maxX = Math.max.apply(null, xs);\n    var maxY = Math.max.apply(null, ys);\n    return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n}\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, opt_extent) {\n    if (opt_extent) {\n        opt_extent[0] = extent[0] - value;\n        opt_extent[1] = extent[1] - value;\n        opt_extent[2] = extent[2] + value;\n        opt_extent[3] = extent[3] + value;\n        return opt_extent;\n    }\n    else {\n        return [\n            extent[0] - value,\n            extent[1] - value,\n            extent[2] + value,\n            extent[3] + value\n        ];\n    }\n}\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, opt_extent) {\n    if (opt_extent) {\n        opt_extent[0] = extent[0];\n        opt_extent[1] = extent[1];\n        opt_extent[2] = extent[2];\n        opt_extent[3] = extent[3];\n        return opt_extent;\n    }\n    else {\n        return extent.slice();\n    }\n}\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n    var dx, dy;\n    if (x < extent[0]) {\n        dx = extent[0] - x;\n    }\n    else if (extent[2] < x) {\n        dx = x - extent[2];\n    }\n    else {\n        dx = 0;\n    }\n    if (y < extent[1]) {\n        dy = extent[1] - y;\n    }\n    else if (extent[3] < y) {\n        dy = y - extent[3];\n    }\n    else {\n        dy = 0;\n    }\n    return dx * dx + dy * dy;\n}\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n    return containsXY(extent, coordinate[0], coordinate[1]);\n}\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n    return extent1[0] <= extent2[0] && extent2[2] <= extent1[2] &&\n        extent1[1] <= extent2[1] && extent2[3] <= extent1[3];\n}\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n    return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {Relationship} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n    var minX = extent[0];\n    var minY = extent[1];\n    var maxX = extent[2];\n    var maxY = extent[3];\n    var x = coordinate[0];\n    var y = coordinate[1];\n    var relationship = Relationship.UNKNOWN;\n    if (x < minX) {\n        relationship = relationship | Relationship.LEFT;\n    }\n    else if (x > maxX) {\n        relationship = relationship | Relationship.RIGHT;\n    }\n    if (y < minY) {\n        relationship = relationship | Relationship.BELOW;\n    }\n    else if (y > maxY) {\n        relationship = relationship | Relationship.ABOVE;\n    }\n    if (relationship === Relationship.UNKNOWN) {\n        relationship = Relationship.INTERSECTING;\n    }\n    return relationship;\n}\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n    return [Infinity, Infinity, -Infinity, -Infinity];\n}\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent=} opt_extent Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, opt_extent) {\n    if (opt_extent) {\n        opt_extent[0] = minX;\n        opt_extent[1] = minY;\n        opt_extent[2] = maxX;\n        opt_extent[3] = maxY;\n        return opt_extent;\n    }\n    else {\n        return [minX, minY, maxX, maxY];\n    }\n}\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(opt_extent) {\n    return createOrUpdate(Infinity, Infinity, -Infinity, -Infinity, opt_extent);\n}\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, opt_extent) {\n    var x = coordinate[0];\n    var y = coordinate[1];\n    return createOrUpdate(x, y, x, y, opt_extent);\n}\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, opt_extent) {\n    var extent = createOrUpdateEmpty(opt_extent);\n    return extendCoordinates(extent, coordinates);\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(flatCoordinates, offset, end, stride, opt_extent) {\n    var extent = createOrUpdateEmpty(opt_extent);\n    return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, opt_extent) {\n    var extent = createOrUpdateEmpty(opt_extent);\n    return extendRings(extent, rings);\n}\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n    return extent1[0] == extent2[0] && extent1[2] == extent2[2] &&\n        extent1[1] == extent2[1] && extent1[3] == extent2[3];\n}\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n    if (extent2[0] < extent1[0]) {\n        extent1[0] = extent2[0];\n    }\n    if (extent2[2] > extent1[2]) {\n        extent1[2] = extent2[2];\n    }\n    if (extent2[1] < extent1[1]) {\n        extent1[1] = extent2[1];\n    }\n    if (extent2[3] > extent1[3]) {\n        extent1[3] = extent2[3];\n    }\n    return extent1;\n}\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n    if (coordinate[0] < extent[0]) {\n        extent[0] = coordinate[0];\n    }\n    if (coordinate[0] > extent[2]) {\n        extent[2] = coordinate[0];\n    }\n    if (coordinate[1] < extent[1]) {\n        extent[1] = coordinate[1];\n    }\n    if (coordinate[1] > extent[3]) {\n        extent[3] = coordinate[1];\n    }\n}\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n    for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n        extendCoordinate(extent, coordinates[i]);\n    }\n    return extent;\n}\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(extent, flatCoordinates, offset, end, stride) {\n    for (; offset < end; offset += stride) {\n        extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n    }\n    return extent;\n}\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n    for (var i = 0, ii = rings.length; i < ii; ++i) {\n        extendCoordinates(extent, rings[i]);\n    }\n    return extent;\n}\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n    extent[0] = Math.min(extent[0], x);\n    extent[1] = Math.min(extent[1], y);\n    extent[2] = Math.max(extent[2], x);\n    extent[3] = Math.max(extent[3], y);\n}\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @return {S|boolean} Value.\n * @template S\n */\nexport function forEachCorner(extent, callback) {\n    var val;\n    val = callback(getBottomLeft(extent));\n    if (val) {\n        return val;\n    }\n    val = callback(getBottomRight(extent));\n    if (val) {\n        return val;\n    }\n    val = callback(getTopRight(extent));\n    if (val) {\n        return val;\n    }\n    val = callback(getTopLeft(extent));\n    if (val) {\n        return val;\n    }\n    return false;\n}\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n    var area = 0;\n    if (!isEmpty(extent)) {\n        area = getWidth(extent) * getHeight(extent);\n    }\n    return area;\n}\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n    return [extent[0], extent[1]];\n}\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n    return [extent[2], extent[1]];\n}\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n    return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {Corner} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n    var coordinate;\n    if (corner === Corner.BOTTOM_LEFT) {\n        coordinate = getBottomLeft(extent);\n    }\n    else if (corner === Corner.BOTTOM_RIGHT) {\n        coordinate = getBottomRight(extent);\n    }\n    else if (corner === Corner.TOP_LEFT) {\n        coordinate = getTopLeft(extent);\n    }\n    else if (corner === Corner.TOP_RIGHT) {\n        coordinate = getTopRight(extent);\n    }\n    else {\n        assert(false, 13); // Invalid corner\n    }\n    return coordinate;\n}\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n    var minX = Math.min(extent1[0], extent2[0]);\n    var minY = Math.min(extent1[1], extent2[1]);\n    var maxX = Math.max(extent1[2], extent2[2]);\n    var maxY = Math.max(extent1[3], extent2[3]);\n    return (maxX - minX) * (maxY - minY);\n}\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent=} opt_extent Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(center, resolution, rotation, size, opt_extent) {\n    var dx = resolution * size[0] / 2;\n    var dy = resolution * size[1] / 2;\n    var cosRotation = Math.cos(rotation);\n    var sinRotation = Math.sin(rotation);\n    var xCos = dx * cosRotation;\n    var xSin = dx * sinRotation;\n    var yCos = dy * cosRotation;\n    var ySin = dy * sinRotation;\n    var x = center[0];\n    var y = center[1];\n    var x0 = x - xCos + ySin;\n    var x1 = x - xCos - ySin;\n    var x2 = x + xCos - ySin;\n    var x3 = x + xCos + ySin;\n    var y0 = y - xSin - yCos;\n    var y1 = y - xSin + yCos;\n    var y2 = y + xSin + yCos;\n    var y3 = y + xSin - yCos;\n    return createOrUpdate(Math.min(x0, x1, x2, x3), Math.min(y0, y1, y2, y3), Math.max(x0, x1, x2, x3), Math.max(y0, y1, y2, y3), opt_extent);\n}\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n    return extent[3] - extent[1];\n}\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n    var intersection = getIntersection(extent1, extent2);\n    return getArea(intersection);\n}\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent=} opt_extent Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, opt_extent) {\n    var intersection = opt_extent ? opt_extent : createEmpty();\n    if (intersects(extent1, extent2)) {\n        if (extent1[0] > extent2[0]) {\n            intersection[0] = extent1[0];\n        }\n        else {\n            intersection[0] = extent2[0];\n        }\n        if (extent1[1] > extent2[1]) {\n            intersection[1] = extent1[1];\n        }\n        else {\n            intersection[1] = extent2[1];\n        }\n        if (extent1[2] < extent2[2]) {\n            intersection[2] = extent1[2];\n        }\n        else {\n            intersection[2] = extent2[2];\n        }\n        if (extent1[3] < extent2[3]) {\n            intersection[3] = extent1[3];\n        }\n        else {\n            intersection[3] = extent2[3];\n        }\n    }\n    else {\n        createOrUpdateEmpty(intersection);\n    }\n    return intersection;\n}\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n    return getWidth(extent) + getHeight(extent);\n}\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n    return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n    return [extent[0], extent[3]];\n}\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n    return [extent[2], extent[3]];\n}\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n    return extent[2] - extent[0];\n}\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n    return extent1[0] <= extent2[2] &&\n        extent1[2] >= extent2[0] &&\n        extent1[1] <= extent2[3] &&\n        extent1[3] >= extent2[1];\n}\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n    return extent[2] < extent[0] || extent[3] < extent[1];\n}\n/**\n * @param {Extent} extent Extent.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, opt_extent) {\n    if (opt_extent) {\n        opt_extent[0] = extent[0];\n        opt_extent[1] = extent[1];\n        opt_extent[2] = extent[2];\n        opt_extent[3] = extent[3];\n        return opt_extent;\n    }\n    else {\n        return extent;\n    }\n}\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n    var deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n    var deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n    extent[0] -= deltaX;\n    extent[2] += deltaX;\n    extent[1] -= deltaY;\n    extent[3] += deltaY;\n}\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n    var intersects = false;\n    var startRel = coordinateRelationship(extent, start);\n    var endRel = coordinateRelationship(extent, end);\n    if (startRel === Relationship.INTERSECTING ||\n        endRel === Relationship.INTERSECTING) {\n        intersects = true;\n    }\n    else {\n        var minX = extent[0];\n        var minY = extent[1];\n        var maxX = extent[2];\n        var maxY = extent[3];\n        var startX = start[0];\n        var startY = start[1];\n        var endX = end[0];\n        var endY = end[1];\n        var slope = (endY - startY) / (endX - startX);\n        var x = void 0, y = void 0;\n        if (!!(endRel & Relationship.ABOVE) &&\n            !(startRel & Relationship.ABOVE)) {\n            // potentially intersects top\n            x = endX - ((endY - maxY) / slope);\n            intersects = x >= minX && x <= maxX;\n        }\n        if (!intersects && !!(endRel & Relationship.RIGHT) &&\n            !(startRel & Relationship.RIGHT)) {\n            // potentially intersects right\n            y = endY - ((endX - maxX) * slope);\n            intersects = y >= minY && y <= maxY;\n        }\n        if (!intersects && !!(endRel & Relationship.BELOW) &&\n            !(startRel & Relationship.BELOW)) {\n            // potentially intersects bottom\n            x = endX - ((endY - minY) / slope);\n            intersects = x >= minX && x <= maxX;\n        }\n        if (!intersects && !!(endRel & Relationship.LEFT) &&\n            !(startRel & Relationship.LEFT)) {\n            // potentially intersects left\n            y = endY - ((endX - minX) * slope);\n            intersects = y >= minY && y <= maxY;\n        }\n    }\n    return intersects;\n}\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent=} opt_extent Destination extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, opt_extent) {\n    var coordinates = [\n        extent[0], extent[1],\n        extent[0], extent[3],\n        extent[2], extent[1],\n        extent[2], extent[3]\n    ];\n    transformFn(coordinates, coordinates, 2);\n    var xs = [coordinates[0], coordinates[2], coordinates[4], coordinates[6]];\n    var ys = [coordinates[1], coordinates[3], coordinates[5], coordinates[7]];\n    return _boundingExtentXYs(xs, ys, opt_extent);\n}\n//# sourceMappingURL=extent.js.map","/**\n * @module ol/proj/Units\n */\n/**\n * Projection units: `'degrees'`, `'ft'`, `'m'`, `'pixels'`, `'tile-pixels'` or\n * `'us-ft'`.\n * @enum {string}\n */\nvar Units = {\n    DEGREES: 'degrees',\n    FEET: 'ft',\n    METERS: 'm',\n    PIXELS: 'pixels',\n    TILE_PIXELS: 'tile-pixels',\n    USFEET: 'us-ft'\n};\n/**\n * Meters per unit lookup table.\n * @const\n * @type {Object<Units, number>}\n * @api\n */\nexport var METERS_PER_UNIT = {};\n// use the radius of the Normal sphere\nMETERS_PER_UNIT[Units.DEGREES] = 2 * Math.PI * 6370997 / 360;\nMETERS_PER_UNIT[Units.FEET] = 0.3048;\nMETERS_PER_UNIT[Units.METERS] = 1;\nMETERS_PER_UNIT[Units.USFEET] = 1200 / 3937;\nexport default Units;\n//# sourceMappingURL=Units.js.map","/**\n * @module ol/proj/Projection\n */\nimport { METERS_PER_UNIT } from './Units.js';\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {import(\"./Units.js\").default|string} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link module:ol/proj/Units~METERS_PER_UNIT}\n * lookup table.\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\n * @property {function(number, import(\"../coordinate.js\").Coordinate):number} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `{number}` view resolution and an `{import(\"../coordinate.js\").Coordinate}` as arguments, and returns\n * the `{number}` resolution in projection units at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj#getPointResolution} function will be used.\n */\n/**\n * @classdesc\n * Projection definition class. One of these is created for each projection\n * supported in the application and stored in the {@link module:ol/proj} namespace.\n * You can use these in applications, but this is not required, as API params\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\n * code will suffice.\n *\n * You can use {@link module:ol/proj~get} to retrieve the object for a particular\n * projection.\n *\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\n * with the following aliases:\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\n *     urn:x-ogc:def:crs:EPSG:4326\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\n *\n * If you use [proj4js](https://github.com/proj4js/proj4js), aliases can\n * be added using `proj4.defs()`. After all required projection definitions are\n * added, call the {@link module:ol/proj/proj4~register} function.\n *\n * @api\n */\nvar Projection = /** @class */ (function () {\n    /**\n     * @param {Options} options Projection options.\n     */\n    function Projection(options) {\n        /**\n         * @private\n         * @type {string}\n         */\n        this.code_ = options.code;\n        /**\n         * Units of projected coordinates. When set to `TILE_PIXELS`, a\n         * `this.extent_` and `this.worldExtent_` must be configured properly for each\n         * tile.\n         * @private\n         * @type {import(\"./Units.js\").default}\n         */\n        this.units_ = /** @type {import(\"./Units.js\").default} */ (options.units);\n        /**\n         * Validity extent of the projection in projected coordinates. For projections\n         * with `TILE_PIXELS` units, this is the extent of the tile in\n         * tile pixel space.\n         * @private\n         * @type {import(\"../extent.js\").Extent}\n         */\n        this.extent_ = options.extent !== undefined ? options.extent : null;\n        /**\n         * Extent of the world in EPSG:4326. For projections with\n         * `TILE_PIXELS` units, this is the extent of the tile in\n         * projected coordinate space.\n         * @private\n         * @type {import(\"../extent.js\").Extent}\n         */\n        this.worldExtent_ = options.worldExtent !== undefined ?\n            options.worldExtent : null;\n        /**\n         * @private\n         * @type {string}\n         */\n        this.axisOrientation_ = options.axisOrientation !== undefined ?\n            options.axisOrientation : 'enu';\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this.global_ = options.global !== undefined ? options.global : false;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this.canWrapX_ = !!(this.global_ && this.extent_);\n        /**\n         * @private\n         * @type {function(number, import(\"../coordinate.js\").Coordinate):number|undefined}\n         */\n        this.getPointResolutionFunc_ = options.getPointResolution;\n        /**\n         * @private\n         * @type {import(\"../tilegrid/TileGrid.js\").default}\n         */\n        this.defaultTileGrid_ = null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.metersPerUnit_ = options.metersPerUnit;\n    }\n    /**\n     * @return {boolean} The projection is suitable for wrapping the x-axis\n     */\n    Projection.prototype.canWrapX = function () {\n        return this.canWrapX_;\n    };\n    /**\n     * Get the code for this projection, e.g. 'EPSG:4326'.\n     * @return {string} Code.\n     * @api\n     */\n    Projection.prototype.getCode = function () {\n        return this.code_;\n    };\n    /**\n     * Get the validity extent for this projection.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     * @api\n     */\n    Projection.prototype.getExtent = function () {\n        return this.extent_;\n    };\n    /**\n     * Get the units of this projection.\n     * @return {import(\"./Units.js\").default} Units.\n     * @api\n     */\n    Projection.prototype.getUnits = function () {\n        return this.units_;\n    };\n    /**\n     * Get the amount of meters per unit of this projection.  If the projection is\n     * not configured with `metersPerUnit` or a units identifier, the return is\n     * `undefined`.\n     * @return {number|undefined} Meters.\n     * @api\n     */\n    Projection.prototype.getMetersPerUnit = function () {\n        return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n    };\n    /**\n     * Get the world extent for this projection.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     * @api\n     */\n    Projection.prototype.getWorldExtent = function () {\n        return this.worldExtent_;\n    };\n    /**\n     * Get the axis orientation of this projection.\n     * Example values are:\n     * enu - the default easting, northing, elevation.\n     * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n     *     or south orientated transverse mercator.\n     * wnu - westing, northing, up - some planetary coordinate systems have\n     *     \"west positive\" coordinate systems\n     * @return {string} Axis orientation.\n     * @api\n     */\n    Projection.prototype.getAxisOrientation = function () {\n        return this.axisOrientation_;\n    };\n    /**\n     * Is this projection a global projection which spans the whole world?\n     * @return {boolean} Whether the projection is global.\n     * @api\n     */\n    Projection.prototype.isGlobal = function () {\n        return this.global_;\n    };\n    /**\n     * Set if the projection is a global projection which spans the whole world\n     * @param {boolean} global Whether the projection is global.\n     * @api\n     */\n    Projection.prototype.setGlobal = function (global) {\n        this.global_ = global;\n        this.canWrapX_ = !!(global && this.extent_);\n    };\n    /**\n     * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\n     */\n    Projection.prototype.getDefaultTileGrid = function () {\n        return this.defaultTileGrid_;\n    };\n    /**\n     * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\n     */\n    Projection.prototype.setDefaultTileGrid = function (tileGrid) {\n        this.defaultTileGrid_ = tileGrid;\n    };\n    /**\n     * Set the validity extent for this projection.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @api\n     */\n    Projection.prototype.setExtent = function (extent) {\n        this.extent_ = extent;\n        this.canWrapX_ = !!(this.global_ && extent);\n    };\n    /**\n     * Set the world extent for this projection.\n     * @param {import(\"../extent.js\").Extent} worldExtent World extent\n     *     [minlon, minlat, maxlon, maxlat].\n     * @api\n     */\n    Projection.prototype.setWorldExtent = function (worldExtent) {\n        this.worldExtent_ = worldExtent;\n    };\n    /**\n     * Set the getPointResolution function (see {@link module:ol/proj~getPointResolution}\n     * for this projection.\n     * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\n     * @api\n     */\n    Projection.prototype.setGetPointResolution = function (func) {\n        this.getPointResolutionFunc_ = func;\n    };\n    /**\n     * Get the custom point resolution function for this projection (if set).\n     * @return {function(number, import(\"../coordinate.js\").Coordinate):number|undefined} The custom point\n     * resolution function (if set).\n     */\n    Projection.prototype.getPointResolutionFunc = function () {\n        return this.getPointResolutionFunc_;\n    };\n    return Projection;\n}());\nexport default Projection;\n//# sourceMappingURL=Projection.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/proj/epsg3857\n */\nimport { cosh } from '../math.js';\nimport Projection from './Projection.js';\nimport Units from './Units.js';\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport var RADIUS = 6378137;\n/**\n * @const\n * @type {number}\n */\nexport var HALF_SIZE = Math.PI * RADIUS;\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport var EXTENT = [\n    -HALF_SIZE, -HALF_SIZE,\n    HALF_SIZE, HALF_SIZE\n];\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport var WORLD_EXTENT = [-180, -85, 180, 85];\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nvar EPSG3857Projection = /** @class */ (function (_super) {\n    __extends(EPSG3857Projection, _super);\n    /**\n     * @param {string} code Code.\n     */\n    function EPSG3857Projection(code) {\n        return _super.call(this, {\n            code: code,\n            units: Units.METERS,\n            extent: EXTENT,\n            global: true,\n            worldExtent: WORLD_EXTENT,\n            getPointResolution: function (resolution, point) {\n                return resolution / cosh(point[1] / RADIUS);\n            }\n        }) || this;\n    }\n    return EPSG3857Projection;\n}(Projection));\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport var PROJECTIONS = [\n    new EPSG3857Projection('EPSG:3857'),\n    new EPSG3857Projection('EPSG:102100'),\n    new EPSG3857Projection('EPSG:102113'),\n    new EPSG3857Projection('EPSG:900913'),\n    new EPSG3857Projection('urn:ogc:def:crs:EPSG:6.18:3:3857'),\n    new EPSG3857Projection('urn:ogc:def:crs:EPSG::3857'),\n    new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857')\n];\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, opt_output, opt_dimension) {\n    var length = input.length;\n    var dimension = opt_dimension > 1 ? opt_dimension : 2;\n    var output = opt_output;\n    if (output === undefined) {\n        if (dimension > 2) {\n            // preserve values beyond second dimension\n            output = input.slice();\n        }\n        else {\n            output = new Array(length);\n        }\n    }\n    var halfSize = HALF_SIZE;\n    for (var i = 0; i < length; i += dimension) {\n        output[i] = halfSize * input[i] / 180;\n        var y = RADIUS *\n            Math.log(Math.tan(Math.PI * (+input[i + 1] + 90) / 360));\n        if (y > halfSize) {\n            y = halfSize;\n        }\n        else if (y < -halfSize) {\n            y = -halfSize;\n        }\n        output[i + 1] = y;\n    }\n    return output;\n}\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, opt_output, opt_dimension) {\n    var length = input.length;\n    var dimension = opt_dimension > 1 ? opt_dimension : 2;\n    var output = opt_output;\n    if (output === undefined) {\n        if (dimension > 2) {\n            // preserve values beyond second dimension\n            output = input.slice();\n        }\n        else {\n            output = new Array(length);\n        }\n    }\n    for (var i = 0; i < length; i += dimension) {\n        output[i] = 180 * input[i] / HALF_SIZE;\n        output[i + 1] = 360 * Math.atan(Math.exp(input[i + 1] / RADIUS)) / Math.PI - 90;\n    }\n    return output;\n}\n//# sourceMappingURL=epsg3857.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\nimport Units from './Units.js';\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport var RADIUS = 6378137;\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport var EXTENT = [-180, -90, 180, 90];\n/**\n * @const\n * @type {number}\n */\nexport var METERS_PER_UNIT = Math.PI * RADIUS / 180;\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nvar EPSG4326Projection = /** @class */ (function (_super) {\n    __extends(EPSG4326Projection, _super);\n    /**\n     * @param {string} code Code.\n     * @param {string=} opt_axisOrientation Axis orientation.\n     */\n    function EPSG4326Projection(code, opt_axisOrientation) {\n        return _super.call(this, {\n            code: code,\n            units: Units.DEGREES,\n            extent: EXTENT,\n            axisOrientation: opt_axisOrientation,\n            global: true,\n            metersPerUnit: METERS_PER_UNIT,\n            worldExtent: EXTENT\n        }) || this;\n    }\n    return EPSG4326Projection;\n}(Projection));\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport var PROJECTIONS = [\n    new EPSG4326Projection('CRS:84'),\n    new EPSG4326Projection('EPSG:4326', 'neu'),\n    new EPSG4326Projection('urn:ogc:def:crs:EPSG::4326', 'neu'),\n    new EPSG4326Projection('urn:ogc:def:crs:EPSG:6.6:4326', 'neu'),\n    new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n    new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n    new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n    new EPSG4326Projection('urn:x-ogc:def:crs:EPSG:4326', 'neu')\n];\n//# sourceMappingURL=epsg4326.js.map","/**\n * @module ol/proj/projections\n */\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nvar cache = {};\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n    cache = {};\n}\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default} The projection (if cached).\n */\nexport function get(code) {\n    return cache[code] || null;\n}\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n    cache[code] = projection;\n}\n//# sourceMappingURL=projections.js.map","/**\n * @module ol/proj/transforms\n */\nimport { isEmpty } from '../obj.js';\n/**\n * @private\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n */\nvar transforms = {};\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n    transforms = {};\n}\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {import(\"./Projection.js\").default} source Source.\n * @param {import(\"./Projection.js\").default} destination Destination.\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n    var sourceCode = source.getCode();\n    var destinationCode = destination.getCode();\n    if (!(sourceCode in transforms)) {\n        transforms[sourceCode] = {};\n    }\n    transforms[sourceCode][destinationCode] = transformFn;\n}\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {import(\"./Projection.js\").default} source Source projection.\n * @param {import(\"./Projection.js\").default} destination Destination projection.\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n    var sourceCode = source.getCode();\n    var destinationCode = destination.getCode();\n    var transform = transforms[sourceCode][destinationCode];\n    delete transforms[sourceCode][destinationCode];\n    if (isEmpty(transforms[sourceCode])) {\n        delete transforms[sourceCode];\n    }\n    return transform;\n}\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {import(\"../proj.js\").TransformFunction|undefined} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n    var transform;\n    if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n        transform = transforms[sourceCode][destinationCode];\n    }\n    return transform;\n}\n//# sourceMappingURL=transforms.js.map","/**\n * @module ol/proj\n */\n/**\n * The ol/proj module stores:\n * * a list of {@link module:ol/proj/Projection}\n * objects, one for each projection supported by the application\n * * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj~addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection} object for the new projection and add it with\n * {@link module:ol/proj~addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj~addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection} with\n * {@link module:ol/proj~addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport { getDistance } from './sphere.js';\nimport { applyTransform } from './extent.js';\nimport { modulo } from './math.js';\nimport { toEPSG4326, fromEPSG4326, PROJECTIONS as EPSG3857_PROJECTIONS } from './proj/epsg3857.js';\nimport { PROJECTIONS as EPSG4326_PROJECTIONS } from './proj/epsg4326.js';\nimport Projection from './proj/Projection.js';\nimport Units, { METERS_PER_UNIT } from './proj/Units.js';\nimport * as projections from './proj/projections.js';\nimport { add as addTransformFunc, clear as clearTransformFuncs, get as getTransformFunc } from './proj/transforms.js';\n/**\n * A projection as {@link module:ol/proj/Projection}, SRS identifier\n * string or undefined.\n * @typedef {Projection|string|undefined} ProjectionLike\n * @api\n */\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @typedef {function(Array<number>, Array<number>=, number=): Array<number>} TransformFunction\n * @api\n */\nexport { METERS_PER_UNIT };\nexport { Projection };\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, opt_output, opt_dimension) {\n    var output;\n    if (opt_output !== undefined) {\n        for (var i = 0, ii = input.length; i < ii; ++i) {\n            opt_output[i] = input[i];\n        }\n        output = opt_output;\n    }\n    else {\n        output = input.slice();\n    }\n    return output;\n}\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, opt_output, opt_dimension) {\n    if (opt_output !== undefined && input !== opt_output) {\n        for (var i = 0, ii = input.length; i < ii; ++i) {\n            opt_output[i] = input[i];\n        }\n        input = opt_output;\n    }\n    return input;\n}\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n    projections.add(projection.getCode(), projection);\n    addTransformFunc(projection, projection, cloneTransform);\n}\n/**\n * @param {Array<Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n    projections.forEach(addProjection);\n}\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {Projection} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n    return typeof projectionLike === 'string' ?\n        projections.get(/** @type {string} */ (projectionLike)) :\n        ( /** @type {Projection} */(projectionLike) || null);\n}\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the 'point' pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\n * @param {Units=} opt_units Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, opt_units) {\n    projection = get(projection);\n    var pointResolution;\n    var getter = projection.getPointResolutionFunc();\n    if (getter) {\n        pointResolution = getter(resolution, point);\n        if (opt_units && opt_units !== projection.getUnits()) {\n            var metersPerUnit = projection.getMetersPerUnit();\n            if (metersPerUnit) {\n                pointResolution = pointResolution * metersPerUnit / METERS_PER_UNIT[opt_units];\n            }\n        }\n    }\n    else {\n        var units = projection.getUnits();\n        if (units == Units.DEGREES && !opt_units || opt_units == Units.DEGREES) {\n            pointResolution = resolution;\n        }\n        else {\n            // Estimate point resolution by transforming the center pixel to EPSG:4326,\n            // measuring its width and height on the normal sphere, and taking the\n            // average of the width and height.\n            var toEPSG4326_1 = getTransformFromProjections(projection, get('EPSG:4326'));\n            var vertices = [\n                point[0] - resolution / 2, point[1],\n                point[0] + resolution / 2, point[1],\n                point[0], point[1] - resolution / 2,\n                point[0], point[1] + resolution / 2\n            ];\n            vertices = toEPSG4326_1(vertices, vertices, 2);\n            var width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n            var height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n            pointResolution = (width + height) / 2;\n            var metersPerUnit = opt_units ?\n                METERS_PER_UNIT[opt_units] :\n                projection.getMetersPerUnit();\n            if (metersPerUnit !== undefined) {\n                pointResolution /= metersPerUnit;\n            }\n        }\n    }\n    return pointResolution;\n}\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n    addProjections(projections);\n    projections.forEach(function (source) {\n        projections.forEach(function (destination) {\n            if (source !== destination) {\n                addTransformFunc(source, destination, cloneTransform);\n            }\n        });\n    });\n}\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<Projection>} projections2 Projections with equal\n *     meaning.\n * @param {TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(projections1, projections2, forwardTransform, inverseTransform) {\n    projections1.forEach(function (projection1) {\n        projections2.forEach(function (projection2) {\n            addTransformFunc(projection1, projection2, forwardTransform);\n            addTransformFunc(projection2, projection1, inverseTransform);\n        });\n    });\n}\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n    projections.clear();\n    clearTransformFuncs();\n}\n/**\n * @param {Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n    if (!projection) {\n        return get(defaultCode);\n    }\n    else if (typeof projection === 'string') {\n        return get(projection);\n    }\n    else {\n        return (\n        /** @type {Projection} */ (projection));\n    }\n}\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\n *     transform.\n * @return {TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n    return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>=} opt_output Output.\n     * @param {number=} opt_dimension Dimension.\n     * @return {Array<number>} Output.\n     */\n    function (input, opt_output, opt_dimension) {\n        var length = input.length;\n        var dimension = opt_dimension !== undefined ? opt_dimension : 2;\n        var output = opt_output !== undefined ? opt_output : new Array(length);\n        for (var i = 0; i < length; i += dimension) {\n            var point = coordTransform([input[i], input[i + 1]]);\n            output[i] = point[0];\n            output[i + 1] = point[1];\n            for (var j = dimension - 1; j >= 2; --j) {\n                output[i + j] = input[i + j];\n            }\n        }\n        return output;\n    });\n}\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {ProjectionLike} source Source projection.\n * @param {ProjectionLike} destination Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n    var sourceProj = get(source);\n    var destProj = get(destination);\n    addTransformFunc(sourceProj, destProj, createTransformFromCoordinateTransform(forward));\n    addTransformFunc(destProj, sourceProj, createTransformFromCoordinateTransform(inverse));\n}\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {ProjectionLike=} opt_projection Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, opt_projection) {\n    return transform(coordinate, 'EPSG:4326', opt_projection !== undefined ? opt_projection : 'EPSG:3857');\n}\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\n * @param {ProjectionLike=} opt_projection Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, opt_projection) {\n    var lonLat = transform(coordinate, opt_projection !== undefined ? opt_projection : 'EPSG:3857', 'EPSG:4326');\n    var lon = lonLat[0];\n    if (lon < -180 || lon > 180) {\n        lonLat[0] = modulo(lon + 180, 360) - 180;\n    }\n    return lonLat;\n}\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {Projection} projection1 Projection 1.\n * @param {Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n    if (projection1 === projection2) {\n        return true;\n    }\n    var equalUnits = projection1.getUnits() === projection2.getUnits();\n    if (projection1.getCode() === projection2.getCode()) {\n        return equalUnits;\n    }\n    else {\n        var transformFunc = getTransformFromProjections(projection1, projection2);\n        return transformFunc === cloneTransform && equalUnits;\n    }\n}\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {Projection} sourceProjection Source Projection object.\n * @param {Projection} destinationProjection Destination Projection\n *     object.\n * @return {TransformFunction} Transform function.\n */\nexport function getTransformFromProjections(sourceProjection, destinationProjection) {\n    var sourceCode = sourceProjection.getCode();\n    var destinationCode = destinationProjection.getCode();\n    var transformFunc = getTransformFunc(sourceCode, destinationCode);\n    if (!transformFunc) {\n        transformFunc = identityTransform;\n    }\n    return transformFunc;\n}\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {ProjectionLike} source Source.\n * @param {ProjectionLike} destination Destination.\n * @return {TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n    var sourceProjection = get(source);\n    var destinationProjection = get(destination);\n    return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original).\n *\n * See {@link module:ol/proj~transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n    var transformFunc = getTransform(source, destination);\n    return transformFunc(coordinate, undefined, coordinate.length);\n}\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./extent.js\").Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination) {\n    var transformFunc = getTransform(source, destination);\n    return applyTransform(extent, transformFunc);\n}\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\n * @param {Projection} sourceProjection Source projection.\n * @param {Projection} destinationProjection Destination projection.\n * @return {import(\"./coordinate.js\").Coordinate} Point.\n */\nexport function transformWithProjections(point, sourceProjection, destinationProjection) {\n    var transformFunc = getTransformFromProjections(sourceProjection, destinationProjection);\n    return transformFunc(point);\n}\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n    // Add transformations that don't alter coordinates to convert within set of\n    // projections with equal meaning.\n    addEquivalentProjections(EPSG3857_PROJECTIONS);\n    addEquivalentProjections(EPSG4326_PROJECTIONS);\n    // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n    // coordinates and back.\n    addEquivalentTransforms(EPSG4326_PROJECTIONS, EPSG3857_PROJECTIONS, fromEPSG4326, toEPSG4326);\n}\naddCommon();\n//# sourceMappingURL=proj.js.map","/**\n * @module ol/interaction/DragAndDrop\n */\n// FIXME should handle all geo-referenced data, not just vector data\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { TRUE } from '../functions.js';\nimport { listen, unlistenByKey } from '../events.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport Interaction from './Interaction.js';\nimport { get as getProjection } from '../proj.js';\n/**\n * @typedef {Object} Options\n * @property {Array<typeof import(\"../format/Feature.js\").default>} [formatConstructors] Format constructors.\n * @property {import(\"../source/Vector.js\").default} [source] Optional vector source where features will be added.  If a source is provided\n * all existing features will be removed and new features will be added when\n * they are dropped on the target.  If you want to add features to a vector\n * source without removing the existing features (append only), instead of\n * providing the source option listen for the \"addfeatures\" event.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Target projection. By default, the map's view's projection is used.\n * @property {HTMLElement} [target] The element that is used as the drop target, default is the viewport element.\n */\n/**\n * @enum {string}\n */\nvar DragAndDropEventType = {\n    /**\n     * Triggered when features are added\n     * @event DragAndDropEvent#addfeatures\n     * @api\n     */\n    ADD_FEATURES: 'addfeatures'\n};\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragAndDrop~DragAndDrop} instances are instances\n * of this type.\n */\nvar DragAndDropEvent = /** @class */ (function (_super) {\n    __extends(DragAndDropEvent, _super);\n    /**\n     * @param {DragAndDropEventType} type Type.\n     * @param {File} file File.\n     * @param {Array<import(\"../Feature.js\").default>=} opt_features Features.\n     * @param {import(\"../proj/Projection.js\").default=} opt_projection Projection.\n     */\n    function DragAndDropEvent(type, file, opt_features, opt_projection) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The features parsed from dropped data.\n         * @type {Array<import(\"../Feature.js\").FeatureLike>|undefined}\n         * @api\n         */\n        _this.features = opt_features;\n        /**\n         * The dropped file.\n         * @type {File}\n         * @api\n         */\n        _this.file = file;\n        /**\n         * The feature projection.\n         * @type {import(\"../proj/Projection.js\").default|undefined}\n         * @api\n         */\n        _this.projection = opt_projection;\n        return _this;\n    }\n    return DragAndDropEvent;\n}(Event));\n/**\n * @classdesc\n * Handles input of vector data by drag and drop.\n * @api\n *\n * @fires DragAndDropEvent\n */\nvar DragAndDrop = /** @class */ (function (_super) {\n    __extends(DragAndDrop, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function DragAndDrop(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, {\n            handleEvent: TRUE\n        }) || this;\n        /**\n         * @private\n         * @type {Array<typeof import(\"../format/Feature.js\").default>}\n         */\n        _this.formatConstructors_ = options.formatConstructors ?\n            options.formatConstructors : [];\n        /**\n         * @private\n         * @type {import(\"../proj/Projection.js\").default}\n         */\n        _this.projection_ = options.projection ?\n            getProjection(options.projection) : null;\n        /**\n         * @private\n         * @type {Array<import(\"../events.js\").EventsKey>}\n         */\n        _this.dropListenKeys_ = null;\n        /**\n         * @private\n         * @type {import(\"../source/Vector.js\").default}\n         */\n        _this.source_ = options.source || null;\n        /**\n         * @private\n         * @type {HTMLElement}\n         */\n        _this.target = options.target ? options.target : null;\n        return _this;\n    }\n    /**\n     * @param {File} file File.\n     * @param {Event} event Load event.\n     * @private\n     */\n    DragAndDrop.prototype.handleResult_ = function (file, event) {\n        var result = event.target.result;\n        var map = this.getMap();\n        var projection = this.projection_;\n        if (!projection) {\n            var view = map.getView();\n            projection = view.getProjection();\n        }\n        var formatConstructors = this.formatConstructors_;\n        var features = [];\n        for (var i = 0, ii = formatConstructors.length; i < ii; ++i) {\n            var format = new formatConstructors[i]();\n            features = this.tryReadFeatures_(format, result, {\n                featureProjection: projection\n            });\n            if (features && features.length > 0) {\n                break;\n            }\n        }\n        if (this.source_) {\n            this.source_.clear();\n            this.source_.addFeatures(features);\n        }\n        this.dispatchEvent(new DragAndDropEvent(DragAndDropEventType.ADD_FEATURES, file, features, projection));\n    };\n    /**\n     * @private\n     */\n    DragAndDrop.prototype.registerListeners_ = function () {\n        var map = this.getMap();\n        if (map) {\n            var dropArea = this.target ? this.target : map.getViewport();\n            this.dropListenKeys_ = [\n                listen(dropArea, EventType.DROP, handleDrop, this),\n                listen(dropArea, EventType.DRAGENTER, handleStop, this),\n                listen(dropArea, EventType.DRAGOVER, handleStop, this),\n                listen(dropArea, EventType.DROP, handleStop, this)\n            ];\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    DragAndDrop.prototype.setActive = function (active) {\n        _super.prototype.setActive.call(this, active);\n        if (active) {\n            this.registerListeners_();\n        }\n        else {\n            this.unregisterListeners_();\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    DragAndDrop.prototype.setMap = function (map) {\n        this.unregisterListeners_();\n        _super.prototype.setMap.call(this, map);\n        if (this.getActive()) {\n            this.registerListeners_();\n        }\n    };\n    /**\n     * @param {import(\"../format/Feature.js\").default} format Format.\n     * @param {string} text Text.\n     * @param {import(\"../format/Feature.js\").ReadOptions} options Read options.\n     * @private\n     * @return {Array<import(\"../Feature.js\").FeatureLike>} Features.\n     */\n    DragAndDrop.prototype.tryReadFeatures_ = function (format, text, options) {\n        try {\n            return format.readFeatures(text, options);\n        }\n        catch (e) {\n            return null;\n        }\n    };\n    /**\n     * @private\n     */\n    DragAndDrop.prototype.unregisterListeners_ = function () {\n        if (this.dropListenKeys_) {\n            this.dropListenKeys_.forEach(unlistenByKey);\n            this.dropListenKeys_ = null;\n        }\n    };\n    return DragAndDrop;\n}(Interaction));\n/**\n * @param {DragEvent} event Event.\n * @this {DragAndDrop}\n */\nfunction handleDrop(event) {\n    var files = event.dataTransfer.files;\n    for (var i = 0, ii = files.length; i < ii; ++i) {\n        var file = files.item(i);\n        var reader = new FileReader();\n        reader.addEventListener(EventType.LOAD, this.handleResult_.bind(this, file));\n        reader.readAsText(file);\n    }\n}\n/**\n * @param {DragEvent} event Event.\n */\nfunction handleStop(event) {\n    event.stopPropagation();\n    event.preventDefault();\n    event.dataTransfer.dropEffect = 'copy';\n}\nexport default DragAndDrop;\n//# sourceMappingURL=DragAndDrop.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Feature\n */\nimport { assert } from './asserts.js';\nimport { listen, unlisten, unlistenByKey } from './events.js';\nimport EventType from './events/EventType.js';\nimport BaseObject, { getChangeEventType } from './Object.js';\n/**\n * @typedef {typeof Feature|typeof import(\"./render/Feature.js\").default} FeatureClass\n */\n/**\n * @typedef {Feature|import(\"./render/Feature.js\").default} FeatureLike\n */\n/**\n * @classdesc\n * A vector object for geographic features with a geometry and other\n * attribute properties, similar to the features in vector file formats like\n * GeoJSON.\n *\n * Features can be styled individually with `setStyle`; otherwise they use the\n * style of their vector layer.\n *\n * Note that attribute properties are set as {@link module:ol/Object} properties on\n * the feature object, so they are observable, and have get/set accessors.\n *\n * Typically, a feature has a single geometry property. You can set the\n * geometry using the `setGeometry` method and get it with `getGeometry`.\n * It is possible to store more than one geometry on a feature using attribute\n * properties. By default, the geometry used for rendering is identified by\n * the property name `geometry`. If you want to use another geometry property\n * for rendering, use the `setGeometryName` method to change the attribute\n * property associated with the geometry for the feature.  For example:\n *\n * ```js\n *\n * import Feature from 'ol/Feature';\n * import Polygon from 'ol/geom/Polygon';\n * import Point from 'ol/geom/Point';\n *\n * var feature = new Feature({\n *   geometry: new Polygon(polyCoords),\n *   labelPoint: new Point(labelCoords),\n *   name: 'My Polygon'\n * });\n *\n * // get the polygon geometry\n * var poly = feature.getGeometry();\n *\n * // Render the feature as a point using the coordinates from labelPoint\n * feature.setGeometryName('labelPoint');\n *\n * // get the point geometry\n * var point = feature.getGeometry();\n * ```\n *\n * @api\n */\nvar Feature = /** @class */ (function (_super) {\n    __extends(Feature, _super);\n    /**\n     * @param {import(\"./geom/Geometry.js\").default|Object<string, *>=} opt_geometryOrProperties\n     *     You may pass a Geometry object directly, or an object literal containing\n     *     properties. If you pass an object literal, you may include a Geometry\n     *     associated with a `geometry` key.\n     */\n    function Feature(opt_geometryOrProperties) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {number|string|undefined}\n         */\n        _this.id_ = undefined;\n        /**\n         * @type {string}\n         * @private\n         */\n        _this.geometryName_ = 'geometry';\n        /**\n         * User provided style.\n         * @private\n         * @type {import(\"./style/Style.js\").StyleLike}\n         */\n        _this.style_ = null;\n        /**\n         * @private\n         * @type {import(\"./style/Style.js\").StyleFunction|undefined}\n         */\n        _this.styleFunction_ = undefined;\n        /**\n         * @private\n         * @type {?import(\"./events.js\").EventsKey}\n         */\n        _this.geometryChangeKey_ = null;\n        listen(_this, getChangeEventType(_this.geometryName_), _this.handleGeometryChanged_, _this);\n        if (opt_geometryOrProperties) {\n            if (typeof /** @type {?} */ (opt_geometryOrProperties).getSimplifiedGeometry === 'function') {\n                var geometry = /** @type {import(\"./geom/Geometry.js\").default} */ (opt_geometryOrProperties);\n                _this.setGeometry(geometry);\n            }\n            else {\n                /** @type {Object<string, *>} */\n                var properties = opt_geometryOrProperties;\n                _this.setProperties(properties);\n            }\n        }\n        return _this;\n    }\n    /**\n     * Clone this feature. If the original feature has a geometry it\n     * is also cloned. The feature id is not set in the clone.\n     * @return {Feature} The clone.\n     * @api\n     */\n    Feature.prototype.clone = function () {\n        var clone = new Feature(this.getProperties());\n        clone.setGeometryName(this.getGeometryName());\n        var geometry = this.getGeometry();\n        if (geometry) {\n            clone.setGeometry(geometry.clone());\n        }\n        var style = this.getStyle();\n        if (style) {\n            clone.setStyle(style);\n        }\n        return clone;\n    };\n    /**\n     * Get the feature's default geometry.  A feature may have any number of named\n     * geometries.  The \"default\" geometry (the one that is rendered by default) is\n     * set when calling {@link module:ol/Feature~Feature#setGeometry}.\n     * @return {import(\"./geom/Geometry.js\").default|undefined} The default geometry for the feature.\n     * @api\n     * @observable\n     */\n    Feature.prototype.getGeometry = function () {\n        return (\n        /** @type {import(\"./geom/Geometry.js\").default|undefined} */ (this.get(this.geometryName_)));\n    };\n    /**\n     * Get the feature identifier.  This is a stable identifier for the feature and\n     * is either set when reading data from a remote source or set explicitly by\n     * calling {@link module:ol/Feature~Feature#setId}.\n     * @return {number|string|undefined} Id.\n     * @api\n     */\n    Feature.prototype.getId = function () {\n        return this.id_;\n    };\n    /**\n     * Get the name of the feature's default geometry.  By default, the default\n     * geometry is named `geometry`.\n     * @return {string} Get the property name associated with the default geometry\n     *     for this feature.\n     * @api\n     */\n    Feature.prototype.getGeometryName = function () {\n        return this.geometryName_;\n    };\n    /**\n     * Get the feature's style. Will return what was provided to the\n     * {@link module:ol/Feature~Feature#setStyle} method.\n     * @return {import(\"./style/Style.js\").StyleLike} The feature style.\n     * @api\n     */\n    Feature.prototype.getStyle = function () {\n        return this.style_;\n    };\n    /**\n     * Get the feature's style function.\n     * @return {import(\"./style/Style.js\").StyleFunction|undefined} Return a function\n     * representing the current style of this feature.\n     * @api\n     */\n    Feature.prototype.getStyleFunction = function () {\n        return this.styleFunction_;\n    };\n    /**\n     * @private\n     */\n    Feature.prototype.handleGeometryChange_ = function () {\n        this.changed();\n    };\n    /**\n     * @private\n     */\n    Feature.prototype.handleGeometryChanged_ = function () {\n        if (this.geometryChangeKey_) {\n            unlistenByKey(this.geometryChangeKey_);\n            this.geometryChangeKey_ = null;\n        }\n        var geometry = this.getGeometry();\n        if (geometry) {\n            this.geometryChangeKey_ = listen(geometry, EventType.CHANGE, this.handleGeometryChange_, this);\n        }\n        this.changed();\n    };\n    /**\n     * Set the default geometry for the feature.  This will update the property\n     * with the name returned by {@link module:ol/Feature~Feature#getGeometryName}.\n     * @param {import(\"./geom/Geometry.js\").default|undefined} geometry The new geometry.\n     * @api\n     * @observable\n     */\n    Feature.prototype.setGeometry = function (geometry) {\n        this.set(this.geometryName_, geometry);\n    };\n    /**\n     * Set the style for the feature.  This can be a single style object, an array\n     * of styles, or a function that takes a resolution and returns an array of\n     * styles. If it is `null` the feature has no style (a `null` style).\n     * @param {import(\"./style/Style.js\").StyleLike} style Style for this feature.\n     * @api\n     * @fires module:ol/events/Event~Event#event:change\n     */\n    Feature.prototype.setStyle = function (style) {\n        this.style_ = style;\n        this.styleFunction_ = !style ? undefined : createStyleFunction(style);\n        this.changed();\n    };\n    /**\n     * Set the feature id.  The feature id is considered stable and may be used when\n     * requesting features or comparing identifiers returned from a remote source.\n     * The feature id can be used with the\n     * {@link module:ol/source/Vector~VectorSource#getFeatureById} method.\n     * @param {number|string|undefined} id The feature id.\n     * @api\n     * @fires module:ol/events/Event~Event#event:change\n     */\n    Feature.prototype.setId = function (id) {\n        this.id_ = id;\n        this.changed();\n    };\n    /**\n     * Set the property name to be used when getting the feature's default geometry.\n     * When calling {@link module:ol/Feature~Feature#getGeometry}, the value of the property with\n     * this name will be returned.\n     * @param {string} name The property name of the default geometry.\n     * @api\n     */\n    Feature.prototype.setGeometryName = function (name) {\n        unlisten(this, getChangeEventType(this.geometryName_), this.handleGeometryChanged_, this);\n        this.geometryName_ = name;\n        listen(this, getChangeEventType(this.geometryName_), this.handleGeometryChanged_, this);\n        this.handleGeometryChanged_();\n    };\n    return Feature;\n}(BaseObject));\n/**\n * Convert the provided object into a feature style function.  Functions passed\n * through unchanged.  Arrays of Style or single style objects wrapped\n * in a new feature style function.\n * @param {!import(\"./style/Style.js\").StyleFunction|!Array<import(\"./style/Style.js\").default>|!import(\"./style/Style.js\").default} obj\n *     A feature style function, a single style, or an array of styles.\n * @return {import(\"./style/Style.js\").StyleFunction} A style function.\n */\nexport function createStyleFunction(obj) {\n    if (typeof obj === 'function') {\n        return obj;\n    }\n    else {\n        /**\n         * @type {Array<import(\"./style/Style.js\").default>}\n         */\n        var styles_1;\n        if (Array.isArray(obj)) {\n            styles_1 = obj;\n        }\n        else {\n            assert(typeof /** @type {?} */ (obj).getZIndex === 'function', 41); // Expected an `import(\"./style/Style.js\").Style` or an array of `import(\"./style/Style.js\").Style`\n            var style = /** @type {import(\"./style/Style.js\").default} */ (obj);\n            styles_1 = [style];\n        }\n        return function () {\n            return styles_1;\n        };\n    }\n}\nexport default Feature;\n//# sourceMappingURL=Feature.js.map","/**\n * @module ol/format/Feature\n */\nimport { assign } from '../obj.js';\nimport { abstract } from '../util.js';\nimport { get as getProjection, equivalent as equivalentProjection, transformExtent } from '../proj.js';\n/**\n * @typedef {Object} ReadOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are reading.\n * If not provided, the projection will be derived from the data (where possible) or\n * the `dataProjection` of the format is assigned (where set). If the projection\n * can not be derived from the data and if no `dataProjection` is set for a format,\n * the features will not be reprojected.\n * @property {import(\"../extent.js\").Extent} [extent] Tile extent of the tile being read. This is only used and\n * required for {@link module:ol/format/MVT}.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * created by the format reader. If not provided, features will be returned in the\n * `dataProjection`.\n */\n/**\n * @typedef {Object} WriteOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are writing.\n * If not provided, the `dataProjection` of the format is assigned (where set).\n * If no `dataProjection` is set for a format, the features will be returned\n * in the `featureProjection`.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * that will be serialized by the format writer. If not provided, geometries are assumed\n * to be in the `dataProjection` if that is set; in other words, they are not transformed.\n * @property {boolean} [rightHanded] When writing geometries, follow the right-hand\n * rule for linear ring orientation.  This means that polygons will have counter-clockwise\n * exterior rings and clockwise interior rings.  By default, coordinates are serialized\n * as they are provided at construction.  If `true`, the right-hand rule will\n * be applied.  If `false`, the left-hand rule will be applied (clockwise for\n * exterior and counter-clockwise for interior rings).  Note that not all\n * formats support this.  The GeoJSON format does use this property when writing\n * geometries.\n * @property {number} [decimals] Maximum number of decimal places for coordinates.\n * Coordinates are stored internally as floats, but floating-point arithmetic can create\n * coordinates with a large number of decimal places, not generally wanted on output.\n * Set a number here to round coordinates. Can also be used to ensure that\n * coordinates read in can be written back out with the same number of decimals.\n * Default is no rounding.\n */\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for feature formats.\n * {FeatureFormat} subclasses provide the ability to decode and encode\n * {@link module:ol/Feature~Feature} objects from a variety of commonly used geospatial\n * file formats.  See the documentation for each format for more details.\n *\n * @abstract\n * @api\n */\nvar FeatureFormat = /** @class */ (function () {\n    function FeatureFormat() {\n        /**\n         * @protected\n         * @type {import(\"../proj/Projection.js\").default}\n         */\n        this.dataProjection = null;\n        /**\n         * @protected\n         * @type {import(\"../proj/Projection.js\").default}\n         */\n        this.defaultFeatureProjection = null;\n    }\n    /**\n     * Adds the data projection to the read options.\n     * @param {Document|Node|Object|string} source Source.\n     * @param {ReadOptions=} opt_options Options.\n     * @return {ReadOptions|undefined} Options.\n     * @protected\n     */\n    FeatureFormat.prototype.getReadOptions = function (source, opt_options) {\n        var options;\n        if (opt_options) {\n            options = {\n                dataProjection: opt_options.dataProjection ?\n                    opt_options.dataProjection : this.readProjection(source),\n                featureProjection: opt_options.featureProjection\n            };\n        }\n        return this.adaptOptions(options);\n    };\n    /**\n     * Sets the `dataProjection` on the options, if no `dataProjection`\n     * is set.\n     * @param {WriteOptions|ReadOptions|undefined} options\n     *     Options.\n     * @protected\n     * @return {WriteOptions|ReadOptions|undefined}\n     *     Updated options.\n     */\n    FeatureFormat.prototype.adaptOptions = function (options) {\n        return assign({\n            dataProjection: this.dataProjection,\n            featureProjection: this.defaultFeatureProjection\n        }, options);\n    };\n    /**\n     * @abstract\n     * @return {import(\"./FormatType.js\").default} Format.\n     */\n    FeatureFormat.prototype.getType = function () {\n        return abstract();\n    };\n    /**\n     * Read a single feature from a source.\n     *\n     * @abstract\n     * @param {Document|Node|Object|string} source Source.\n     * @param {ReadOptions=} opt_options Read options.\n     * @return {import(\"../Feature.js\").FeatureLike} Feature.\n     */\n    FeatureFormat.prototype.readFeature = function (source, opt_options) {\n        return abstract();\n    };\n    /**\n     * Read all features from a source.\n     *\n     * @abstract\n     * @param {Document|Node|ArrayBuffer|Object|string} source Source.\n     * @param {ReadOptions=} opt_options Read options.\n     * @return {Array<import(\"../Feature.js\").FeatureLike>} Features.\n     */\n    FeatureFormat.prototype.readFeatures = function (source, opt_options) {\n        return abstract();\n    };\n    /**\n     * Read a single geometry from a source.\n     *\n     * @abstract\n     * @param {Document|Node|Object|string} source Source.\n     * @param {ReadOptions=} opt_options Read options.\n     * @return {import(\"../geom/Geometry.js\").default} Geometry.\n     */\n    FeatureFormat.prototype.readGeometry = function (source, opt_options) {\n        return abstract();\n    };\n    /**\n     * Read the projection from a source.\n     *\n     * @abstract\n     * @param {Document|Node|Object|string} source Source.\n     * @return {import(\"../proj/Projection.js\").default} Projection.\n     */\n    FeatureFormat.prototype.readProjection = function (source) {\n        return abstract();\n    };\n    /**\n     * Encode a feature in this format.\n     *\n     * @abstract\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     * @param {WriteOptions=} opt_options Write options.\n     * @return {string} Result.\n     */\n    FeatureFormat.prototype.writeFeature = function (feature, opt_options) {\n        return abstract();\n    };\n    /**\n     * Encode an array of features in this format.\n     *\n     * @abstract\n     * @param {Array<import(\"../Feature.js\").default>} features Features.\n     * @param {WriteOptions=} opt_options Write options.\n     * @return {string} Result.\n     */\n    FeatureFormat.prototype.writeFeatures = function (features, opt_options) {\n        return abstract();\n    };\n    /**\n     * Write a single geometry in this format.\n     *\n     * @abstract\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @param {WriteOptions=} opt_options Write options.\n     * @return {string} Result.\n     */\n    FeatureFormat.prototype.writeGeometry = function (geometry, opt_options) {\n        return abstract();\n    };\n    return FeatureFormat;\n}());\nexport default FeatureFormat;\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {boolean} write Set to true for writing, false for reading.\n * @param {(WriteOptions|ReadOptions)=} opt_options Options.\n * @return {import(\"../geom/Geometry.js\").default} Transformed geometry.\n */\nexport function transformGeometryWithOptions(geometry, write, opt_options) {\n    var featureProjection = opt_options ? getProjection(opt_options.featureProjection) : null;\n    var dataProjection = opt_options ? getProjection(opt_options.dataProjection) : null;\n    var transformed;\n    if (featureProjection && dataProjection && !equivalentProjection(featureProjection, dataProjection)) {\n        transformed = (write ? geometry.clone() : geometry).transform(write ? featureProjection : dataProjection, write ? dataProjection : featureProjection);\n    }\n    else {\n        transformed = geometry;\n    }\n    if (write && opt_options && /** @type {WriteOptions} */ (opt_options).decimals !== undefined) {\n        var power_1 = Math.pow(10, /** @type {WriteOptions} */ (opt_options).decimals);\n        // if decimals option on write, round each coordinate appropriately\n        /**\n         * @param {Array<number>} coordinates Coordinates.\n         * @return {Array<number>} Transformed coordinates.\n         */\n        var transform = function (coordinates) {\n            for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n                coordinates[i] = Math.round(coordinates[i] * power_1) / power_1;\n            }\n            return coordinates;\n        };\n        if (transformed === geometry) {\n            transformed = geometry.clone();\n        }\n        transformed.applyTransform(transform);\n    }\n    return transformed;\n}\n/**\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {ReadOptions=} opt_options Read options.\n * @return {import(\"../extent.js\").Extent} Transformed extent.\n */\nexport function transformExtentWithOptions(extent, opt_options) {\n    var featureProjection = opt_options ? getProjection(opt_options.featureProjection) : null;\n    var dataProjection = opt_options ? getProjection(opt_options.dataProjection) : null;\n    if (featureProjection && dataProjection && !equivalentProjection(featureProjection, dataProjection)) {\n        return transformExtent(extent, dataProjection, featureProjection);\n    }\n    else {\n        return extent;\n    }\n}\n//# sourceMappingURL=Feature.js.map","/**\n * @module ol/format/FormatType\n */\n/**\n * @enum {string}\n */\nexport default {\n    ARRAY_BUFFER: 'arraybuffer',\n    JSON: 'json',\n    TEXT: 'text',\n    XML: 'xml'\n};\n//# sourceMappingURL=FormatType.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/JSONFeature\n */\nimport { abstract } from '../util.js';\nimport FeatureFormat from './Feature.js';\nimport FormatType from './FormatType.js';\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for JSON feature formats.\n *\n * @abstract\n */\nvar JSONFeature = /** @class */ (function (_super) {\n    __extends(JSONFeature, _super);\n    function JSONFeature() {\n        return _super.call(this) || this;\n    }\n    /**\n     * @inheritDoc\n     */\n    JSONFeature.prototype.getType = function () {\n        return FormatType.JSON;\n    };\n    /**\n     * Read a feature.  Only works for a single feature. Use `readFeatures` to\n     * read a feature collection.\n     *\n     * @param {ArrayBuffer|Document|Node|Object|string} source Source.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n     * @return {import(\"../Feature.js\").default} Feature.\n     * @api\n     */\n    JSONFeature.prototype.readFeature = function (source, opt_options) {\n        return this.readFeatureFromObject(getObject(source), this.getReadOptions(source, opt_options));\n    };\n    /**\n     * Read all features.  Works with both a single feature and a feature\n     * collection.\n     *\n     * @param {ArrayBuffer|Document|Node|Object|string} source Source.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n     * @return {Array<import(\"../Feature.js\").default>} Features.\n     * @api\n     */\n    JSONFeature.prototype.readFeatures = function (source, opt_options) {\n        return this.readFeaturesFromObject(getObject(source), this.getReadOptions(source, opt_options));\n    };\n    /**\n     * @abstract\n     * @param {Object} object Object.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n     * @protected\n     * @return {import(\"../Feature.js\").default} Feature.\n     */\n    JSONFeature.prototype.readFeatureFromObject = function (object, opt_options) {\n        return abstract();\n    };\n    /**\n     * @abstract\n     * @param {Object} object Object.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n     * @protected\n     * @return {Array<import(\"../Feature.js\").default>} Features.\n     */\n    JSONFeature.prototype.readFeaturesFromObject = function (object, opt_options) {\n        return abstract();\n    };\n    /**\n     * Read a geometry.\n     *\n     * @param {ArrayBuffer|Document|Node|Object|string} source Source.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n     * @return {import(\"../geom/Geometry.js\").default} Geometry.\n     * @api\n     */\n    JSONFeature.prototype.readGeometry = function (source, opt_options) {\n        return this.readGeometryFromObject(getObject(source), this.getReadOptions(source, opt_options));\n    };\n    /**\n     * @abstract\n     * @param {Object} object Object.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n     * @protected\n     * @return {import(\"../geom/Geometry.js\").default} Geometry.\n     */\n    JSONFeature.prototype.readGeometryFromObject = function (object, opt_options) {\n        return abstract();\n    };\n    /**\n     * Read the projection.\n     *\n     * @param {ArrayBuffer|Document|Node|Object|string} source Source.\n     * @return {import(\"../proj/Projection.js\").default} Projection.\n     * @api\n     */\n    JSONFeature.prototype.readProjection = function (source) {\n        return this.readProjectionFromObject(getObject(source));\n    };\n    /**\n     * @abstract\n     * @param {Object} object Object.\n     * @protected\n     * @return {import(\"../proj/Projection.js\").default} Projection.\n     */\n    JSONFeature.prototype.readProjectionFromObject = function (object) {\n        return abstract();\n    };\n    /**\n     * Encode a feature as string.\n     *\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n     * @return {string} Encoded feature.\n     * @api\n     */\n    JSONFeature.prototype.writeFeature = function (feature, opt_options) {\n        return JSON.stringify(this.writeFeatureObject(feature, opt_options));\n    };\n    /**\n     * @abstract\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n     * @return {Object} Object.\n     */\n    JSONFeature.prototype.writeFeatureObject = function (feature, opt_options) {\n        return abstract();\n    };\n    /**\n     * Encode an array of features as string.\n     *\n     * @param {Array<import(\"../Feature.js\").default>} features Features.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n     * @return {string} Encoded features.\n     * @api\n     */\n    JSONFeature.prototype.writeFeatures = function (features, opt_options) {\n        return JSON.stringify(this.writeFeaturesObject(features, opt_options));\n    };\n    /**\n     * @abstract\n     * @param {Array<import(\"../Feature.js\").default>} features Features.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n     * @return {Object} Object.\n     */\n    JSONFeature.prototype.writeFeaturesObject = function (features, opt_options) {\n        return abstract();\n    };\n    /**\n     * Encode a geometry as string.\n     *\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n     * @return {string} Encoded geometry.\n     * @api\n     */\n    JSONFeature.prototype.writeGeometry = function (geometry, opt_options) {\n        return JSON.stringify(this.writeGeometryObject(geometry, opt_options));\n    };\n    /**\n     * @abstract\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n     * @return {Object} Object.\n     */\n    JSONFeature.prototype.writeGeometryObject = function (geometry, opt_options) {\n        return abstract();\n    };\n    return JSONFeature;\n}(FeatureFormat));\n/**\n * @param {Document|Node|Object|string} source Source.\n * @return {Object} Object.\n */\nfunction getObject(source) {\n    if (typeof source === 'string') {\n        var object = JSON.parse(source);\n        return object ? /** @type {Object} */ (object) : null;\n    }\n    else if (source !== null) {\n        return source;\n    }\n    else {\n        return null;\n    }\n}\nexport default JSONFeature;\n//# sourceMappingURL=JSONFeature.js.map","/**\n * @module ol/geom/flat/transform\n */\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../transform.js\").Transform} transform Transform.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function transform2D(flatCoordinates, offset, end, stride, transform, opt_dest) {\n    var dest = opt_dest ? opt_dest : [];\n    var i = 0;\n    for (var j = offset; j < end; j += stride) {\n        var x = flatCoordinates[j];\n        var y = flatCoordinates[j + 1];\n        dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n        dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n    }\n    if (opt_dest && dest.length != i) {\n        dest.length = i;\n    }\n    return dest;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array<number>} anchor Rotation anchor point.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function rotate(flatCoordinates, offset, end, stride, angle, anchor, opt_dest) {\n    var dest = opt_dest ? opt_dest : [];\n    var cos = Math.cos(angle);\n    var sin = Math.sin(angle);\n    var anchorX = anchor[0];\n    var anchorY = anchor[1];\n    var i = 0;\n    for (var j = offset; j < end; j += stride) {\n        var deltaX = flatCoordinates[j] - anchorX;\n        var deltaY = flatCoordinates[j + 1] - anchorY;\n        dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n        dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n        for (var k = j + 2; k < j + stride; ++k) {\n            dest[i++] = flatCoordinates[k];\n        }\n    }\n    if (opt_dest && dest.length != i) {\n        dest.length = i;\n    }\n    return dest;\n}\n/**\n * Scale the coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array<number>} anchor Scale anchor point.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function scale(flatCoordinates, offset, end, stride, sx, sy, anchor, opt_dest) {\n    var dest = opt_dest ? opt_dest : [];\n    var anchorX = anchor[0];\n    var anchorY = anchor[1];\n    var i = 0;\n    for (var j = offset; j < end; j += stride) {\n        var deltaX = flatCoordinates[j] - anchorX;\n        var deltaY = flatCoordinates[j + 1] - anchorY;\n        dest[i++] = anchorX + sx * deltaX;\n        dest[i++] = anchorY + sy * deltaY;\n        for (var k = j + 2; k < j + stride; ++k) {\n            dest[i++] = flatCoordinates[k];\n        }\n    }\n    if (opt_dest && dest.length != i) {\n        dest.length = i;\n    }\n    return dest;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function translate(flatCoordinates, offset, end, stride, deltaX, deltaY, opt_dest) {\n    var dest = opt_dest ? opt_dest : [];\n    var i = 0;\n    for (var j = offset; j < end; j += stride) {\n        dest[i++] = flatCoordinates[j] + deltaX;\n        dest[i++] = flatCoordinates[j + 1] + deltaY;\n        for (var k = j + 2; k < j + stride; ++k) {\n            dest[i++] = flatCoordinates[k];\n        }\n    }\n    if (opt_dest && dest.length != i) {\n        dest.length = i;\n    }\n    return dest;\n}\n//# sourceMappingURL=transform.js.map","/**\n * @module ol/transform\n */\nimport { assert } from './asserts.js';\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array<number>} Transform\n */\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n/**\n * @private\n * @type {Transform}\n */\nvar tmp_ = new Array(6);\n/**\n * Create an identity transform.\n * @return {!Transform} Identity transform.\n */\nexport function create() {\n    return [1, 0, 0, 1, 0, 0];\n}\n/**\n * Resets the given transform to an identity transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Transform.\n */\nexport function reset(transform) {\n    return set(transform, 1, 0, 0, 1, 0, 0);\n}\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!Transform} transform1 Transform parameters of matrix 1.\n * @param {!Transform} transform2 Transform parameters of matrix 2.\n * @return {!Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n    var a1 = transform1[0];\n    var b1 = transform1[1];\n    var c1 = transform1[2];\n    var d1 = transform1[3];\n    var e1 = transform1[4];\n    var f1 = transform1[5];\n    var a2 = transform2[0];\n    var b2 = transform2[1];\n    var c2 = transform2[2];\n    var d2 = transform2[3];\n    var e2 = transform2[4];\n    var f2 = transform2[5];\n    transform1[0] = a1 * a2 + c1 * b2;\n    transform1[1] = b1 * a2 + d1 * b2;\n    transform1[2] = a1 * c2 + c1 * d2;\n    transform1[3] = b1 * c2 + d1 * d2;\n    transform1[4] = a1 * e2 + c1 * f2 + e1;\n    transform1[5] = b1 * e2 + d1 * f2 + f1;\n    return transform1;\n}\n/**\n * Set the transform components a-f on a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n    transform[0] = a;\n    transform[1] = b;\n    transform[2] = c;\n    transform[3] = d;\n    transform[4] = e;\n    transform[5] = f;\n    return transform;\n}\n/**\n * Set transform on one matrix from another matrix.\n * @param {!Transform} transform1 Matrix to set transform to.\n * @param {!Transform} transform2 Matrix to set transform from.\n * @return {!Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n    transform1[0] = transform2[0];\n    transform1[1] = transform2[1];\n    transform1[2] = transform2[2];\n    transform1[3] = transform2[3];\n    transform1[4] = transform2[4];\n    transform1[5] = transform2[5];\n    return transform1;\n}\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {Transform} transform The transformation.\n * @param {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} coordinate The coordinate to transform.\n * @return {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n    var x = coordinate[0];\n    var y = coordinate[1];\n    coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n    coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n    return coordinate;\n}\n/**\n * Applies rotation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n    var cos = Math.cos(angle);\n    var sin = Math.sin(angle);\n    return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n/**\n * Applies scale to a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n    return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n/**\n * Creates a scale transform.\n * @param {!Transform} target Transform to overwrite.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scale transform.\n */\nexport function makeScale(target, x, y) {\n    return set(target, x, 0, 0, y, 0, 0);\n}\n/**\n * Applies translation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n    return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n    var sin = Math.sin(angle);\n    var cos = Math.cos(angle);\n    transform[0] = sx * cos;\n    transform[1] = sy * sin;\n    transform[2] = -sx * sin;\n    transform[3] = sy * cos;\n    transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n    transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n    return transform;\n}\n/**\n * Invert the given transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (source) transform.\n */\nexport function invert(source) {\n    return makeInverse(source, source);\n}\n/**\n * Invert the given transform.\n * @param {!Transform} target Transform to be set as the inverse of\n *     the source transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (target) transform.\n */\nexport function makeInverse(target, source) {\n    var det = determinant(source);\n    assert(det !== 0, 32); // Transformation matrix cannot be inverted\n    var a = source[0];\n    var b = source[1];\n    var c = source[2];\n    var d = source[3];\n    var e = source[4];\n    var f = source[5];\n    target[0] = d / det;\n    target[1] = -b / det;\n    target[2] = -c / det;\n    target[3] = a / det;\n    target[4] = (c * f - d * e) / det;\n    target[5] = -(a * f - b * e) / det;\n    return target;\n}\n/**\n * Returns the determinant of the given matrix.\n * @param {!Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n    return mat[0] * mat[3] - mat[1] * mat[2];\n}\n/**\n * A string version of the transform.  This can be used\n * for CSS transforms.\n * @param {!Transform} mat Matrix.\n * @return {string} The transform as a string.\n */\nexport function toString(mat) {\n    return 'matrix(' + mat.join(', ') + ')';\n}\n//# sourceMappingURL=transform.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/Geometry\n */\nimport { abstract } from '../util.js';\nimport BaseObject from '../Object.js';\nimport { createEmpty, getHeight, returnOrUpdate } from '../extent.js';\nimport { transform2D } from './flat/transform.js';\nimport { get as getProjection, getTransform } from '../proj.js';\nimport Units from '../proj/Units.js';\nimport { create as createTransform, compose as composeTransform } from '../transform.js';\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nvar tmpTransform = createTransform();\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @abstract\n * @api\n */\nvar Geometry = /** @class */ (function (_super) {\n    __extends(Geometry, _super);\n    function Geometry() {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {import(\"../extent.js\").Extent}\n         */\n        _this.extent_ = createEmpty();\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.extentRevision_ = -1;\n        /**\n         * @protected\n         * @type {Object<string, Geometry>}\n         */\n        _this.simplifiedGeometryCache = {};\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.simplifiedGeometryRevision = 0;\n        return _this;\n    }\n    /**\n     * Make a complete copy of the geometry.\n     * @abstract\n     * @return {!Geometry} Clone.\n     */\n    Geometry.prototype.clone = function () {\n        return abstract();\n    };\n    /**\n     * @abstract\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n     * @param {number} minSquaredDistance Minimum squared distance.\n     * @return {number} Minimum squared distance.\n     */\n    Geometry.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        return abstract();\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @return {boolean} Contains (x, y).\n     */\n    Geometry.prototype.containsXY = function (x, y) {\n        var coord = this.getClosestPoint([x, y]);\n        return coord[0] === x && coord[1] === y;\n    };\n    /**\n     * Return the closest point of the geometry to the passed point as\n     * {@link module:ol/coordinate~Coordinate coordinate}.\n     * @param {import(\"../coordinate.js\").Coordinate} point Point.\n     * @param {import(\"../coordinate.js\").Coordinate=} opt_closestPoint Closest point.\n     * @return {import(\"../coordinate.js\").Coordinate} Closest point.\n     * @api\n     */\n    Geometry.prototype.getClosestPoint = function (point, opt_closestPoint) {\n        var closestPoint = opt_closestPoint ? opt_closestPoint : [NaN, NaN];\n        this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n        return closestPoint;\n    };\n    /**\n     * Returns true if this geometry includes the specified coordinate. If the\n     * coordinate is on the boundary of the geometry, returns false.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains coordinate.\n     * @api\n     */\n    Geometry.prototype.intersectsCoordinate = function (coordinate) {\n        return this.containsXY(coordinate[0], coordinate[1]);\n    };\n    /**\n     * @abstract\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @protected\n     * @return {import(\"../extent.js\").Extent} extent Extent.\n     */\n    Geometry.prototype.computeExtent = function (extent) {\n        return abstract();\n    };\n    /**\n     * Get the extent of the geometry.\n     * @param {import(\"../extent.js\").Extent=} opt_extent Extent.\n     * @return {import(\"../extent.js\").Extent} extent Extent.\n     * @api\n     */\n    Geometry.prototype.getExtent = function (opt_extent) {\n        if (this.extentRevision_ != this.getRevision()) {\n            this.extent_ = this.computeExtent(this.extent_);\n            this.extentRevision_ = this.getRevision();\n        }\n        return returnOrUpdate(this.extent_, opt_extent);\n    };\n    /**\n     * Rotate the geometry around a given coordinate. This modifies the geometry\n     * coordinates in place.\n     * @abstract\n     * @param {number} angle Rotation angle in radians.\n     * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n     * @api\n     */\n    Geometry.prototype.rotate = function (angle, anchor) {\n        abstract();\n    };\n    /**\n     * Scale the geometry (with an optional origin).  This modifies the geometry\n     * coordinates in place.\n     * @abstract\n     * @param {number} sx The scaling factor in the x-direction.\n     * @param {number=} opt_sy The scaling factor in the y-direction (defaults to\n     *     sx).\n     * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor The scale origin (defaults to the center\n     *     of the geometry extent).\n     * @api\n     */\n    Geometry.prototype.scale = function (sx, opt_sy, opt_anchor) {\n        abstract();\n    };\n    /**\n     * Create a simplified version of this geometry.  For linestrings, this uses\n     * the the {@link\n     * https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm\n     * Douglas Peucker} algorithm.  For polygons, a quantization-based\n     * simplification is used to preserve topology.\n     * @param {number} tolerance The tolerance distance for simplification.\n     * @return {Geometry} A new, simplified version of the original geometry.\n     * @api\n     */\n    Geometry.prototype.simplify = function (tolerance) {\n        return this.getSimplifiedGeometry(tolerance * tolerance);\n    };\n    /**\n     * Create a simplified version of this geometry using the Douglas Peucker\n     * algorithm.\n     * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n     * @abstract\n     * @param {number} squaredTolerance Squared tolerance.\n     * @return {Geometry} Simplified geometry.\n     */\n    Geometry.prototype.getSimplifiedGeometry = function (squaredTolerance) {\n        return abstract();\n    };\n    /**\n     * Get the type of this geometry.\n     * @abstract\n     * @return {import(\"./GeometryType.js\").default} Geometry type.\n     */\n    Geometry.prototype.getType = function () {\n        return abstract();\n    };\n    /**\n     * Apply a transform function to each coordinate of the geometry.\n     * The geometry is modified in place.\n     * If you do not want the geometry modified in place, first `clone()` it and\n     * then use this function on the clone.\n     * @abstract\n     * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n     */\n    Geometry.prototype.applyTransform = function (transformFn) {\n        abstract();\n    };\n    /**\n     * Test if the geometry and the passed extent intersect.\n     * @abstract\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @return {boolean} `true` if the geometry and the extent intersect.\n     */\n    Geometry.prototype.intersectsExtent = function (extent) {\n        return abstract();\n    };\n    /**\n     * Translate the geometry.  This modifies the geometry coordinates in place.  If\n     * instead you want a new geometry, first `clone()` this geometry.\n     * @abstract\n     * @param {number} deltaX Delta X.\n     * @param {number} deltaY Delta Y.\n     * @api\n     */\n    Geometry.prototype.translate = function (deltaX, deltaY) {\n        abstract();\n    };\n    /**\n     * Transform each coordinate of the geometry from one coordinate reference\n     * system to another. The geometry is modified in place.\n     * For example, a line will be transformed to a line and a circle to a circle.\n     * If you do not want the geometry modified in place, first `clone()` it and\n     * then use this function on the clone.\n     *\n     * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n     *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n     * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n     *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n     * @return {Geometry} This geometry.  Note that original geometry is\n     *     modified in place.\n     * @api\n     */\n    Geometry.prototype.transform = function (source, destination) {\n        /** @type {import(\"../proj/Projection.js\").default} */\n        var sourceProj = getProjection(source);\n        var transformFn = sourceProj.getUnits() == Units.TILE_PIXELS ?\n            function (inCoordinates, outCoordinates, stride) {\n                var pixelExtent = sourceProj.getExtent();\n                var projectedExtent = sourceProj.getWorldExtent();\n                var scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n                composeTransform(tmpTransform, projectedExtent[0], projectedExtent[3], scale, -scale, 0, 0, 0);\n                transform2D(inCoordinates, 0, inCoordinates.length, stride, tmpTransform, outCoordinates);\n                return getTransform(sourceProj, destination)(inCoordinates, outCoordinates, stride);\n            } :\n            getTransform(sourceProj, destination);\n        this.applyTransform(transformFn);\n        return this;\n    };\n    return Geometry;\n}(BaseObject));\nexport default Geometry;\n//# sourceMappingURL=Geometry.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/GeometryCollection\n */\nimport { listen, unlisten } from '../events.js';\nimport EventType from '../events/EventType.js';\nimport { createOrUpdateEmpty, closestSquaredDistanceXY, extend, getCenter } from '../extent.js';\nimport Geometry from './Geometry.js';\nimport GeometryType from './GeometryType.js';\nimport { clear } from '../obj.js';\n/**\n * @classdesc\n * An array of {@link module:ol/geom/Geometry} objects.\n *\n * @api\n */\nvar GeometryCollection = /** @class */ (function (_super) {\n    __extends(GeometryCollection, _super);\n    /**\n     * @param {Array<Geometry>=} opt_geometries Geometries.\n     */\n    function GeometryCollection(opt_geometries) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {Array<Geometry>}\n         */\n        _this.geometries_ = opt_geometries ? opt_geometries : null;\n        _this.listenGeometriesChange_();\n        return _this;\n    }\n    /**\n     * @private\n     */\n    GeometryCollection.prototype.unlistenGeometriesChange_ = function () {\n        if (!this.geometries_) {\n            return;\n        }\n        for (var i = 0, ii = this.geometries_.length; i < ii; ++i) {\n            unlisten(this.geometries_[i], EventType.CHANGE, this.changed, this);\n        }\n    };\n    /**\n     * @private\n     */\n    GeometryCollection.prototype.listenGeometriesChange_ = function () {\n        if (!this.geometries_) {\n            return;\n        }\n        for (var i = 0, ii = this.geometries_.length; i < ii; ++i) {\n            listen(this.geometries_[i], EventType.CHANGE, this.changed, this);\n        }\n    };\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!GeometryCollection} Clone.\n     * @override\n     * @api\n     */\n    GeometryCollection.prototype.clone = function () {\n        var geometryCollection = new GeometryCollection(null);\n        geometryCollection.setGeometries(this.geometries_);\n        return geometryCollection;\n    };\n    /**\n     * @inheritDoc\n     */\n    GeometryCollection.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n            return minSquaredDistance;\n        }\n        var geometries = this.geometries_;\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            minSquaredDistance = geometries[i].closestPointXY(x, y, closestPoint, minSquaredDistance);\n        }\n        return minSquaredDistance;\n    };\n    /**\n     * @inheritDoc\n     */\n    GeometryCollection.prototype.containsXY = function (x, y) {\n        var geometries = this.geometries_;\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            if (geometries[i].containsXY(x, y)) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * @inheritDoc\n     */\n    GeometryCollection.prototype.computeExtent = function (extent) {\n        createOrUpdateEmpty(extent);\n        var geometries = this.geometries_;\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            extend(extent, geometries[i].getExtent());\n        }\n        return extent;\n    };\n    /**\n     * Return the geometries that make up this geometry collection.\n     * @return {Array<Geometry>} Geometries.\n     * @api\n     */\n    GeometryCollection.prototype.getGeometries = function () {\n        return cloneGeometries(this.geometries_);\n    };\n    /**\n     * @return {Array<Geometry>} Geometries.\n     */\n    GeometryCollection.prototype.getGeometriesArray = function () {\n        return this.geometries_;\n    };\n    /**\n     * @inheritDoc\n     */\n    GeometryCollection.prototype.getSimplifiedGeometry = function (squaredTolerance) {\n        if (this.simplifiedGeometryRevision != this.getRevision()) {\n            clear(this.simplifiedGeometryCache);\n            this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n            this.simplifiedGeometryRevision = this.getRevision();\n        }\n        if (squaredTolerance < 0 ||\n            (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n                squaredTolerance < this.simplifiedGeometryMaxMinSquaredTolerance)) {\n            return this;\n        }\n        var key = squaredTolerance.toString();\n        if (this.simplifiedGeometryCache.hasOwnProperty(key)) {\n            return this.simplifiedGeometryCache[key];\n        }\n        else {\n            var simplifiedGeometries = [];\n            var geometries = this.geometries_;\n            var simplified = false;\n            for (var i = 0, ii = geometries.length; i < ii; ++i) {\n                var geometry = geometries[i];\n                var simplifiedGeometry = geometry.getSimplifiedGeometry(squaredTolerance);\n                simplifiedGeometries.push(simplifiedGeometry);\n                if (simplifiedGeometry !== geometry) {\n                    simplified = true;\n                }\n            }\n            if (simplified) {\n                var simplifiedGeometryCollection = new GeometryCollection(null);\n                simplifiedGeometryCollection.setGeometriesArray(simplifiedGeometries);\n                this.simplifiedGeometryCache[key] = simplifiedGeometryCollection;\n                return simplifiedGeometryCollection;\n            }\n            else {\n                this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n                return this;\n            }\n        }\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    GeometryCollection.prototype.getType = function () {\n        return GeometryType.GEOMETRY_COLLECTION;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    GeometryCollection.prototype.intersectsExtent = function (extent) {\n        var geometries = this.geometries_;\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            if (geometries[i].intersectsExtent(extent)) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * @return {boolean} Is empty.\n     */\n    GeometryCollection.prototype.isEmpty = function () {\n        return this.geometries_.length === 0;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    GeometryCollection.prototype.rotate = function (angle, anchor) {\n        var geometries = this.geometries_;\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            geometries[i].rotate(angle, anchor);\n        }\n        this.changed();\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    GeometryCollection.prototype.scale = function (sx, opt_sy, opt_anchor) {\n        var anchor = opt_anchor;\n        if (!anchor) {\n            anchor = getCenter(this.getExtent());\n        }\n        var geometries = this.geometries_;\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            geometries[i].scale(sx, opt_sy, anchor);\n        }\n        this.changed();\n    };\n    /**\n     * Set the geometries that make up this geometry collection.\n     * @param {Array<Geometry>} geometries Geometries.\n     * @api\n     */\n    GeometryCollection.prototype.setGeometries = function (geometries) {\n        this.setGeometriesArray(cloneGeometries(geometries));\n    };\n    /**\n     * @param {Array<Geometry>} geometries Geometries.\n     */\n    GeometryCollection.prototype.setGeometriesArray = function (geometries) {\n        this.unlistenGeometriesChange_();\n        this.geometries_ = geometries;\n        this.listenGeometriesChange_();\n        this.changed();\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    GeometryCollection.prototype.applyTransform = function (transformFn) {\n        var geometries = this.geometries_;\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            geometries[i].applyTransform(transformFn);\n        }\n        this.changed();\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    GeometryCollection.prototype.translate = function (deltaX, deltaY) {\n        var geometries = this.geometries_;\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            geometries[i].translate(deltaX, deltaY);\n        }\n        this.changed();\n    };\n    /**\n     * @inheritDoc\n     */\n    GeometryCollection.prototype.disposeInternal = function () {\n        this.unlistenGeometriesChange_();\n        _super.prototype.disposeInternal.call(this);\n    };\n    return GeometryCollection;\n}(Geometry));\n/**\n * @param {Array<Geometry>} geometries Geometries.\n * @return {Array<Geometry>} Cloned geometries.\n */\nfunction cloneGeometries(geometries) {\n    var clonedGeometries = [];\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\n        clonedGeometries.push(geometries[i].clone());\n    }\n    return clonedGeometries;\n}\nexport default GeometryCollection;\n//# sourceMappingURL=GeometryCollection.js.map","/**\n * @module ol/array\n */\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function=} opt_comparator Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, opt_comparator) {\n    var mid, cmp;\n    var comparator = opt_comparator || numberSafeCompareFunction;\n    var low = 0;\n    var high = haystack.length;\n    var found = false;\n    while (low < high) {\n        /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n         * to double (which gives the wrong results). */\n        mid = low + (high - low >> 1);\n        cmp = +comparator(haystack[mid], needle);\n        if (cmp < 0.0) { /* Too low. */\n            low = mid + 1;\n        }\n        else { /* Key found or too high */\n            high = mid;\n            found = !cmp;\n        }\n    }\n    /* Key not found. */\n    return found ? low : ~low;\n}\n/**\n * Compare function for array sort that is safe for numbers.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function numberSafeCompareFunction(a, b) {\n    return a > b ? 1 : a < b ? -1 : 0;\n}\n/**\n * Whether the array contains the given object.\n * @param {Array<*>} arr The array to test for the presence of the element.\n * @param {*} obj The object for which to test.\n * @return {boolean} The object is in the array.\n */\nexport function includes(arr, obj) {\n    return arr.indexOf(obj) >= 0;\n}\n/**\n * @param {Array<number>} arr Array.\n * @param {number} target Target.\n * @param {number} direction 0 means return the nearest, > 0\n *    means return the largest nearest, < 0 means return the\n *    smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n    var n = arr.length;\n    if (arr[0] <= target) {\n        return 0;\n    }\n    else if (target <= arr[n - 1]) {\n        return n - 1;\n    }\n    else {\n        var i = void 0;\n        if (direction > 0) {\n            for (i = 1; i < n; ++i) {\n                if (arr[i] < target) {\n                    return i - 1;\n                }\n            }\n        }\n        else if (direction < 0) {\n            for (i = 1; i < n; ++i) {\n                if (arr[i] <= target) {\n                    return i;\n                }\n            }\n        }\n        else {\n            for (i = 1; i < n; ++i) {\n                if (arr[i] == target) {\n                    return i;\n                }\n                else if (arr[i] < target) {\n                    if (arr[i - 1] - target < target - arr[i]) {\n                        return i - 1;\n                    }\n                    else {\n                        return i;\n                    }\n                }\n            }\n        }\n        return n - 1;\n    }\n}\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n    while (begin < end) {\n        var tmp = arr[begin];\n        arr[begin] = arr[end];\n        arr[end] = tmp;\n        ++begin;\n        --end;\n    }\n}\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n    var extension = Array.isArray(data) ? data : [data];\n    var length = extension.length;\n    for (var i = 0; i < length; i++) {\n        arr[arr.length] = extension[i];\n    }\n}\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n    var i = arr.indexOf(obj);\n    var found = i > -1;\n    if (found) {\n        arr.splice(i, 1);\n    }\n    return found;\n}\n/**\n * @param {Array<VALUE>} arr The array to search in.\n * @param {function(VALUE, number, ?) : boolean} func The function to compare.\n * @template VALUE\n * @return {VALUE|null} The element found or null.\n */\nexport function find(arr, func) {\n    var length = arr.length >>> 0;\n    var value;\n    for (var i = 0; i < length; i++) {\n        value = arr[i];\n        if (func(value, i, arr)) {\n            return value;\n        }\n    }\n    return null;\n}\n/**\n * @param {Array|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n    var len1 = arr1.length;\n    if (len1 !== arr2.length) {\n        return false;\n    }\n    for (var i = 0; i < len1; i++) {\n        if (arr1[i] !== arr2[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Sort the passed array such that the relative order of equal elements is preverved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n    var length = arr.length;\n    var tmp = Array(arr.length);\n    var i;\n    for (i = 0; i < length; i++) {\n        tmp[i] = { index: i, value: arr[i] };\n    }\n    tmp.sort(function (a, b) {\n        return compareFnc(a.value, b.value) || a.index - b.index;\n    });\n    for (i = 0; i < arr.length; i++) {\n        arr[i] = tmp[i].value;\n    }\n}\n/**\n * @param {Array<*>} arr The array to search in.\n * @param {Function} func Comparison function.\n * @return {number} Return index.\n */\nexport function findIndex(arr, func) {\n    var index;\n    var found = !arr.every(function (el, idx) {\n        index = idx;\n        return !func(el, idx, arr);\n    });\n    return found ? index : -1;\n}\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function=} opt_func Comparison function.\n * @param {boolean=} opt_strict Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, opt_func, opt_strict) {\n    var compare = opt_func || numberSafeCompareFunction;\n    return arr.every(function (currentVal, index) {\n        if (index === 0) {\n            return true;\n        }\n        var res = compare(arr[index - 1], currentVal);\n        return !(res > 0 || opt_strict && res === 0);\n    });\n}\n//# sourceMappingURL=array.js.map","/**\n * @module ol/geom/GeometryLayout\n */\n/**\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available. Supported values are `'XY'`,\n * `'XYZ'`, `'XYM'`, `'XYZM'`.\n * @enum {string}\n */\nexport default {\n    XY: 'XY',\n    XYZ: 'XYZ',\n    XYM: 'XYM',\n    XYZM: 'XYZM'\n};\n//# sourceMappingURL=GeometryLayout.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/SimpleGeometry\n */\nimport { abstract } from '../util.js';\nimport { createOrUpdateFromFlatCoordinates, getCenter } from '../extent.js';\nimport Geometry from './Geometry.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport { rotate, scale, translate, transform2D } from './flat/transform.js';\nimport { clear } from '../obj.js';\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\nvar SimpleGeometry = /** @class */ (function (_super) {\n    __extends(SimpleGeometry, _super);\n    function SimpleGeometry() {\n        var _this = _super.call(this) || this;\n        /**\n         * @protected\n         * @type {GeometryLayout}\n         */\n        _this.layout = GeometryLayout.XY;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.stride = 2;\n        /**\n         * @protected\n         * @type {Array<number>}\n         */\n        _this.flatCoordinates = null;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    SimpleGeometry.prototype.computeExtent = function (extent) {\n        return createOrUpdateFromFlatCoordinates(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, extent);\n    };\n    /**\n     * @abstract\n     * @return {Array<*>} Coordinates.\n     */\n    SimpleGeometry.prototype.getCoordinates = function () {\n        return abstract();\n    };\n    /**\n     * Return the first coordinate of the geometry.\n     * @return {import(\"../coordinate.js\").Coordinate} First coordinate.\n     * @api\n     */\n    SimpleGeometry.prototype.getFirstCoordinate = function () {\n        return this.flatCoordinates.slice(0, this.stride);\n    };\n    /**\n     * @return {Array<number>} Flat coordinates.\n     */\n    SimpleGeometry.prototype.getFlatCoordinates = function () {\n        return this.flatCoordinates;\n    };\n    /**\n     * Return the last coordinate of the geometry.\n     * @return {import(\"../coordinate.js\").Coordinate} Last point.\n     * @api\n     */\n    SimpleGeometry.prototype.getLastCoordinate = function () {\n        return this.flatCoordinates.slice(this.flatCoordinates.length - this.stride);\n    };\n    /**\n     * Return the {@link module:ol/geom/GeometryLayout layout} of the geometry.\n     * @return {GeometryLayout} Layout.\n     * @api\n     */\n    SimpleGeometry.prototype.getLayout = function () {\n        return this.layout;\n    };\n    /**\n     * @inheritDoc\n     */\n    SimpleGeometry.prototype.getSimplifiedGeometry = function (squaredTolerance) {\n        if (this.simplifiedGeometryRevision != this.getRevision()) {\n            clear(this.simplifiedGeometryCache);\n            this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n            this.simplifiedGeometryRevision = this.getRevision();\n        }\n        // If squaredTolerance is negative or if we know that simplification will not\n        // have any effect then just return this.\n        if (squaredTolerance < 0 ||\n            (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n                squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)) {\n            return this;\n        }\n        var key = squaredTolerance.toString();\n        if (this.simplifiedGeometryCache.hasOwnProperty(key)) {\n            return this.simplifiedGeometryCache[key];\n        }\n        else {\n            var simplifiedGeometry = this.getSimplifiedGeometryInternal(squaredTolerance);\n            var simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n            if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n                this.simplifiedGeometryCache[key] = simplifiedGeometry;\n                return simplifiedGeometry;\n            }\n            else {\n                // Simplification did not actually remove any coordinates.  We now know\n                // that any calls to getSimplifiedGeometry with a squaredTolerance less\n                // than or equal to the current squaredTolerance will also not have any\n                // effect.  This allows us to short circuit simplification (saving CPU\n                // cycles) and prevents the cache of simplified geometries from filling\n                // up with useless identical copies of this geometry (saving memory).\n                this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n                return this;\n            }\n        }\n    };\n    /**\n     * @param {number} squaredTolerance Squared tolerance.\n     * @return {SimpleGeometry} Simplified geometry.\n     * @protected\n     */\n    SimpleGeometry.prototype.getSimplifiedGeometryInternal = function (squaredTolerance) {\n        return this;\n    };\n    /**\n     * @return {number} Stride.\n     */\n    SimpleGeometry.prototype.getStride = function () {\n        return this.stride;\n    };\n    /**\n     * @param {GeometryLayout} layout Layout.\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     */\n    SimpleGeometry.prototype.setFlatCoordinates = function (layout, flatCoordinates) {\n        this.stride = getStrideForLayout(layout);\n        this.layout = layout;\n        this.flatCoordinates = flatCoordinates;\n    };\n    /**\n     * @abstract\n     * @param {!Array<*>} coordinates Coordinates.\n     * @param {GeometryLayout=} opt_layout Layout.\n     */\n    SimpleGeometry.prototype.setCoordinates = function (coordinates, opt_layout) {\n        abstract();\n    };\n    /**\n     * @param {GeometryLayout|undefined} layout Layout.\n     * @param {Array<*>} coordinates Coordinates.\n     * @param {number} nesting Nesting.\n     * @protected\n     */\n    SimpleGeometry.prototype.setLayout = function (layout, coordinates, nesting) {\n        /** @type {number} */\n        var stride;\n        if (layout) {\n            stride = getStrideForLayout(layout);\n        }\n        else {\n            for (var i = 0; i < nesting; ++i) {\n                if (coordinates.length === 0) {\n                    this.layout = GeometryLayout.XY;\n                    this.stride = 2;\n                    return;\n                }\n                else {\n                    coordinates = /** @type {Array} */ (coordinates[0]);\n                }\n            }\n            stride = coordinates.length;\n            layout = getLayoutForStride(stride);\n        }\n        this.layout = layout;\n        this.stride = stride;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    SimpleGeometry.prototype.applyTransform = function (transformFn) {\n        if (this.flatCoordinates) {\n            transformFn(this.flatCoordinates, this.flatCoordinates, this.stride);\n            this.changed();\n        }\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    SimpleGeometry.prototype.rotate = function (angle, anchor) {\n        var flatCoordinates = this.getFlatCoordinates();\n        if (flatCoordinates) {\n            var stride = this.getStride();\n            rotate(flatCoordinates, 0, flatCoordinates.length, stride, angle, anchor, flatCoordinates);\n            this.changed();\n        }\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    SimpleGeometry.prototype.scale = function (sx, opt_sy, opt_anchor) {\n        var sy = opt_sy;\n        if (sy === undefined) {\n            sy = sx;\n        }\n        var anchor = opt_anchor;\n        if (!anchor) {\n            anchor = getCenter(this.getExtent());\n        }\n        var flatCoordinates = this.getFlatCoordinates();\n        if (flatCoordinates) {\n            var stride = this.getStride();\n            scale(flatCoordinates, 0, flatCoordinates.length, stride, sx, sy, anchor, flatCoordinates);\n            this.changed();\n        }\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    SimpleGeometry.prototype.translate = function (deltaX, deltaY) {\n        var flatCoordinates = this.getFlatCoordinates();\n        if (flatCoordinates) {\n            var stride = this.getStride();\n            translate(flatCoordinates, 0, flatCoordinates.length, stride, deltaX, deltaY, flatCoordinates);\n            this.changed();\n        }\n    };\n    return SimpleGeometry;\n}(Geometry));\n/**\n * @param {number} stride Stride.\n * @return {GeometryLayout} layout Layout.\n */\nfunction getLayoutForStride(stride) {\n    var layout;\n    if (stride == 2) {\n        layout = GeometryLayout.XY;\n    }\n    else if (stride == 3) {\n        layout = GeometryLayout.XYZ;\n    }\n    else if (stride == 4) {\n        layout = GeometryLayout.XYZM;\n    }\n    return (\n    /** @type {GeometryLayout} */ (layout));\n}\n/**\n * @param {GeometryLayout} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n    var stride;\n    if (layout == GeometryLayout.XY) {\n        stride = 2;\n    }\n    else if (layout == GeometryLayout.XYZ || layout == GeometryLayout.XYM) {\n        stride = 3;\n    }\n    else if (layout == GeometryLayout.XYZM) {\n        stride = 4;\n    }\n    return /** @type {number} */ (stride);\n}\n/**\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, opt_dest) {\n    var flatCoordinates = simpleGeometry.getFlatCoordinates();\n    if (!flatCoordinates) {\n        return null;\n    }\n    else {\n        var stride = simpleGeometry.getStride();\n        return transform2D(flatCoordinates, 0, flatCoordinates.length, stride, transform, opt_dest);\n    }\n}\nexport default SimpleGeometry;\n//# sourceMappingURL=SimpleGeometry.js.map","/**\n * @module ol/geom/flat/closest\n */\nimport { lerp, squaredDistance as squaredDx } from '../../math.js';\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n */\nfunction assignClosest(flatCoordinates, offset1, offset2, stride, x, y, closestPoint) {\n    var x1 = flatCoordinates[offset1];\n    var y1 = flatCoordinates[offset1 + 1];\n    var dx = flatCoordinates[offset2] - x1;\n    var dy = flatCoordinates[offset2 + 1] - y1;\n    var offset;\n    if (dx === 0 && dy === 0) {\n        offset = offset1;\n    }\n    else {\n        var t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n        if (t > 1) {\n            offset = offset2;\n        }\n        else if (t > 0) {\n            for (var i = 0; i < stride; ++i) {\n                closestPoint[i] = lerp(flatCoordinates[offset1 + i], flatCoordinates[offset2 + i], t);\n            }\n            closestPoint.length = stride;\n            return;\n        }\n        else {\n            offset = offset1;\n        }\n    }\n    for (var i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n    }\n    closestPoint.length = stride;\n}\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n    var x1 = flatCoordinates[offset];\n    var y1 = flatCoordinates[offset + 1];\n    for (offset += stride; offset < end; offset += stride) {\n        var x2 = flatCoordinates[offset];\n        var y2 = flatCoordinates[offset + 1];\n        var squaredDelta = squaredDx(x1, y1, x2, y2);\n        if (squaredDelta > max) {\n            max = squaredDelta;\n        }\n        x1 = x2;\n        y1 = y2;\n    }\n    return max;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max) {\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        max = maxSquaredDelta(flatCoordinates, offset, end, stride, max);\n        offset = end;\n    }\n    return max;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(flatCoordinates, offset, endss, stride, max) {\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        max = arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max);\n        offset = ends[ends.length - 1];\n    }\n    return max;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(flatCoordinates, offset, end, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance, opt_tmpPoint) {\n    if (offset == end) {\n        return minSquaredDistance;\n    }\n    var i, squaredDistance;\n    if (maxDelta === 0) {\n        // All points are identical, so just test the first point.\n        squaredDistance = squaredDx(x, y, flatCoordinates[offset], flatCoordinates[offset + 1]);\n        if (squaredDistance < minSquaredDistance) {\n            for (i = 0; i < stride; ++i) {\n                closestPoint[i] = flatCoordinates[offset + i];\n            }\n            closestPoint.length = stride;\n            return squaredDistance;\n        }\n        else {\n            return minSquaredDistance;\n        }\n    }\n    var tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n    var index = offset + stride;\n    while (index < end) {\n        assignClosest(flatCoordinates, index - stride, index, stride, x, y, tmpPoint);\n        squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n        if (squaredDistance < minSquaredDistance) {\n            minSquaredDistance = squaredDistance;\n            for (i = 0; i < stride; ++i) {\n                closestPoint[i] = tmpPoint[i];\n            }\n            closestPoint.length = stride;\n            index += stride;\n        }\n        else {\n            // Skip ahead multiple points, because we know that all the skipped\n            // points cannot be any closer than the closest point we have found so\n            // far.  We know this because we know how close the current point is, how\n            // close the closest point we have found so far is, and the maximum\n            // distance between consecutive points.  For example, if we're currently\n            // at distance 10, the best we've found so far is 3, and that the maximum\n            // distance between consecutive points is 2, then we'll need to skip at\n            // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n            // finding a closer point.  We use Math.max(..., 1) to ensure that we\n            // always advance at least one point, to avoid an infinite loop.\n            index += stride * Math.max(((Math.sqrt(squaredDistance) -\n                Math.sqrt(minSquaredDistance)) / maxDelta) | 0, 1);\n        }\n    }\n    if (isRing) {\n        // Check the closing segment.\n        assignClosest(flatCoordinates, end - stride, offset, stride, x, y, tmpPoint);\n        squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n        if (squaredDistance < minSquaredDistance) {\n            minSquaredDistance = squaredDistance;\n            for (i = 0; i < stride; ++i) {\n                closestPoint[i] = tmpPoint[i];\n            }\n            closestPoint.length = stride;\n        }\n    }\n    return minSquaredDistance;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(flatCoordinates, offset, ends, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance, opt_tmpPoint) {\n    var tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        minSquaredDistance = assignClosestPoint(flatCoordinates, offset, end, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance, tmpPoint);\n        offset = end;\n    }\n    return minSquaredDistance;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(flatCoordinates, offset, endss, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance, opt_tmpPoint) {\n    var tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        minSquaredDistance = assignClosestArrayPoint(flatCoordinates, offset, ends, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance, tmpPoint);\n        offset = ends[ends.length - 1];\n    }\n    return minSquaredDistance;\n}\n//# sourceMappingURL=closest.js.map","/**\n * @module ol/geom/flat/deflate\n */\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n    for (var i = 0, ii = coordinate.length; i < ii; ++i) {\n        flatCoordinates[offset++] = coordinate[i];\n    }\n    return offset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(flatCoordinates, offset, coordinates, stride) {\n    for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n        var coordinate = coordinates[i];\n        for (var j = 0; j < stride; ++j) {\n            flatCoordinates[offset++] = coordinate[j];\n        }\n    }\n    return offset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array<number>=} opt_ends Ends.\n * @return {Array<number>} Ends.\n */\nexport function deflateCoordinatesArray(flatCoordinates, offset, coordinatess, stride, opt_ends) {\n    var ends = opt_ends ? opt_ends : [];\n    var i = 0;\n    for (var j = 0, jj = coordinatess.length; j < jj; ++j) {\n        var end = deflateCoordinates(flatCoordinates, offset, coordinatess[j], stride);\n        ends[i++] = end;\n        offset = end;\n    }\n    ends.length = i;\n    return ends;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array<Array<number>>=} opt_endss Endss.\n * @return {Array<Array<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(flatCoordinates, offset, coordinatesss, stride, opt_endss) {\n    var endss = opt_endss ? opt_endss : [];\n    var i = 0;\n    for (var j = 0, jj = coordinatesss.length; j < jj; ++j) {\n        var ends = deflateCoordinatesArray(flatCoordinates, offset, coordinatesss[j], stride, endss[i]);\n        endss[i++] = ends;\n        offset = ends[ends.length - 1];\n    }\n    endss.length = i;\n    return endss;\n}\n//# sourceMappingURL=deflate.js.map","/**\n * @module ol/geom/flat/inflate\n */\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>=} opt_coordinates Coordinates.\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(flatCoordinates, offset, end, stride, opt_coordinates) {\n    var coordinates = opt_coordinates !== undefined ? opt_coordinates : [];\n    var i = 0;\n    for (var j = offset; j < end; j += stride) {\n        coordinates[i++] = flatCoordinates.slice(j, j + stride);\n    }\n    coordinates.length = i;\n    return coordinates;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>=} opt_coordinatess Coordinatess.\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(flatCoordinates, offset, ends, stride, opt_coordinatess) {\n    var coordinatess = opt_coordinatess !== undefined ? opt_coordinatess : [];\n    var i = 0;\n    for (var j = 0, jj = ends.length; j < jj; ++j) {\n        var end = ends[j];\n        coordinatess[i++] = inflateCoordinates(flatCoordinates, offset, end, stride, coordinatess[i]);\n        offset = end;\n    }\n    coordinatess.length = i;\n    return coordinatess;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>=} opt_coordinatesss\n *     Coordinatesss.\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(flatCoordinates, offset, endss, stride, opt_coordinatesss) {\n    var coordinatesss = opt_coordinatesss !== undefined ? opt_coordinatesss : [];\n    var i = 0;\n    for (var j = 0, jj = endss.length; j < jj; ++j) {\n        var ends = endss[j];\n        coordinatesss[i++] = inflateCoordinatesArray(flatCoordinates, offset, ends, stride, coordinatesss[i]);\n        offset = ends[ends.length - 1];\n    }\n    coordinatesss.length = i;\n    return coordinatesss;\n}\n//# sourceMappingURL=inflate.js.map","/**\n * @module ol/geom/flat/interpolate\n */\nimport { binarySearch } from '../../array.js';\nimport { lerp } from '../../math.js';\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} fraction Fraction.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Destination.\n */\nexport function interpolatePoint(flatCoordinates, offset, end, stride, fraction, opt_dest) {\n    var pointX = NaN;\n    var pointY = NaN;\n    var n = (end - offset) / stride;\n    if (n === 1) {\n        pointX = flatCoordinates[offset];\n        pointY = flatCoordinates[offset + 1];\n    }\n    else if (n == 2) {\n        pointX = (1 - fraction) * flatCoordinates[offset] +\n            fraction * flatCoordinates[offset + stride];\n        pointY = (1 - fraction) * flatCoordinates[offset + 1] +\n            fraction * flatCoordinates[offset + stride + 1];\n    }\n    else if (n !== 0) {\n        var x1 = flatCoordinates[offset];\n        var y1 = flatCoordinates[offset + 1];\n        var length_1 = 0;\n        var cumulativeLengths = [0];\n        for (var i = offset + stride; i < end; i += stride) {\n            var x2 = flatCoordinates[i];\n            var y2 = flatCoordinates[i + 1];\n            length_1 += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n            cumulativeLengths.push(length_1);\n            x1 = x2;\n            y1 = y2;\n        }\n        var target = fraction * length_1;\n        var index = binarySearch(cumulativeLengths, target);\n        if (index < 0) {\n            var t = (target - cumulativeLengths[-index - 2]) /\n                (cumulativeLengths[-index - 1] - cumulativeLengths[-index - 2]);\n            var o = offset + (-index - 2) * stride;\n            pointX = lerp(flatCoordinates[o], flatCoordinates[o + stride], t);\n            pointY = lerp(flatCoordinates[o + 1], flatCoordinates[o + stride + 1], t);\n        }\n        else {\n            pointX = flatCoordinates[offset + index * stride];\n            pointY = flatCoordinates[offset + index * stride + 1];\n        }\n    }\n    if (opt_dest) {\n        opt_dest[0] = pointX;\n        opt_dest[1] = pointY;\n        return opt_dest;\n    }\n    else {\n        return [pointX, pointY];\n    }\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n */\nexport function lineStringCoordinateAtM(flatCoordinates, offset, end, stride, m, extrapolate) {\n    if (end == offset) {\n        return null;\n    }\n    var coordinate;\n    if (m < flatCoordinates[offset + stride - 1]) {\n        if (extrapolate) {\n            coordinate = flatCoordinates.slice(offset, offset + stride);\n            coordinate[stride - 1] = m;\n            return coordinate;\n        }\n        else {\n            return null;\n        }\n    }\n    else if (flatCoordinates[end - 1] < m) {\n        if (extrapolate) {\n            coordinate = flatCoordinates.slice(end - stride, end);\n            coordinate[stride - 1] = m;\n            return coordinate;\n        }\n        else {\n            return null;\n        }\n    }\n    // FIXME use O(1) search\n    if (m == flatCoordinates[offset + stride - 1]) {\n        return flatCoordinates.slice(offset, offset + stride);\n    }\n    var lo = offset / stride;\n    var hi = end / stride;\n    while (lo < hi) {\n        var mid = (lo + hi) >> 1;\n        if (m < flatCoordinates[(mid + 1) * stride - 1]) {\n            hi = mid;\n        }\n        else {\n            lo = mid + 1;\n        }\n    }\n    var m0 = flatCoordinates[lo * stride - 1];\n    if (m == m0) {\n        return flatCoordinates.slice((lo - 1) * stride, (lo - 1) * stride + stride);\n    }\n    var m1 = flatCoordinates[(lo + 1) * stride - 1];\n    var t = (m - m0) / (m1 - m0);\n    coordinate = [];\n    for (var i = 0; i < stride - 1; ++i) {\n        coordinate.push(lerp(flatCoordinates[(lo - 1) * stride + i], flatCoordinates[lo * stride + i], t));\n    }\n    coordinate.push(m);\n    return coordinate;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @param {boolean} interpolate Interpolate.\n * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n */\nexport function lineStringsCoordinateAtM(flatCoordinates, offset, ends, stride, m, extrapolate, interpolate) {\n    if (interpolate) {\n        return lineStringCoordinateAtM(flatCoordinates, offset, ends[ends.length - 1], stride, m, extrapolate);\n    }\n    var coordinate;\n    if (m < flatCoordinates[stride - 1]) {\n        if (extrapolate) {\n            coordinate = flatCoordinates.slice(0, stride);\n            coordinate[stride - 1] = m;\n            return coordinate;\n        }\n        else {\n            return null;\n        }\n    }\n    if (flatCoordinates[flatCoordinates.length - 1] < m) {\n        if (extrapolate) {\n            coordinate = flatCoordinates.slice(flatCoordinates.length - stride);\n            coordinate[stride - 1] = m;\n            return coordinate;\n        }\n        else {\n            return null;\n        }\n    }\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        if (offset == end) {\n            continue;\n        }\n        if (m < flatCoordinates[offset + stride - 1]) {\n            return null;\n        }\n        else if (m <= flatCoordinates[end - 1]) {\n            return lineStringCoordinateAtM(flatCoordinates, offset, end, stride, m, false);\n        }\n        offset = end;\n    }\n    return null;\n}\n//# sourceMappingURL=interpolate.js.map","/**\n * @module ol/geom/flat/contains\n */\nimport { forEachCorner } from '../../extent.js';\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(flatCoordinates, offset, end, stride, extent) {\n    var outside = forEachCorner(extent, \n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function (coordinate) {\n        return !linearRingContainsXY(flatCoordinates, offset, end, stride, coordinate[0], coordinate[1]);\n    });\n    return !outside;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(flatCoordinates, offset, end, stride, x, y) {\n    // http://geomalgorithms.com/a03-_inclusion.html\n    // Copyright 2000 softSurfer, 2012 Dan Sunday\n    // This code may be freely used and modified for any purpose\n    // providing that this copyright notice is included with it.\n    // SoftSurfer makes no warranty for this code, and cannot be held\n    // liable for any real or imagined damage resulting from its use.\n    // Users of this code must verify correctness for their application.\n    var wn = 0;\n    var x1 = flatCoordinates[end - stride];\n    var y1 = flatCoordinates[end - stride + 1];\n    for (; offset < end; offset += stride) {\n        var x2 = flatCoordinates[offset];\n        var y2 = flatCoordinates[offset + 1];\n        if (y1 <= y) {\n            if (y2 > y && ((x2 - x1) * (y - y1)) - ((x - x1) * (y2 - y1)) > 0) {\n                wn++;\n            }\n        }\n        else if (y2 <= y && ((x2 - x1) * (y - y1)) - ((x - x1) * (y2 - y1)) < 0) {\n            wn--;\n        }\n        x1 = x2;\n        y1 = y2;\n    }\n    return wn !== 0;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y) {\n    if (ends.length === 0) {\n        return false;\n    }\n    if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n        return false;\n    }\n    for (var i = 1, ii = ends.length; i < ii; ++i) {\n        if (linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(flatCoordinates, offset, endss, stride, x, y) {\n    if (endss.length === 0) {\n        return false;\n    }\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n            return true;\n        }\n        offset = ends[ends.length - 1];\n    }\n    return false;\n}\n//# sourceMappingURL=contains.js.map","/**\n * @module ol/geom/flat/segments\n */\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(import(\"../../coordinate.js\").Coordinate, import(\"../../coordinate.js\").Coordinate): T} callback Function\n *     called for each segment.\n * @return {T|boolean} Value.\n * @template T\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback) {\n    var point1 = [flatCoordinates[offset], flatCoordinates[offset + 1]];\n    var point2 = [];\n    var ret;\n    for (; (offset + stride) < end; offset += stride) {\n        point2[0] = flatCoordinates[offset + stride];\n        point2[1] = flatCoordinates[offset + stride + 1];\n        ret = callback(point1, point2);\n        if (ret) {\n            return ret;\n        }\n        point1[0] = point2[0];\n        point1[1] = point2[1];\n    }\n    return false;\n}\n//# sourceMappingURL=segments.js.map","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport { containsExtent, createEmpty, extendFlatCoordinates, intersects, intersectsSegment } from '../../extent.js';\nimport { linearRingContainsXY, linearRingContainsExtent } from './contains.js';\nimport { forEach as forEachSegment } from './segments.js';\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(flatCoordinates, offset, end, stride, extent) {\n    var coordinatesExtent = extendFlatCoordinates(createEmpty(), flatCoordinates, offset, end, stride);\n    if (!intersects(extent, coordinatesExtent)) {\n        return false;\n    }\n    if (containsExtent(extent, coordinatesExtent)) {\n        return true;\n    }\n    if (coordinatesExtent[0] >= extent[0] &&\n        coordinatesExtent[2] <= extent[2]) {\n        return true;\n    }\n    if (coordinatesExtent[1] >= extent[1] &&\n        coordinatesExtent[3] <= extent[3]) {\n        return true;\n    }\n    return forEachSegment(flatCoordinates, offset, end, stride, \n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} point1 Start point.\n     * @param {import(\"../../coordinate.js\").Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function (point1, point2) {\n        return intersectsSegment(extent, point1, point2);\n    });\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(flatCoordinates, offset, ends, stride, extent) {\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        if (intersectsLineString(flatCoordinates, offset, ends[i], stride, extent)) {\n            return true;\n        }\n        offset = ends[i];\n    }\n    return false;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(flatCoordinates, offset, end, stride, extent) {\n    if (intersectsLineString(flatCoordinates, offset, end, stride, extent)) {\n        return true;\n    }\n    if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[0], extent[1])) {\n        return true;\n    }\n    if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[0], extent[3])) {\n        return true;\n    }\n    if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[2], extent[1])) {\n        return true;\n    }\n    if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[2], extent[3])) {\n        return true;\n    }\n    return false;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent) {\n    if (!intersectsLinearRing(flatCoordinates, offset, ends[0], stride, extent)) {\n        return false;\n    }\n    if (ends.length === 1) {\n        return true;\n    }\n    for (var i = 1, ii = ends.length; i < ii; ++i) {\n        if (linearRingContainsExtent(flatCoordinates, ends[i - 1], ends[i], stride, extent)) {\n            if (!intersectsLineString(flatCoordinates, ends[i - 1], ends[i], stride, extent)) {\n                return false;\n            }\n        }\n    }\n    return true;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(flatCoordinates, offset, endss, stride, extent) {\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        if (intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent)) {\n            return true;\n        }\n        offset = ends[ends.length - 1];\n    }\n    return false;\n}\n//# sourceMappingURL=intersectsextent.js.map","/**\n * @module ol/geom/flat/length\n */\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Length.\n */\nexport function lineStringLength(flatCoordinates, offset, end, stride) {\n    var x1 = flatCoordinates[offset];\n    var y1 = flatCoordinates[offset + 1];\n    var length = 0;\n    for (var i = offset + stride; i < end; i += stride) {\n        var x2 = flatCoordinates[i];\n        var y2 = flatCoordinates[i + 1];\n        length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n        x1 = x2;\n        y1 = y2;\n    }\n    return length;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Perimeter.\n */\nexport function linearRingLength(flatCoordinates, offset, end, stride) {\n    var perimeter = lineStringLength(flatCoordinates, offset, end, stride);\n    var dx = flatCoordinates[end - stride] - flatCoordinates[offset];\n    var dy = flatCoordinates[end - stride + 1] - flatCoordinates[offset + 1];\n    perimeter += Math.sqrt(dx * dx + dy * dy);\n    return perimeter;\n}\n//# sourceMappingURL=length.js.map","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\nimport { squaredSegmentDistance, squaredDistance } from '../../math.js';\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array<number>=} opt_simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @return {Array<number>} Simplified line string.\n */\nexport function simplifyLineString(flatCoordinates, offset, end, stride, squaredTolerance, highQuality, opt_simplifiedFlatCoordinates) {\n    var simplifiedFlatCoordinates = opt_simplifiedFlatCoordinates !== undefined ?\n        opt_simplifiedFlatCoordinates : [];\n    if (!highQuality) {\n        end = radialDistance(flatCoordinates, offset, end, stride, squaredTolerance, simplifiedFlatCoordinates, 0);\n        flatCoordinates = simplifiedFlatCoordinates;\n        offset = 0;\n        stride = 2;\n    }\n    simplifiedFlatCoordinates.length = douglasPeucker(flatCoordinates, offset, end, stride, squaredTolerance, simplifiedFlatCoordinates, 0);\n    return simplifiedFlatCoordinates;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(flatCoordinates, offset, end, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n    var n = (end - offset) / stride;\n    if (n < 3) {\n        for (; offset < end; offset += stride) {\n            simplifiedFlatCoordinates[simplifiedOffset++] =\n                flatCoordinates[offset];\n            simplifiedFlatCoordinates[simplifiedOffset++] =\n                flatCoordinates[offset + 1];\n        }\n        return simplifiedOffset;\n    }\n    /** @type {Array<number>} */\n    var markers = new Array(n);\n    markers[0] = 1;\n    markers[n - 1] = 1;\n    /** @type {Array<number>} */\n    var stack = [offset, end - stride];\n    var index = 0;\n    while (stack.length > 0) {\n        var last = stack.pop();\n        var first = stack.pop();\n        var maxSquaredDistance = 0;\n        var x1 = flatCoordinates[first];\n        var y1 = flatCoordinates[first + 1];\n        var x2 = flatCoordinates[last];\n        var y2 = flatCoordinates[last + 1];\n        for (var i = first + stride; i < last; i += stride) {\n            var x = flatCoordinates[i];\n            var y = flatCoordinates[i + 1];\n            var squaredDistance_1 = squaredSegmentDistance(x, y, x1, y1, x2, y2);\n            if (squaredDistance_1 > maxSquaredDistance) {\n                index = i;\n                maxSquaredDistance = squaredDistance_1;\n            }\n        }\n        if (maxSquaredDistance > squaredTolerance) {\n            markers[(index - offset) / stride] = 1;\n            if (first + stride < index) {\n                stack.push(first, index);\n            }\n            if (index + stride < last) {\n                stack.push(index, last);\n            }\n        }\n    }\n    for (var i = 0; i < n; ++i) {\n        if (markers[i]) {\n            simplifiedFlatCoordinates[simplifiedOffset++] =\n                flatCoordinates[offset + i * stride];\n            simplifiedFlatCoordinates[simplifiedOffset++] =\n                flatCoordinates[offset + i * stride + 1];\n        }\n    }\n    return simplifiedOffset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(flatCoordinates, offset, ends, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds) {\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        simplifiedOffset = douglasPeucker(flatCoordinates, offset, end, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset);\n        simplifiedEnds.push(simplifiedOffset);\n        offset = end;\n    }\n    return simplifiedOffset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(flatCoordinates, offset, endss, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEndss) {\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        var simplifiedEnds = [];\n        simplifiedOffset = douglasPeuckerArray(flatCoordinates, offset, ends, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds);\n        simplifiedEndss.push(simplifiedEnds);\n        offset = ends[ends.length - 1];\n    }\n    return simplifiedOffset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(flatCoordinates, offset, end, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n    if (end <= offset + stride) {\n        // zero or one point, no simplification possible, so copy and return\n        for (; offset < end; offset += stride) {\n            simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n            simplifiedFlatCoordinates[simplifiedOffset++] =\n                flatCoordinates[offset + 1];\n        }\n        return simplifiedOffset;\n    }\n    var x1 = flatCoordinates[offset];\n    var y1 = flatCoordinates[offset + 1];\n    // copy first point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n    var x2 = x1;\n    var y2 = y1;\n    for (offset += stride; offset < end; offset += stride) {\n        x2 = flatCoordinates[offset];\n        y2 = flatCoordinates[offset + 1];\n        if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n            // copy point at offset\n            simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n            simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n            x1 = x2;\n            y1 = y2;\n        }\n    }\n    if (x2 != x1 || y2 != y1) {\n        // copy last point\n        simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n        simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    }\n    return simplifiedOffset;\n}\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n    return tolerance * Math.round(value / tolerance);\n}\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(flatCoordinates, offset, end, stride, tolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n    // do nothing if the line is empty\n    if (offset == end) {\n        return simplifiedOffset;\n    }\n    // snap the first coordinate (P1)\n    var x1 = snap(flatCoordinates[offset], tolerance);\n    var y1 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // add the first coordinate to the output\n    simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n    // find the next coordinate that does not snap to the same value as the first\n    // coordinate (P2)\n    var x2, y2;\n    do {\n        x2 = snap(flatCoordinates[offset], tolerance);\n        y2 = snap(flatCoordinates[offset + 1], tolerance);\n        offset += stride;\n        if (offset == end) {\n            // all coordinates snap to the same value, the line collapses to a point\n            // push the last snapped value anyway to ensure that the output contains\n            // at least two points\n            // FIXME should we really return at least two points anyway?\n            simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n            simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n            return simplifiedOffset;\n        }\n    } while (x2 == x1 && y2 == y1);\n    while (offset < end) {\n        // snap the next coordinate (P3)\n        var x3 = snap(flatCoordinates[offset], tolerance);\n        var y3 = snap(flatCoordinates[offset + 1], tolerance);\n        offset += stride;\n        // skip P3 if it is equal to P2\n        if (x3 == x2 && y3 == y2) {\n            continue;\n        }\n        // calculate the delta between P1 and P2\n        var dx1 = x2 - x1;\n        var dy1 = y2 - y1;\n        // calculate the delta between P3 and P1\n        var dx2 = x3 - x1;\n        var dy2 = y3 - y1;\n        // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n        // P1 in the same direction then P2 is on the straight line between P1 and\n        // P3\n        if ((dx1 * dy2 == dy1 * dx2) &&\n            ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n            ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))) {\n            // discard P2 and set P2 = P3\n            x2 = x3;\n            y2 = y3;\n            continue;\n        }\n        // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n        // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n        // and continue with P1 = P2 and P2 = P3\n        simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n        simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n        x1 = x2;\n        y1 = y2;\n        x2 = x3;\n        y2 = y3;\n    }\n    // add the last point (P2)\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    return simplifiedOffset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(flatCoordinates, offset, ends, stride, tolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds) {\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        simplifiedOffset = quantize(flatCoordinates, offset, end, stride, tolerance, simplifiedFlatCoordinates, simplifiedOffset);\n        simplifiedEnds.push(simplifiedOffset);\n        offset = end;\n    }\n    return simplifiedOffset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(flatCoordinates, offset, endss, stride, tolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEndss) {\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        var simplifiedEnds = [];\n        simplifiedOffset = quantizeArray(flatCoordinates, offset, ends, stride, tolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds);\n        simplifiedEndss.push(simplifiedEnds);\n        offset = ends[ends.length - 1];\n    }\n    return simplifiedOffset;\n}\n//# sourceMappingURL=simplify.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/LineString\n */\nimport { extend } from '../array.js';\nimport { closestSquaredDistanceXY } from '../extent.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { assignClosestPoint, maxSquaredDelta } from './flat/closest.js';\nimport { deflateCoordinates } from './flat/deflate.js';\nimport { inflateCoordinates } from './flat/inflate.js';\nimport { interpolatePoint, lineStringCoordinateAtM } from './flat/interpolate.js';\nimport { intersectsLineString } from './flat/intersectsextent.js';\nimport { lineStringLength } from './flat/length.js';\nimport { forEach as forEachSegment } from './flat/segments.js';\nimport { douglasPeucker } from './flat/simplify.js';\n/**\n * @classdesc\n * Linestring geometry.\n *\n * @api\n */\nvar LineString = /** @class */ (function (_super) {\n    __extends(LineString, _super);\n    /**\n     * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n     *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\n     * @param {GeometryLayout=} opt_layout Layout.\n     */\n    function LineString(coordinates, opt_layout) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {import(\"../coordinate.js\").Coordinate}\n         */\n        _this.flatMidpoint_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.flatMidpointRevision_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDelta_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDeltaRevision_ = -1;\n        if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\n            _this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\n        }\n        else {\n            _this.setCoordinates(/** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (coordinates), opt_layout);\n        }\n        return _this;\n    }\n    /**\n     * Append the passed coordinate to the coordinates of the linestring.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @api\n     */\n    LineString.prototype.appendCoordinate = function (coordinate) {\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = coordinate.slice();\n        }\n        else {\n            extend(this.flatCoordinates, coordinate);\n        }\n        this.changed();\n    };\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!LineString} Clone.\n     * @override\n     * @api\n     */\n    LineString.prototype.clone = function () {\n        return new LineString(this.flatCoordinates.slice(), this.layout);\n    };\n    /**\n     * @inheritDoc\n     */\n    LineString.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n            return minSquaredDistance;\n        }\n        if (this.maxDeltaRevision_ != this.getRevision()) {\n            this.maxDelta_ = Math.sqrt(maxSquaredDelta(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, 0));\n            this.maxDeltaRevision_ = this.getRevision();\n        }\n        return assignClosestPoint(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, this.maxDelta_, false, x, y, closestPoint, minSquaredDistance);\n    };\n    /**\n     * Iterate over each segment, calling the provided callback.\n     * If the callback returns a truthy value the function returns that\n     * value immediately. Otherwise the function returns `false`.\n     *\n     * @param {function(this: S, import(\"../coordinate.js\").Coordinate, import(\"../coordinate.js\").Coordinate): T} callback Function\n     *     called for each segment.\n     * @return {T|boolean} Value.\n     * @template T,S\n     * @api\n     */\n    LineString.prototype.forEachSegment = function (callback) {\n        return forEachSegment(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, callback);\n    };\n    /**\n     * Returns the coordinate at `m` using linear interpolation, or `null` if no\n     * such coordinate exists.\n     *\n     * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n     * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n     * M will return the first coordinate and Ms greater than the last M will\n     * return the last coordinate.\n     *\n     * @param {number} m M.\n     * @param {boolean=} opt_extrapolate Extrapolate. Default is `false`.\n     * @return {import(\"../coordinate.js\").Coordinate} Coordinate.\n     * @api\n     */\n    LineString.prototype.getCoordinateAtM = function (m, opt_extrapolate) {\n        if (this.layout != GeometryLayout.XYM &&\n            this.layout != GeometryLayout.XYZM) {\n            return null;\n        }\n        var extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n        return lineStringCoordinateAtM(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, m, extrapolate);\n    };\n    /**\n     * Return the coordinates of the linestring.\n     * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n     * @override\n     * @api\n     */\n    LineString.prototype.getCoordinates = function () {\n        return inflateCoordinates(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n    };\n    /**\n     * Return the coordinate at the provided fraction along the linestring.\n     * The `fraction` is a number between 0 and 1, where 0 is the start of the\n     * linestring and 1 is the end.\n     * @param {number} fraction Fraction.\n     * @param {import(\"../coordinate.js\").Coordinate=} opt_dest Optional coordinate whose values will\n     *     be modified. If not provided, a new coordinate will be returned.\n     * @return {import(\"../coordinate.js\").Coordinate} Coordinate of the interpolated point.\n     * @api\n     */\n    LineString.prototype.getCoordinateAt = function (fraction, opt_dest) {\n        return interpolatePoint(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, fraction, opt_dest);\n    };\n    /**\n     * Return the length of the linestring on projected plane.\n     * @return {number} Length (on projected plane).\n     * @api\n     */\n    LineString.prototype.getLength = function () {\n        return lineStringLength(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n    };\n    /**\n     * @return {Array<number>} Flat midpoint.\n     */\n    LineString.prototype.getFlatMidpoint = function () {\n        if (this.flatMidpointRevision_ != this.getRevision()) {\n            this.flatMidpoint_ = this.getCoordinateAt(0.5, this.flatMidpoint_);\n            this.flatMidpointRevision_ = this.getRevision();\n        }\n        return this.flatMidpoint_;\n    };\n    /**\n     * @inheritDoc\n     */\n    LineString.prototype.getSimplifiedGeometryInternal = function (squaredTolerance) {\n        var simplifiedFlatCoordinates = [];\n        simplifiedFlatCoordinates.length = douglasPeucker(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, squaredTolerance, simplifiedFlatCoordinates, 0);\n        return new LineString(simplifiedFlatCoordinates, GeometryLayout.XY);\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    LineString.prototype.getType = function () {\n        return GeometryType.LINE_STRING;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    LineString.prototype.intersectsExtent = function (extent) {\n        return intersectsLineString(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, extent);\n    };\n    /**\n     * Set the coordinates of the linestring.\n     * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n     * @param {GeometryLayout=} opt_layout Layout.\n     * @override\n     * @api\n     */\n    LineString.prototype.setCoordinates = function (coordinates, opt_layout) {\n        this.setLayout(opt_layout, coordinates, 1);\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = [];\n        }\n        this.flatCoordinates.length = deflateCoordinates(this.flatCoordinates, 0, coordinates, this.stride);\n        this.changed();\n    };\n    return LineString;\n}(SimpleGeometry));\nexport default LineString;\n//# sourceMappingURL=LineString.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/MultiLineString\n */\nimport { extend } from '../array.js';\nimport { closestSquaredDistanceXY } from '../extent.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport LineString from './LineString.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { assignClosestArrayPoint, arrayMaxSquaredDelta } from './flat/closest.js';\nimport { deflateCoordinatesArray } from './flat/deflate.js';\nimport { inflateCoordinatesArray } from './flat/inflate.js';\nimport { interpolatePoint, lineStringsCoordinateAtM } from './flat/interpolate.js';\nimport { intersectsLineStringArray } from './flat/intersectsextent.js';\nimport { douglasPeuckerArray } from './flat/simplify.js';\n/**\n * @classdesc\n * Multi-linestring geometry.\n *\n * @api\n */\nvar MultiLineString = /** @class */ (function (_super) {\n    __extends(MultiLineString, _super);\n    /**\n     * @param {Array<Array<import(\"../coordinate.js\").Coordinate>|LineString>|Array<number>} coordinates\n     *     Coordinates or LineString geometries. (For internal use, flat coordinates in\n     *     combination with `opt_layout` and `opt_ends` are also accepted.)\n     * @param {GeometryLayout=} opt_layout Layout.\n     * @param {Array<number>=} opt_ends Flat coordinate ends for internal use.\n     */\n    function MultiLineString(coordinates, opt_layout, opt_ends) {\n        var _this = _super.call(this) || this;\n        /**\n         * @type {Array<number>}\n         * @private\n         */\n        _this.ends_ = [];\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDelta_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDeltaRevision_ = -1;\n        if (Array.isArray(coordinates[0])) {\n            _this.setCoordinates(/** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (coordinates), opt_layout);\n        }\n        else if (opt_layout !== undefined && opt_ends) {\n            _this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\n            _this.ends_ = opt_ends;\n        }\n        else {\n            var layout = _this.getLayout();\n            var lineStrings = /** @type {Array<LineString>} */ (coordinates);\n            var flatCoordinates = [];\n            var ends = [];\n            for (var i = 0, ii = lineStrings.length; i < ii; ++i) {\n                var lineString = lineStrings[i];\n                if (i === 0) {\n                    layout = lineString.getLayout();\n                }\n                extend(flatCoordinates, lineString.getFlatCoordinates());\n                ends.push(flatCoordinates.length);\n            }\n            _this.setFlatCoordinates(layout, flatCoordinates);\n            _this.ends_ = ends;\n        }\n        return _this;\n    }\n    /**\n     * Append the passed linestring to the multilinestring.\n     * @param {LineString} lineString LineString.\n     * @api\n     */\n    MultiLineString.prototype.appendLineString = function (lineString) {\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = lineString.getFlatCoordinates().slice();\n        }\n        else {\n            extend(this.flatCoordinates, lineString.getFlatCoordinates().slice());\n        }\n        this.ends_.push(this.flatCoordinates.length);\n        this.changed();\n    };\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!MultiLineString} Clone.\n     * @override\n     * @api\n     */\n    MultiLineString.prototype.clone = function () {\n        return new MultiLineString(this.flatCoordinates.slice(), this.layout, this.ends_.slice());\n    };\n    /**\n     * @inheritDoc\n     */\n    MultiLineString.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n            return minSquaredDistance;\n        }\n        if (this.maxDeltaRevision_ != this.getRevision()) {\n            this.maxDelta_ = Math.sqrt(arrayMaxSquaredDelta(this.flatCoordinates, 0, this.ends_, this.stride, 0));\n            this.maxDeltaRevision_ = this.getRevision();\n        }\n        return assignClosestArrayPoint(this.flatCoordinates, 0, this.ends_, this.stride, this.maxDelta_, false, x, y, closestPoint, minSquaredDistance);\n    };\n    /**\n     * Returns the coordinate at `m` using linear interpolation, or `null` if no\n     * such coordinate exists.\n     *\n     * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n     * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n     * M will return the first coordinate and Ms greater than the last M will\n     * return the last coordinate.\n     *\n     * `opt_interpolate` controls interpolation between consecutive LineStrings\n     * within the MultiLineString. If `opt_interpolate` is `true` the coordinates\n     * will be linearly interpolated between the last coordinate of one LineString\n     * and the first coordinate of the next LineString.  If `opt_interpolate` is\n     * `false` then the function will return `null` for Ms falling between\n     * LineStrings.\n     *\n     * @param {number} m M.\n     * @param {boolean=} opt_extrapolate Extrapolate. Default is `false`.\n     * @param {boolean=} opt_interpolate Interpolate. Default is `false`.\n     * @return {import(\"../coordinate.js\").Coordinate} Coordinate.\n     * @api\n     */\n    MultiLineString.prototype.getCoordinateAtM = function (m, opt_extrapolate, opt_interpolate) {\n        if ((this.layout != GeometryLayout.XYM &&\n            this.layout != GeometryLayout.XYZM) ||\n            this.flatCoordinates.length === 0) {\n            return null;\n        }\n        var extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n        var interpolate = opt_interpolate !== undefined ? opt_interpolate : false;\n        return lineStringsCoordinateAtM(this.flatCoordinates, 0, this.ends_, this.stride, m, extrapolate, interpolate);\n    };\n    /**\n     * Return the coordinates of the multilinestring.\n     * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n     * @override\n     * @api\n     */\n    MultiLineString.prototype.getCoordinates = function () {\n        return inflateCoordinatesArray(this.flatCoordinates, 0, this.ends_, this.stride);\n    };\n    /**\n     * @return {Array<number>} Ends.\n     */\n    MultiLineString.prototype.getEnds = function () {\n        return this.ends_;\n    };\n    /**\n     * Return the linestring at the specified index.\n     * @param {number} index Index.\n     * @return {LineString} LineString.\n     * @api\n     */\n    MultiLineString.prototype.getLineString = function (index) {\n        if (index < 0 || this.ends_.length <= index) {\n            return null;\n        }\n        return new LineString(this.flatCoordinates.slice(index === 0 ? 0 : this.ends_[index - 1], this.ends_[index]), this.layout);\n    };\n    /**\n     * Return the linestrings of this multilinestring.\n     * @return {Array<LineString>} LineStrings.\n     * @api\n     */\n    MultiLineString.prototype.getLineStrings = function () {\n        var flatCoordinates = this.flatCoordinates;\n        var ends = this.ends_;\n        var layout = this.layout;\n        /** @type {Array<LineString>} */\n        var lineStrings = [];\n        var offset = 0;\n        for (var i = 0, ii = ends.length; i < ii; ++i) {\n            var end = ends[i];\n            var lineString = new LineString(flatCoordinates.slice(offset, end), layout);\n            lineStrings.push(lineString);\n            offset = end;\n        }\n        return lineStrings;\n    };\n    /**\n     * @return {Array<number>} Flat midpoints.\n     */\n    MultiLineString.prototype.getFlatMidpoints = function () {\n        var midpoints = [];\n        var flatCoordinates = this.flatCoordinates;\n        var offset = 0;\n        var ends = this.ends_;\n        var stride = this.stride;\n        for (var i = 0, ii = ends.length; i < ii; ++i) {\n            var end = ends[i];\n            var midpoint = interpolatePoint(flatCoordinates, offset, end, stride, 0.5);\n            extend(midpoints, midpoint);\n            offset = end;\n        }\n        return midpoints;\n    };\n    /**\n     * @inheritDoc\n     */\n    MultiLineString.prototype.getSimplifiedGeometryInternal = function (squaredTolerance) {\n        var simplifiedFlatCoordinates = [];\n        var simplifiedEnds = [];\n        simplifiedFlatCoordinates.length = douglasPeuckerArray(this.flatCoordinates, 0, this.ends_, this.stride, squaredTolerance, simplifiedFlatCoordinates, 0, simplifiedEnds);\n        return new MultiLineString(simplifiedFlatCoordinates, GeometryLayout.XY, simplifiedEnds);\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    MultiLineString.prototype.getType = function () {\n        return GeometryType.MULTI_LINE_STRING;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    MultiLineString.prototype.intersectsExtent = function (extent) {\n        return intersectsLineStringArray(this.flatCoordinates, 0, this.ends_, this.stride, extent);\n    };\n    /**\n     * Set the coordinates of the multilinestring.\n     * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n     * @param {GeometryLayout=} opt_layout Layout.\n     * @override\n     * @api\n     */\n    MultiLineString.prototype.setCoordinates = function (coordinates, opt_layout) {\n        this.setLayout(opt_layout, coordinates, 2);\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = [];\n        }\n        var ends = deflateCoordinatesArray(this.flatCoordinates, 0, coordinates, this.stride, this.ends_);\n        this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n        this.changed();\n    };\n    return MultiLineString;\n}(SimpleGeometry));\nexport default MultiLineString;\n//# sourceMappingURL=MultiLineString.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/Point\n */\nimport { createOrUpdateFromCoordinate, containsXY } from '../extent.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { deflateCoordinate } from './flat/deflate.js';\nimport { squaredDistance as squaredDx } from '../math.js';\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nvar Point = /** @class */ (function (_super) {\n    __extends(Point, _super);\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n     * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n     */\n    function Point(coordinates, opt_layout) {\n        var _this = _super.call(this) || this;\n        _this.setCoordinates(coordinates, opt_layout);\n        return _this;\n    }\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!Point} Clone.\n     * @override\n     * @api\n     */\n    Point.prototype.clone = function () {\n        var point = new Point(this.flatCoordinates.slice(), this.layout);\n        return point;\n    };\n    /**\n     * @inheritDoc\n     */\n    Point.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        var flatCoordinates = this.flatCoordinates;\n        var squaredDistance = squaredDx(x, y, flatCoordinates[0], flatCoordinates[1]);\n        if (squaredDistance < minSquaredDistance) {\n            var stride = this.stride;\n            for (var i = 0; i < stride; ++i) {\n                closestPoint[i] = flatCoordinates[i];\n            }\n            closestPoint.length = stride;\n            return squaredDistance;\n        }\n        else {\n            return minSquaredDistance;\n        }\n    };\n    /**\n     * Return the coordinate of the point.\n     * @return {import(\"../coordinate.js\").Coordinate} Coordinates.\n     * @override\n     * @api\n     */\n    Point.prototype.getCoordinates = function () {\n        return !this.flatCoordinates ? [] : this.flatCoordinates.slice();\n    };\n    /**\n     * @inheritDoc\n     */\n    Point.prototype.computeExtent = function (extent) {\n        return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    Point.prototype.getType = function () {\n        return GeometryType.POINT;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    Point.prototype.intersectsExtent = function (extent) {\n        return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    Point.prototype.setCoordinates = function (coordinates, opt_layout) {\n        this.setLayout(opt_layout, coordinates, 0);\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = [];\n        }\n        this.flatCoordinates.length = deflateCoordinate(this.flatCoordinates, 0, coordinates, this.stride);\n        this.changed();\n    };\n    return Point;\n}(SimpleGeometry));\nexport default Point;\n//# sourceMappingURL=Point.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/MultiPoint\n */\nimport { extend } from '../array.js';\nimport { closestSquaredDistanceXY, containsXY } from '../extent.js';\nimport GeometryType from './GeometryType.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { deflateCoordinates } from './flat/deflate.js';\nimport { inflateCoordinates } from './flat/inflate.js';\nimport { squaredDistance as squaredDx } from '../math.js';\n/**\n * @classdesc\n * Multi-point geometry.\n *\n * @api\n */\nvar MultiPoint = /** @class */ (function (_super) {\n    __extends(MultiPoint, _super);\n    /**\n     * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n     *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\n     * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n     */\n    function MultiPoint(coordinates, opt_layout) {\n        var _this = _super.call(this) || this;\n        if (opt_layout && !Array.isArray(coordinates[0])) {\n            _this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\n        }\n        else {\n            _this.setCoordinates(/** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (coordinates), opt_layout);\n        }\n        return _this;\n    }\n    /**\n     * Append the passed point to this multipoint.\n     * @param {Point} point Point.\n     * @api\n     */\n    MultiPoint.prototype.appendPoint = function (point) {\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = point.getFlatCoordinates().slice();\n        }\n        else {\n            extend(this.flatCoordinates, point.getFlatCoordinates());\n        }\n        this.changed();\n    };\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!MultiPoint} Clone.\n     * @override\n     * @api\n     */\n    MultiPoint.prototype.clone = function () {\n        var multiPoint = new MultiPoint(this.flatCoordinates.slice(), this.layout);\n        return multiPoint;\n    };\n    /**\n     * @inheritDoc\n     */\n    MultiPoint.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n            return minSquaredDistance;\n        }\n        var flatCoordinates = this.flatCoordinates;\n        var stride = this.stride;\n        for (var i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n            var squaredDistance = squaredDx(x, y, flatCoordinates[i], flatCoordinates[i + 1]);\n            if (squaredDistance < minSquaredDistance) {\n                minSquaredDistance = squaredDistance;\n                for (var j = 0; j < stride; ++j) {\n                    closestPoint[j] = flatCoordinates[i + j];\n                }\n                closestPoint.length = stride;\n            }\n        }\n        return minSquaredDistance;\n    };\n    /**\n     * Return the coordinates of the multipoint.\n     * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n     * @override\n     * @api\n     */\n    MultiPoint.prototype.getCoordinates = function () {\n        return inflateCoordinates(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n    };\n    /**\n     * Return the point at the specified index.\n     * @param {number} index Index.\n     * @return {Point} Point.\n     * @api\n     */\n    MultiPoint.prototype.getPoint = function (index) {\n        var n = !this.flatCoordinates ? 0 : this.flatCoordinates.length / this.stride;\n        if (index < 0 || n <= index) {\n            return null;\n        }\n        return new Point(this.flatCoordinates.slice(index * this.stride, (index + 1) * this.stride), this.layout);\n    };\n    /**\n     * Return the points of this multipoint.\n     * @return {Array<Point>} Points.\n     * @api\n     */\n    MultiPoint.prototype.getPoints = function () {\n        var flatCoordinates = this.flatCoordinates;\n        var layout = this.layout;\n        var stride = this.stride;\n        /** @type {Array<Point>} */\n        var points = [];\n        for (var i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n            var point = new Point(flatCoordinates.slice(i, i + stride), layout);\n            points.push(point);\n        }\n        return points;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    MultiPoint.prototype.getType = function () {\n        return GeometryType.MULTI_POINT;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    MultiPoint.prototype.intersectsExtent = function (extent) {\n        var flatCoordinates = this.flatCoordinates;\n        var stride = this.stride;\n        for (var i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n            var x = flatCoordinates[i];\n            var y = flatCoordinates[i + 1];\n            if (containsXY(extent, x, y)) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * Set the coordinates of the multipoint.\n     * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n     * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n     * @override\n     * @api\n     */\n    MultiPoint.prototype.setCoordinates = function (coordinates, opt_layout) {\n        this.setLayout(opt_layout, coordinates, 1);\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = [];\n        }\n        this.flatCoordinates.length = deflateCoordinates(this.flatCoordinates, 0, coordinates, this.stride);\n        this.changed();\n    };\n    return MultiPoint;\n}(SimpleGeometry));\nexport default MultiPoint;\n//# sourceMappingURL=MultiPoint.js.map","/**\n * @module ol/geom/flat/area\n */\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n    var twiceArea = 0;\n    var x1 = flatCoordinates[end - stride];\n    var y1 = flatCoordinates[end - stride + 1];\n    for (; offset < end; offset += stride) {\n        var x2 = flatCoordinates[offset];\n        var y2 = flatCoordinates[offset + 1];\n        twiceArea += y1 * x2 - x1 * y2;\n        x1 = x2;\n        y1 = y2;\n    }\n    return twiceArea / 2;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n    var area = 0;\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        area += linearRing(flatCoordinates, offset, end, stride);\n        offset = end;\n    }\n    return area;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n    var area = 0;\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        area += linearRings(flatCoordinates, offset, ends, stride);\n        offset = ends[ends.length - 1];\n    }\n    return area;\n}\n//# sourceMappingURL=area.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/LinearRing\n */\nimport { closestSquaredDistanceXY } from '../extent.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { linearRing as linearRingArea } from './flat/area.js';\nimport { assignClosestPoint, maxSquaredDelta } from './flat/closest.js';\nimport { deflateCoordinates } from './flat/deflate.js';\nimport { inflateCoordinates } from './flat/inflate.js';\nimport { douglasPeucker } from './flat/simplify.js';\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @api\n */\nvar LinearRing = /** @class */ (function (_super) {\n    __extends(LinearRing, _super);\n    /**\n     * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n     *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\n     * @param {GeometryLayout=} opt_layout Layout.\n     */\n    function LinearRing(coordinates, opt_layout) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDelta_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDeltaRevision_ = -1;\n        if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\n            _this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\n        }\n        else {\n            _this.setCoordinates(/** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (coordinates), opt_layout);\n        }\n        return _this;\n    }\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!LinearRing} Clone.\n     * @override\n     * @api\n     */\n    LinearRing.prototype.clone = function () {\n        return new LinearRing(this.flatCoordinates.slice(), this.layout);\n    };\n    /**\n     * @inheritDoc\n     */\n    LinearRing.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n            return minSquaredDistance;\n        }\n        if (this.maxDeltaRevision_ != this.getRevision()) {\n            this.maxDelta_ = Math.sqrt(maxSquaredDelta(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, 0));\n            this.maxDeltaRevision_ = this.getRevision();\n        }\n        return assignClosestPoint(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n    };\n    /**\n     * Return the area of the linear ring on projected plane.\n     * @return {number} Area (on projected plane).\n     * @api\n     */\n    LinearRing.prototype.getArea = function () {\n        return linearRingArea(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n    };\n    /**\n     * Return the coordinates of the linear ring.\n     * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n     * @override\n     * @api\n     */\n    LinearRing.prototype.getCoordinates = function () {\n        return inflateCoordinates(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n    };\n    /**\n     * @inheritDoc\n     */\n    LinearRing.prototype.getSimplifiedGeometryInternal = function (squaredTolerance) {\n        var simplifiedFlatCoordinates = [];\n        simplifiedFlatCoordinates.length = douglasPeucker(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, squaredTolerance, simplifiedFlatCoordinates, 0);\n        return new LinearRing(simplifiedFlatCoordinates, GeometryLayout.XY);\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    LinearRing.prototype.getType = function () {\n        return GeometryType.LINEAR_RING;\n    };\n    /**\n     * @inheritDoc\n     */\n    LinearRing.prototype.intersectsExtent = function (extent) {\n        return false;\n    };\n    /**\n     * Set the coordinates of the linear ring.\n     * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n     * @param {GeometryLayout=} opt_layout Layout.\n     * @override\n     * @api\n     */\n    LinearRing.prototype.setCoordinates = function (coordinates, opt_layout) {\n        this.setLayout(opt_layout, coordinates, 1);\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = [];\n        }\n        this.flatCoordinates.length = deflateCoordinates(this.flatCoordinates, 0, coordinates, this.stride);\n        this.changed();\n    };\n    return LinearRing;\n}(SimpleGeometry));\nexport default LinearRing;\n//# sourceMappingURL=LinearRing.js.map","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport { numberSafeCompareFunction } from '../../array.js';\nimport { linearRingsContainsXY } from './contains.js';\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(flatCoordinates, offset, ends, stride, flatCenters, flatCentersOffset, opt_dest) {\n    var i, ii, x, x1, x2, y1, y2;\n    var y = flatCenters[flatCentersOffset + 1];\n    /** @type {Array<number>} */\n    var intersections = [];\n    // Calculate intersections with the horizontal line\n    for (var r = 0, rr = ends.length; r < rr; ++r) {\n        var end = ends[r];\n        x1 = flatCoordinates[end - stride];\n        y1 = flatCoordinates[end - stride + 1];\n        for (i = offset; i < end; i += stride) {\n            x2 = flatCoordinates[i];\n            y2 = flatCoordinates[i + 1];\n            if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n                x = (y - y1) / (y2 - y1) * (x2 - x1) + x1;\n                intersections.push(x);\n            }\n            x1 = x2;\n            y1 = y2;\n        }\n    }\n    // Find the longest segment of the horizontal line that has its center point\n    // inside the linear ring.\n    var pointX = NaN;\n    var maxSegmentLength = -Infinity;\n    intersections.sort(numberSafeCompareFunction);\n    x1 = intersections[0];\n    for (i = 1, ii = intersections.length; i < ii; ++i) {\n        x2 = intersections[i];\n        var segmentLength = Math.abs(x2 - x1);\n        if (segmentLength > maxSegmentLength) {\n            x = (x1 + x2) / 2;\n            if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n                pointX = x;\n                maxSegmentLength = segmentLength;\n            }\n        }\n        x1 = x2;\n    }\n    if (isNaN(pointX)) {\n        // There is no horizontal line that has its center point inside the linear\n        // ring.  Use the center of the the linear ring's extent.\n        pointX = flatCenters[flatCentersOffset];\n    }\n    if (opt_dest) {\n        opt_dest.push(pointX, y, maxSegmentLength);\n        return opt_dest;\n    }\n    else {\n        return [pointX, y, maxSegmentLength];\n    }\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(flatCoordinates, offset, endss, stride, flatCenters) {\n    var interiorPoints = [];\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        interiorPoints = getInteriorPointOfArray(flatCoordinates, offset, ends, stride, flatCenters, 2 * i, interiorPoints);\n        offset = ends[ends.length - 1];\n    }\n    return interiorPoints;\n}\n//# sourceMappingURL=interiorpoint.js.map","/**\n * @module ol/geom/flat/reverse\n */\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n    while (offset < end - stride) {\n        for (var i = 0; i < stride; ++i) {\n            var tmp = flatCoordinates[offset + i];\n            flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n            flatCoordinates[end - stride + i] = tmp;\n        }\n        offset += stride;\n        end -= stride;\n    }\n}\n//# sourceMappingURL=reverse.js.map","/**\n * @module ol/geom/flat/orient\n */\nimport { coordinates as reverseCoordinates } from './reverse.js';\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n    // http://tinyurl.com/clockwise-method\n    // https://github.com/OSGeo/gdal/blob/trunk/gdal/ogr/ogrlinearring.cpp\n    var edge = 0;\n    var x1 = flatCoordinates[end - stride];\n    var y1 = flatCoordinates[end - stride + 1];\n    for (; offset < end; offset += stride) {\n        var x2 = flatCoordinates[offset];\n        var y2 = flatCoordinates[offset + 1];\n        edge += (x2 - x1) * (y2 + y1);\n        x1 = x2;\n        y1 = y2;\n    }\n    return edge > 0;\n}\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(flatCoordinates, offset, ends, stride, opt_right) {\n    var right = opt_right !== undefined ? opt_right : false;\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        var isClockwise = linearRingIsClockwise(flatCoordinates, offset, end, stride);\n        if (i === 0) {\n            if ((right && isClockwise) || (!right && !isClockwise)) {\n                return false;\n            }\n        }\n        else {\n            if ((right && !isClockwise) || (!right && isClockwise)) {\n                return false;\n            }\n        }\n        offset = end;\n    }\n    return true;\n}\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingssAreOriented(flatCoordinates, offset, endss, stride, opt_right) {\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        if (!linearRingsAreOriented(flatCoordinates, offset, ends, stride, opt_right)) {\n            return false;\n        }\n        if (ends.length) {\n            offset = ends[ends.length - 1];\n        }\n    }\n    return true;\n}\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(flatCoordinates, offset, ends, stride, opt_right) {\n    var right = opt_right !== undefined ? opt_right : false;\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        var isClockwise = linearRingIsClockwise(flatCoordinates, offset, end, stride);\n        var reverse = i === 0 ?\n            (right && isClockwise) || (!right && !isClockwise) :\n            (right && !isClockwise) || (!right && isClockwise);\n        if (reverse) {\n            reverseCoordinates(flatCoordinates, offset, end, stride);\n        }\n        offset = end;\n    }\n    return offset;\n}\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(flatCoordinates, offset, endss, stride, opt_right) {\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        offset = orientLinearRings(flatCoordinates, offset, endss[i], stride, opt_right);\n    }\n    return offset;\n}\n//# sourceMappingURL=orient.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/Polygon\n */\nimport { extend } from '../array.js';\nimport { closestSquaredDistanceXY, getCenter } from '../extent.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport LinearRing from './LinearRing.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { offset as sphereOffset } from '../sphere.js';\nimport { linearRings as linearRingsArea } from './flat/area.js';\nimport { assignClosestArrayPoint, arrayMaxSquaredDelta } from './flat/closest.js';\nimport { linearRingsContainsXY } from './flat/contains.js';\nimport { deflateCoordinatesArray } from './flat/deflate.js';\nimport { inflateCoordinatesArray } from './flat/inflate.js';\nimport { getInteriorPointOfArray } from './flat/interiorpoint.js';\nimport { intersectsLinearRingArray } from './flat/intersectsextent.js';\nimport { linearRingsAreOriented, orientLinearRings } from './flat/orient.js';\nimport { quantizeArray } from './flat/simplify.js';\nimport { modulo } from '../math.js';\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @api\n */\nvar Polygon = /** @class */ (function (_super) {\n    __extends(Polygon, _super);\n    /**\n     * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>|!Array<number>} coordinates\n     *     Array of linear rings that define the polygon. The first linear ring of the\n     *     array defines the outer-boundary or surface of the polygon. Each subsequent\n     *     linear ring defines a hole in the surface of the polygon. A linear ring is\n     *     an array of vertices' coordinates where the first coordinate and the last are\n     *     equivalent. (For internal use, flat coordinates in combination with\n     *     `opt_layout` and `opt_ends` are also accepted.)\n     * @param {GeometryLayout=} opt_layout Layout.\n     * @param {Array<number>=} opt_ends Ends (for internal use with flat coordinates).\n     */\n    function Polygon(coordinates, opt_layout, opt_ends) {\n        var _this = _super.call(this) || this;\n        /**\n         * @type {Array<number>}\n         * @private\n         */\n        _this.ends_ = [];\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.flatInteriorPointRevision_ = -1;\n        /**\n         * @private\n         * @type {import(\"../coordinate.js\").Coordinate}\n         */\n        _this.flatInteriorPoint_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDelta_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDeltaRevision_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.orientedRevision_ = -1;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.orientedFlatCoordinates_ = null;\n        if (opt_layout !== undefined && opt_ends) {\n            _this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\n            _this.ends_ = opt_ends;\n        }\n        else {\n            _this.setCoordinates(/** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (coordinates), opt_layout);\n        }\n        return _this;\n    }\n    /**\n     * Append the passed linear ring to this polygon.\n     * @param {LinearRing} linearRing Linear ring.\n     * @api\n     */\n    Polygon.prototype.appendLinearRing = function (linearRing) {\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n        }\n        else {\n            extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n        }\n        this.ends_.push(this.flatCoordinates.length);\n        this.changed();\n    };\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!Polygon} Clone.\n     * @override\n     * @api\n     */\n    Polygon.prototype.clone = function () {\n        return new Polygon(this.flatCoordinates.slice(), this.layout, this.ends_.slice());\n    };\n    /**\n     * @inheritDoc\n     */\n    Polygon.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n            return minSquaredDistance;\n        }\n        if (this.maxDeltaRevision_ != this.getRevision()) {\n            this.maxDelta_ = Math.sqrt(arrayMaxSquaredDelta(this.flatCoordinates, 0, this.ends_, this.stride, 0));\n            this.maxDeltaRevision_ = this.getRevision();\n        }\n        return assignClosestArrayPoint(this.flatCoordinates, 0, this.ends_, this.stride, this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n    };\n    /**\n     * @inheritDoc\n     */\n    Polygon.prototype.containsXY = function (x, y) {\n        return linearRingsContainsXY(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride, x, y);\n    };\n    /**\n     * Return the area of the polygon on projected plane.\n     * @return {number} Area (on projected plane).\n     * @api\n     */\n    Polygon.prototype.getArea = function () {\n        return linearRingsArea(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride);\n    };\n    /**\n     * Get the coordinate array for this geometry.  This array has the structure\n     * of a GeoJSON coordinate array for polygons.\n     *\n     * @param {boolean=} opt_right Orient coordinates according to the right-hand\n     *     rule (counter-clockwise for exterior and clockwise for interior rings).\n     *     If `false`, coordinates will be oriented according to the left-hand rule\n     *     (clockwise for exterior and counter-clockwise for interior rings).\n     *     By default, coordinate orientation will depend on how the geometry was\n     *     constructed.\n     * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n     * @override\n     * @api\n     */\n    Polygon.prototype.getCoordinates = function (opt_right) {\n        var flatCoordinates;\n        if (opt_right !== undefined) {\n            flatCoordinates = this.getOrientedFlatCoordinates().slice();\n            orientLinearRings(flatCoordinates, 0, this.ends_, this.stride, opt_right);\n        }\n        else {\n            flatCoordinates = this.flatCoordinates;\n        }\n        return inflateCoordinatesArray(flatCoordinates, 0, this.ends_, this.stride);\n    };\n    /**\n     * @return {Array<number>} Ends.\n     */\n    Polygon.prototype.getEnds = function () {\n        return this.ends_;\n    };\n    /**\n     * @return {Array<number>} Interior point.\n     */\n    Polygon.prototype.getFlatInteriorPoint = function () {\n        if (this.flatInteriorPointRevision_ != this.getRevision()) {\n            var flatCenter = getCenter(this.getExtent());\n            this.flatInteriorPoint_ = getInteriorPointOfArray(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride, flatCenter, 0);\n            this.flatInteriorPointRevision_ = this.getRevision();\n        }\n        return this.flatInteriorPoint_;\n    };\n    /**\n     * Return an interior point of the polygon.\n     * @return {Point} Interior point as XYM coordinate, where M is the\n     * length of the horizontal intersection that the point belongs to.\n     * @api\n     */\n    Polygon.prototype.getInteriorPoint = function () {\n        return new Point(this.getFlatInteriorPoint(), GeometryLayout.XYM);\n    };\n    /**\n     * Return the number of rings of the polygon,  this includes the exterior\n     * ring and any interior rings.\n     *\n     * @return {number} Number of rings.\n     * @api\n     */\n    Polygon.prototype.getLinearRingCount = function () {\n        return this.ends_.length;\n    };\n    /**\n     * Return the Nth linear ring of the polygon geometry. Return `null` if the\n     * given index is out of range.\n     * The exterior linear ring is available at index `0` and the interior rings\n     * at index `1` and beyond.\n     *\n     * @param {number} index Index.\n     * @return {LinearRing} Linear ring.\n     * @api\n     */\n    Polygon.prototype.getLinearRing = function (index) {\n        if (index < 0 || this.ends_.length <= index) {\n            return null;\n        }\n        return new LinearRing(this.flatCoordinates.slice(index === 0 ? 0 : this.ends_[index - 1], this.ends_[index]), this.layout);\n    };\n    /**\n     * Return the linear rings of the polygon.\n     * @return {Array<LinearRing>} Linear rings.\n     * @api\n     */\n    Polygon.prototype.getLinearRings = function () {\n        var layout = this.layout;\n        var flatCoordinates = this.flatCoordinates;\n        var ends = this.ends_;\n        var linearRings = [];\n        var offset = 0;\n        for (var i = 0, ii = ends.length; i < ii; ++i) {\n            var end = ends[i];\n            var linearRing = new LinearRing(flatCoordinates.slice(offset, end), layout);\n            linearRings.push(linearRing);\n            offset = end;\n        }\n        return linearRings;\n    };\n    /**\n     * @return {Array<number>} Oriented flat coordinates.\n     */\n    Polygon.prototype.getOrientedFlatCoordinates = function () {\n        if (this.orientedRevision_ != this.getRevision()) {\n            var flatCoordinates = this.flatCoordinates;\n            if (linearRingsAreOriented(flatCoordinates, 0, this.ends_, this.stride)) {\n                this.orientedFlatCoordinates_ = flatCoordinates;\n            }\n            else {\n                this.orientedFlatCoordinates_ = flatCoordinates.slice();\n                this.orientedFlatCoordinates_.length =\n                    orientLinearRings(this.orientedFlatCoordinates_, 0, this.ends_, this.stride);\n            }\n            this.orientedRevision_ = this.getRevision();\n        }\n        return this.orientedFlatCoordinates_;\n    };\n    /**\n     * @inheritDoc\n     */\n    Polygon.prototype.getSimplifiedGeometryInternal = function (squaredTolerance) {\n        var simplifiedFlatCoordinates = [];\n        var simplifiedEnds = [];\n        simplifiedFlatCoordinates.length = quantizeArray(this.flatCoordinates, 0, this.ends_, this.stride, Math.sqrt(squaredTolerance), simplifiedFlatCoordinates, 0, simplifiedEnds);\n        return new Polygon(simplifiedFlatCoordinates, GeometryLayout.XY, simplifiedEnds);\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    Polygon.prototype.getType = function () {\n        return GeometryType.POLYGON;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    Polygon.prototype.intersectsExtent = function (extent) {\n        return intersectsLinearRingArray(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride, extent);\n    };\n    /**\n     * Set the coordinates of the polygon.\n     * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n     * @param {GeometryLayout=} opt_layout Layout.\n     * @override\n     * @api\n     */\n    Polygon.prototype.setCoordinates = function (coordinates, opt_layout) {\n        this.setLayout(opt_layout, coordinates, 2);\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = [];\n        }\n        var ends = deflateCoordinatesArray(this.flatCoordinates, 0, coordinates, this.stride, this.ends_);\n        this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n        this.changed();\n    };\n    return Polygon;\n}(SimpleGeometry));\nexport default Polygon;\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {import(\"../coordinate.js\").Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices.\n * @param {number=} opt_n Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number=} opt_sphereRadius Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, opt_n, opt_sphereRadius) {\n    var n = opt_n ? opt_n : 32;\n    /** @type {Array<number>} */\n    var flatCoordinates = [];\n    for (var i = 0; i < n; ++i) {\n        extend(flatCoordinates, sphereOffset(center, radius, 2 * Math.PI * i / n, opt_sphereRadius));\n    }\n    flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n    return new Polygon(flatCoordinates, GeometryLayout.XY, [flatCoordinates.length]);\n}\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {import(\"../extent.js\").Extent} extent The extent.\n * @return {Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n    var minX = extent[0];\n    var minY = extent[1];\n    var maxX = extent[2];\n    var maxY = extent[3];\n    var flatCoordinates = [minX, minY, minX, maxY, maxX, maxY, maxX, minY, minX, minY];\n    return new Polygon(flatCoordinates, GeometryLayout.XY, [flatCoordinates.length]);\n}\n/**\n * Create a regular polygon from a circle.\n * @param {import(\"./Circle.js\").default} circle Circle geometry.\n * @param {number=} opt_sides Number of sides of the polygon. Default is 32.\n * @param {number=} opt_angle Start angle for the first vertex of the polygon in\n *     radians. Default is 0.\n * @return {Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, opt_sides, opt_angle) {\n    var sides = opt_sides ? opt_sides : 32;\n    var stride = circle.getStride();\n    var layout = circle.getLayout();\n    var center = circle.getCenter();\n    var arrayLength = stride * (sides + 1);\n    var flatCoordinates = new Array(arrayLength);\n    for (var i = 0; i < arrayLength; i += stride) {\n        flatCoordinates[i] = 0;\n        flatCoordinates[i + 1] = 0;\n        for (var j = 2; j < stride; j++) {\n            flatCoordinates[i + j] = center[j];\n        }\n    }\n    var ends = [flatCoordinates.length];\n    var polygon = new Polygon(flatCoordinates, layout, ends);\n    makeRegular(polygon, center, circle.getRadius(), opt_angle);\n    return polygon;\n}\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {Polygon} polygon Polygon geometry.\n * @param {import(\"../coordinate.js\").Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number=} opt_angle Start angle for the first vertex of the polygon in\n *     radians. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, opt_angle) {\n    var flatCoordinates = polygon.getFlatCoordinates();\n    var stride = polygon.getStride();\n    var sides = flatCoordinates.length / stride - 1;\n    var startAngle = opt_angle ? opt_angle : 0;\n    for (var i = 0; i <= sides; ++i) {\n        var offset = i * stride;\n        var angle = startAngle + (modulo(i, sides) * 2 * Math.PI / sides);\n        flatCoordinates[offset] = center[0] + (radius * Math.cos(angle));\n        flatCoordinates[offset + 1] = center[1] + (radius * Math.sin(angle));\n    }\n    polygon.changed();\n}\n//# sourceMappingURL=Polygon.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/MultiPolygon\n */\nimport { extend } from '../array.js';\nimport { closestSquaredDistanceXY } from '../extent.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport MultiPoint from './MultiPoint.js';\nimport Polygon from './Polygon.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { linearRingss as linearRingssArea } from './flat/area.js';\nimport { linearRingss as linearRingssCenter } from './flat/center.js';\nimport { assignClosestMultiArrayPoint, multiArrayMaxSquaredDelta } from './flat/closest.js';\nimport { linearRingssContainsXY } from './flat/contains.js';\nimport { deflateMultiCoordinatesArray } from './flat/deflate.js';\nimport { inflateMultiCoordinatesArray } from './flat/inflate.js';\nimport { getInteriorPointsOfMultiArray } from './flat/interiorpoint.js';\nimport { intersectsLinearRingMultiArray } from './flat/intersectsextent.js';\nimport { linearRingssAreOriented, orientLinearRingsArray } from './flat/orient.js';\nimport { quantizeMultiArray } from './flat/simplify.js';\n/**\n * @classdesc\n * Multi-polygon geometry.\n *\n * @api\n */\nvar MultiPolygon = /** @class */ (function (_super) {\n    __extends(MultiPolygon, _super);\n    /**\n     * @param {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>|Polygon>|Array<number>} coordinates Coordinates.\n     *     For internal use, flat coordinates in combination with `opt_layout` and `opt_endss` are also accepted.\n     * @param {GeometryLayout=} opt_layout Layout.\n     * @param {Array<Array<number>>=} opt_endss Array of ends for internal use with flat coordinates.\n     */\n    function MultiPolygon(coordinates, opt_layout, opt_endss) {\n        var _this = _super.call(this) || this;\n        /**\n         * @type {Array<Array<number>>}\n         * @private\n         */\n        _this.endss_ = [];\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.flatInteriorPointsRevision_ = -1;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.flatInteriorPoints_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDelta_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDeltaRevision_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.orientedRevision_ = -1;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.orientedFlatCoordinates_ = null;\n        if (!opt_endss && !Array.isArray(coordinates[0])) {\n            var layout = _this.getLayout();\n            var polygons = /** @type {Array<Polygon>} */ (coordinates);\n            var flatCoordinates = [];\n            var endss = [];\n            for (var i = 0, ii = polygons.length; i < ii; ++i) {\n                var polygon = polygons[i];\n                if (i === 0) {\n                    layout = polygon.getLayout();\n                }\n                var offset = flatCoordinates.length;\n                var ends = polygon.getEnds();\n                for (var j = 0, jj = ends.length; j < jj; ++j) {\n                    ends[j] += offset;\n                }\n                extend(flatCoordinates, polygon.getFlatCoordinates());\n                endss.push(ends);\n            }\n            opt_layout = layout;\n            coordinates = flatCoordinates;\n            opt_endss = endss;\n        }\n        if (opt_layout !== undefined && opt_endss) {\n            _this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\n            _this.endss_ = opt_endss;\n        }\n        else {\n            _this.setCoordinates(/** @type {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} */ (coordinates), opt_layout);\n        }\n        return _this;\n    }\n    /**\n     * Append the passed polygon to this multipolygon.\n     * @param {Polygon} polygon Polygon.\n     * @api\n     */\n    MultiPolygon.prototype.appendPolygon = function (polygon) {\n        /** @type {Array<number>} */\n        var ends;\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = polygon.getFlatCoordinates().slice();\n            ends = polygon.getEnds().slice();\n            this.endss_.push();\n        }\n        else {\n            var offset = this.flatCoordinates.length;\n            extend(this.flatCoordinates, polygon.getFlatCoordinates());\n            ends = polygon.getEnds().slice();\n            for (var i = 0, ii = ends.length; i < ii; ++i) {\n                ends[i] += offset;\n            }\n        }\n        this.endss_.push(ends);\n        this.changed();\n    };\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!MultiPolygon} Clone.\n     * @override\n     * @api\n     */\n    MultiPolygon.prototype.clone = function () {\n        var len = this.endss_.length;\n        var newEndss = new Array(len);\n        for (var i = 0; i < len; ++i) {\n            newEndss[i] = this.endss_[i].slice();\n        }\n        return new MultiPolygon(this.flatCoordinates.slice(), this.layout, newEndss);\n    };\n    /**\n     * @inheritDoc\n     */\n    MultiPolygon.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n            return minSquaredDistance;\n        }\n        if (this.maxDeltaRevision_ != this.getRevision()) {\n            this.maxDelta_ = Math.sqrt(multiArrayMaxSquaredDelta(this.flatCoordinates, 0, this.endss_, this.stride, 0));\n            this.maxDeltaRevision_ = this.getRevision();\n        }\n        return assignClosestMultiArrayPoint(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n    };\n    /**\n     * @inheritDoc\n     */\n    MultiPolygon.prototype.containsXY = function (x, y) {\n        return linearRingssContainsXY(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, x, y);\n    };\n    /**\n     * Return the area of the multipolygon on projected plane.\n     * @return {number} Area (on projected plane).\n     * @api\n     */\n    MultiPolygon.prototype.getArea = function () {\n        return linearRingssArea(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride);\n    };\n    /**\n     * Get the coordinate array for this geometry.  This array has the structure\n     * of a GeoJSON coordinate array for multi-polygons.\n     *\n     * @param {boolean=} opt_right Orient coordinates according to the right-hand\n     *     rule (counter-clockwise for exterior and clockwise for interior rings).\n     *     If `false`, coordinates will be oriented according to the left-hand rule\n     *     (clockwise for exterior and counter-clockwise for interior rings).\n     *     By default, coordinate orientation will depend on how the geometry was\n     *     constructed.\n     * @return {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} Coordinates.\n     * @override\n     * @api\n     */\n    MultiPolygon.prototype.getCoordinates = function (opt_right) {\n        var flatCoordinates;\n        if (opt_right !== undefined) {\n            flatCoordinates = this.getOrientedFlatCoordinates().slice();\n            orientLinearRingsArray(flatCoordinates, 0, this.endss_, this.stride, opt_right);\n        }\n        else {\n            flatCoordinates = this.flatCoordinates;\n        }\n        return inflateMultiCoordinatesArray(flatCoordinates, 0, this.endss_, this.stride);\n    };\n    /**\n     * @return {Array<Array<number>>} Endss.\n     */\n    MultiPolygon.prototype.getEndss = function () {\n        return this.endss_;\n    };\n    /**\n     * @return {Array<number>} Flat interior points.\n     */\n    MultiPolygon.prototype.getFlatInteriorPoints = function () {\n        if (this.flatInteriorPointsRevision_ != this.getRevision()) {\n            var flatCenters = linearRingssCenter(this.flatCoordinates, 0, this.endss_, this.stride);\n            this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, flatCenters);\n            this.flatInteriorPointsRevision_ = this.getRevision();\n        }\n        return this.flatInteriorPoints_;\n    };\n    /**\n     * Return the interior points as {@link module:ol/geom/MultiPoint multipoint}.\n     * @return {MultiPoint} Interior points as XYM coordinates, where M is\n     * the length of the horizontal intersection that the point belongs to.\n     * @api\n     */\n    MultiPolygon.prototype.getInteriorPoints = function () {\n        return new MultiPoint(this.getFlatInteriorPoints().slice(), GeometryLayout.XYM);\n    };\n    /**\n     * @return {Array<number>} Oriented flat coordinates.\n     */\n    MultiPolygon.prototype.getOrientedFlatCoordinates = function () {\n        if (this.orientedRevision_ != this.getRevision()) {\n            var flatCoordinates = this.flatCoordinates;\n            if (linearRingssAreOriented(flatCoordinates, 0, this.endss_, this.stride)) {\n                this.orientedFlatCoordinates_ = flatCoordinates;\n            }\n            else {\n                this.orientedFlatCoordinates_ = flatCoordinates.slice();\n                this.orientedFlatCoordinates_.length =\n                    orientLinearRingsArray(this.orientedFlatCoordinates_, 0, this.endss_, this.stride);\n            }\n            this.orientedRevision_ = this.getRevision();\n        }\n        return this.orientedFlatCoordinates_;\n    };\n    /**\n     * @inheritDoc\n     */\n    MultiPolygon.prototype.getSimplifiedGeometryInternal = function (squaredTolerance) {\n        var simplifiedFlatCoordinates = [];\n        var simplifiedEndss = [];\n        simplifiedFlatCoordinates.length = quantizeMultiArray(this.flatCoordinates, 0, this.endss_, this.stride, Math.sqrt(squaredTolerance), simplifiedFlatCoordinates, 0, simplifiedEndss);\n        return new MultiPolygon(simplifiedFlatCoordinates, GeometryLayout.XY, simplifiedEndss);\n    };\n    /**\n     * Return the polygon at the specified index.\n     * @param {number} index Index.\n     * @return {Polygon} Polygon.\n     * @api\n     */\n    MultiPolygon.prototype.getPolygon = function (index) {\n        if (index < 0 || this.endss_.length <= index) {\n            return null;\n        }\n        var offset;\n        if (index === 0) {\n            offset = 0;\n        }\n        else {\n            var prevEnds = this.endss_[index - 1];\n            offset = prevEnds[prevEnds.length - 1];\n        }\n        var ends = this.endss_[index].slice();\n        var end = ends[ends.length - 1];\n        if (offset !== 0) {\n            for (var i = 0, ii = ends.length; i < ii; ++i) {\n                ends[i] -= offset;\n            }\n        }\n        return new Polygon(this.flatCoordinates.slice(offset, end), this.layout, ends);\n    };\n    /**\n     * Return the polygons of this multipolygon.\n     * @return {Array<Polygon>} Polygons.\n     * @api\n     */\n    MultiPolygon.prototype.getPolygons = function () {\n        var layout = this.layout;\n        var flatCoordinates = this.flatCoordinates;\n        var endss = this.endss_;\n        var polygons = [];\n        var offset = 0;\n        for (var i = 0, ii = endss.length; i < ii; ++i) {\n            var ends = endss[i].slice();\n            var end = ends[ends.length - 1];\n            if (offset !== 0) {\n                for (var j = 0, jj = ends.length; j < jj; ++j) {\n                    ends[j] -= offset;\n                }\n            }\n            var polygon = new Polygon(flatCoordinates.slice(offset, end), layout, ends);\n            polygons.push(polygon);\n            offset = end;\n        }\n        return polygons;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    MultiPolygon.prototype.getType = function () {\n        return GeometryType.MULTI_POLYGON;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    MultiPolygon.prototype.intersectsExtent = function (extent) {\n        return intersectsLinearRingMultiArray(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, extent);\n    };\n    /**\n     * Set the coordinates of the multipolygon.\n     * @param {!Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} coordinates Coordinates.\n     * @param {GeometryLayout=} opt_layout Layout.\n     * @override\n     * @api\n     */\n    MultiPolygon.prototype.setCoordinates = function (coordinates, opt_layout) {\n        this.setLayout(opt_layout, coordinates, 3);\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = [];\n        }\n        var endss = deflateMultiCoordinatesArray(this.flatCoordinates, 0, coordinates, this.stride, this.endss_);\n        if (endss.length === 0) {\n            this.flatCoordinates.length = 0;\n        }\n        else {\n            var lastEnds = endss[endss.length - 1];\n            this.flatCoordinates.length = lastEnds.length === 0 ?\n                0 : lastEnds[lastEnds.length - 1];\n        }\n        this.changed();\n    };\n    return MultiPolygon;\n}(SimpleGeometry));\nexport default MultiPolygon;\n//# sourceMappingURL=MultiPolygon.js.map","/**\n * @module ol/geom/flat/center\n */\nimport { createEmpty, createOrUpdateFromFlatCoordinates } from '../../extent.js';\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {Array<number>} Flat centers.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n    var flatCenters = [];\n    var extent = createEmpty();\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        extent = createOrUpdateFromFlatCoordinates(flatCoordinates, offset, ends[0], stride);\n        flatCenters.push((extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2);\n        offset = ends[ends.length - 1];\n    }\n    return flatCenters;\n}\n//# sourceMappingURL=center.js.map","/**\n * @module ol/format/GeoJSON\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { assert } from '../asserts.js';\nimport Feature from '../Feature.js';\nimport { transformGeometryWithOptions } from './Feature.js';\nimport JSONFeature from './JSONFeature.js';\nimport GeometryCollection from '../geom/GeometryCollection.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport { assign, isEmpty } from '../obj.js';\nimport { get as getProjection } from '../proj.js';\nimport GeometryType from '../geom/GeometryType.js';\n/**\n * @typedef {import(\"geojson\").GeoJSON} GeoJSONObject\n * @typedef {import(\"geojson\").Feature} GeoJSONFeature\n * @typedef {import(\"geojson\").FeatureCollection} GeoJSONFeatureCollection\n * @typedef {import(\"geojson\").Geometry} GeoJSONGeometry\n * @typedef {import(\"geojson\").Point} GeoJSONPoint\n * @typedef {import(\"geojson\").LineString} GeoJSONLineString\n * @typedef {import(\"geojson\").Polygon} GeoJSONPolygon\n * @typedef {import(\"geojson\").MultiPoint} GeoJSONMultiPoint\n * @typedef {import(\"geojson\").MultiLineString} GeoJSONMultiLineString\n * @typedef {import(\"geojson\").MultiPolygon} GeoJSONMultiPolygon\n * @typedef {import(\"geojson\").GeometryCollection} GeoJSONGeometryCollection\n */\n/**\n * @typedef {Object} Options\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection='EPSG:4326'] Default data projection.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection for features read or\n * written by the format.  Options passed to read or write methods will take precedence.\n * @property {string} [geometryName] Geometry name to use when creating features.\n * @property {boolean} [extractGeometryName=false] Certain GeoJSON providers include\n * the geometry_name field in the feature GeoJSON. If set to `true` the GeoJSON reader\n * will look for that field to set the geometry name. If both this field is set to `true`\n * and a `geometryName` is provided, the `geometryName` will take precedence.\n */\n/**\n * @classdesc\n * Feature format for reading and writing data in the GeoJSON format.\n *\n  * @api\n */\nvar GeoJSON = /** @class */ (function (_super) {\n    __extends(GeoJSON, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function GeoJSON(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this) || this;\n        /**\n         * @inheritDoc\n         */\n        _this.dataProjection = getProjection(options.dataProjection ?\n            options.dataProjection : 'EPSG:4326');\n        if (options.featureProjection) {\n            _this.defaultFeatureProjection = getProjection(options.featureProjection);\n        }\n        /**\n         * Name of the geometry attribute for features.\n         * @type {string|undefined}\n         * @private\n         */\n        _this.geometryName_ = options.geometryName;\n        /**\n         * Look for the geometry name in the feature GeoJSON\n         * @type {boolean|undefined}\n         * @private\n         */\n        _this.extractGeometryName_ = options.extractGeometryName;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    GeoJSON.prototype.readFeatureFromObject = function (object, opt_options) {\n        /**\n         * @type {GeoJSONFeature}\n         */\n        var geoJSONFeature = null;\n        if (object['type'] === 'Feature') {\n            geoJSONFeature = /** @type {GeoJSONFeature} */ (object);\n        }\n        else {\n            geoJSONFeature = {\n                'type': 'Feature',\n                'geometry': /** @type {GeoJSONGeometry} */ (object),\n                'properties': null\n            };\n        }\n        var geometry = readGeometry(geoJSONFeature['geometry'], opt_options);\n        var feature = new Feature();\n        if (this.geometryName_) {\n            feature.setGeometryName(this.geometryName_);\n        }\n        else if (this.extractGeometryName_ && 'geometry_name' in geoJSONFeature !== undefined) {\n            feature.setGeometryName(geoJSONFeature['geometry_name']);\n        }\n        feature.setGeometry(geometry);\n        if ('id' in geoJSONFeature) {\n            feature.setId(geoJSONFeature['id']);\n        }\n        if (geoJSONFeature['properties']) {\n            feature.setProperties(geoJSONFeature['properties'], true);\n        }\n        return feature;\n    };\n    /**\n     * @inheritDoc\n     */\n    GeoJSON.prototype.readFeaturesFromObject = function (object, opt_options) {\n        var geoJSONObject = /** @type {GeoJSONObject} */ (object);\n        /** @type {Array<import(\"../Feature.js\").default>} */\n        var features = null;\n        if (geoJSONObject['type'] === 'FeatureCollection') {\n            var geoJSONFeatureCollection = /** @type {GeoJSONFeatureCollection} */ (object);\n            features = [];\n            var geoJSONFeatures = geoJSONFeatureCollection['features'];\n            for (var i = 0, ii = geoJSONFeatures.length; i < ii; ++i) {\n                features.push(this.readFeatureFromObject(geoJSONFeatures[i], opt_options));\n            }\n        }\n        else {\n            features = [this.readFeatureFromObject(object, opt_options)];\n        }\n        return features;\n    };\n    /**\n     * @inheritDoc\n     */\n    GeoJSON.prototype.readGeometryFromObject = function (object, opt_options) {\n        return readGeometry(/** @type {GeoJSONGeometry} */ (object), opt_options);\n    };\n    /**\n     * @inheritDoc\n     */\n    GeoJSON.prototype.readProjectionFromObject = function (object) {\n        var crs = object['crs'];\n        var projection;\n        if (crs) {\n            if (crs['type'] == 'name') {\n                projection = getProjection(crs['properties']['name']);\n            }\n            else {\n                assert(false, 36); // Unknown SRS type\n            }\n        }\n        else {\n            projection = this.dataProjection;\n        }\n        return (\n        /** @type {import(\"../proj/Projection.js\").default} */ (projection));\n    };\n    /**\n     * Encode a feature as a GeoJSON Feature object.\n     *\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n     * @return {GeoJSONFeature} Object.\n     * @override\n     * @api\n     */\n    GeoJSON.prototype.writeFeatureObject = function (feature, opt_options) {\n        opt_options = this.adaptOptions(opt_options);\n        /** @type {GeoJSONFeature} */\n        var object = {\n            'type': 'Feature',\n            geometry: null,\n            properties: null\n        };\n        var id = feature.getId();\n        if (id !== undefined) {\n            object.id = id;\n        }\n        var geometry = feature.getGeometry();\n        if (geometry) {\n            object.geometry = writeGeometry(geometry, opt_options);\n        }\n        var properties = feature.getProperties();\n        delete properties[feature.getGeometryName()];\n        if (!isEmpty(properties)) {\n            object.properties = properties;\n        }\n        return object;\n    };\n    /**\n     * Encode an array of features as a GeoJSON object.\n     *\n     * @param {Array<import(\"../Feature.js\").default>} features Features.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n     * @return {GeoJSONFeatureCollection} GeoJSON Object.\n     * @override\n     * @api\n     */\n    GeoJSON.prototype.writeFeaturesObject = function (features, opt_options) {\n        opt_options = this.adaptOptions(opt_options);\n        var objects = [];\n        for (var i = 0, ii = features.length; i < ii; ++i) {\n            objects.push(this.writeFeatureObject(features[i], opt_options));\n        }\n        return {\n            type: 'FeatureCollection',\n            features: objects\n        };\n    };\n    /**\n     * Encode a geometry as a GeoJSON object.\n     *\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n     * @return {GeoJSONGeometry|GeoJSONGeometryCollection} Object.\n     * @override\n     * @api\n     */\n    GeoJSON.prototype.writeGeometryObject = function (geometry, opt_options) {\n        return writeGeometry(geometry, this.adaptOptions(opt_options));\n    };\n    return GeoJSON;\n}(JSONFeature));\n/**\n * @param {GeoJSONGeometry|GeoJSONGeometryCollection} object Object.\n * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n * @return {import(\"../geom/Geometry.js\").default} Geometry.\n */\nfunction readGeometry(object, opt_options) {\n    if (!object) {\n        return null;\n    }\n    /**\n     * @type {import(\"../geom/Geometry.js\").default}\n     */\n    var geometry;\n    switch (object['type']) {\n        case GeometryType.POINT: {\n            geometry = readPointGeometry(/** @type {GeoJSONPoint} */ (object));\n            break;\n        }\n        case GeometryType.LINE_STRING: {\n            geometry = readLineStringGeometry(/** @type {GeoJSONLineString} */ (object));\n            break;\n        }\n        case GeometryType.POLYGON: {\n            geometry = readPolygonGeometry(/** @type {GeoJSONPolygon} */ (object));\n            break;\n        }\n        case GeometryType.MULTI_POINT: {\n            geometry = readMultiPointGeometry(/** @type {GeoJSONMultiPoint} */ (object));\n            break;\n        }\n        case GeometryType.MULTI_LINE_STRING: {\n            geometry = readMultiLineStringGeometry(/** @type {GeoJSONMultiLineString} */ (object));\n            break;\n        }\n        case GeometryType.MULTI_POLYGON: {\n            geometry = readMultiPolygonGeometry(/** @type {GeoJSONMultiPolygon} */ (object));\n            break;\n        }\n        case GeometryType.GEOMETRY_COLLECTION: {\n            geometry = readGeometryCollectionGeometry(/** @type {GeoJSONGeometryCollection} */ (object));\n            break;\n        }\n        default: {\n            throw new Error('Unsupported GeoJSON type: ' + object.type);\n        }\n    }\n    return transformGeometryWithOptions(geometry, false, opt_options);\n}\n/**\n * @param {GeoJSONGeometryCollection} object Object.\n * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n * @return {GeometryCollection} Geometry collection.\n */\nfunction readGeometryCollectionGeometry(object, opt_options) {\n    var geometries = object['geometries'].map(\n    /**\n     * @param {GeoJSONGeometry} geometry Geometry.\n     * @return {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     */\n    function (geometry) {\n        return readGeometry(geometry, opt_options);\n    });\n    return new GeometryCollection(geometries);\n}\n/**\n * @param {GeoJSONPoint} object Object.\n * @return {Point} Point.\n */\nfunction readPointGeometry(object) {\n    return new Point(object['coordinates']);\n}\n/**\n * @param {GeoJSONLineString} object Object.\n * @return {LineString} LineString.\n */\nfunction readLineStringGeometry(object) {\n    return new LineString(object['coordinates']);\n}\n/**\n * @param {GeoJSONMultiLineString} object Object.\n * @return {MultiLineString} MultiLineString.\n */\nfunction readMultiLineStringGeometry(object) {\n    return new MultiLineString(object['coordinates']);\n}\n/**\n * @param {GeoJSONMultiPoint} object Object.\n * @return {MultiPoint} MultiPoint.\n */\nfunction readMultiPointGeometry(object) {\n    return new MultiPoint(object['coordinates']);\n}\n/**\n * @param {GeoJSONMultiPolygon} object Object.\n * @return {MultiPolygon} MultiPolygon.\n */\nfunction readMultiPolygonGeometry(object) {\n    return new MultiPolygon(object['coordinates']);\n}\n/**\n * @param {GeoJSONPolygon} object Object.\n * @return {Polygon} Polygon.\n */\nfunction readPolygonGeometry(object) {\n    return new Polygon(object['coordinates']);\n}\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeGeometry(geometry, opt_options) {\n    geometry = transformGeometryWithOptions(geometry, true, opt_options);\n    var type = geometry.getType();\n    /** @type {GeoJSONGeometry} */\n    var geoJSON;\n    switch (type) {\n        case GeometryType.POINT: {\n            geoJSON = writePointGeometry(/** @type {Point} */ (geometry), opt_options);\n            break;\n        }\n        case GeometryType.LINE_STRING: {\n            geoJSON = writeLineStringGeometry(/** @type {LineString} */ (geometry), opt_options);\n            break;\n        }\n        case GeometryType.POLYGON: {\n            geoJSON = writePolygonGeometry(/** @type {Polygon} */ (geometry), opt_options);\n            break;\n        }\n        case GeometryType.MULTI_POINT: {\n            geoJSON = writeMultiPointGeometry(/** @type {MultiPoint} */ (geometry), opt_options);\n            break;\n        }\n        case GeometryType.MULTI_LINE_STRING: {\n            geoJSON = writeMultiLineStringGeometry(/** @type {MultiLineString} */ (geometry), opt_options);\n            break;\n        }\n        case GeometryType.MULTI_POLYGON: {\n            geoJSON = writeMultiPolygonGeometry(/** @type {MultiPolygon} */ (geometry), opt_options);\n            break;\n        }\n        case GeometryType.GEOMETRY_COLLECTION: {\n            geoJSON = writeGeometryCollectionGeometry(/** @type {GeometryCollection} */ (geometry), opt_options);\n            break;\n        }\n        case GeometryType.CIRCLE: {\n            geoJSON = {\n                type: 'GeometryCollection',\n                geometries: []\n            };\n            break;\n        }\n        default: {\n            throw new Error('Unsupported geometry type: ' + type);\n        }\n    }\n    return geoJSON;\n}\n/**\n * @param {GeometryCollection} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometryCollection} GeoJSON geometry collection.\n */\nfunction writeGeometryCollectionGeometry(geometry, opt_options) {\n    var geometries = geometry.getGeometriesArray().map(function (geometry) {\n        var options = assign({}, opt_options);\n        delete options.featureProjection;\n        return writeGeometry(geometry, options);\n    });\n    return {\n        type: 'GeometryCollection',\n        geometries: geometries\n    };\n}\n/**\n * @param {LineString} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeLineStringGeometry(geometry, opt_options) {\n    return {\n        type: 'LineString',\n        coordinates: geometry.getCoordinates()\n    };\n}\n/**\n * @param {MultiLineString} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiLineStringGeometry(geometry, opt_options) {\n    return {\n        type: 'MultiLineString',\n        coordinates: geometry.getCoordinates()\n    };\n}\n/**\n * @param {MultiPoint} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiPointGeometry(geometry, opt_options) {\n    return {\n        type: 'MultiPoint',\n        coordinates: geometry.getCoordinates()\n    };\n}\n/**\n * @param {MultiPolygon} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiPolygonGeometry(geometry, opt_options) {\n    var right;\n    if (opt_options) {\n        right = opt_options.rightHanded;\n    }\n    return {\n        type: 'MultiPolygon',\n        coordinates: geometry.getCoordinates(right)\n    };\n}\n/**\n * @param {Point} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writePointGeometry(geometry, opt_options) {\n    return {\n        type: 'Point',\n        coordinates: geometry.getCoordinates()\n    };\n}\n/**\n * @param {Polygon} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writePolygonGeometry(geometry, opt_options) {\n    var right;\n    if (opt_options) {\n        right = opt_options.rightHanded;\n    }\n    return {\n        type: 'Polygon',\n        coordinates: geometry.getCoordinates(right)\n    };\n}\nexport default GeoJSON;\n//# sourceMappingURL=GeoJSON.js.map","/**\n * @module ol/CollectionEventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    /**\n     * Triggered when an item is added to the collection.\n     * @event module:ol/Collection.CollectionEvent#add\n     * @api\n     */\n    ADD: 'add',\n    /**\n     * Triggered when an item is removed from the collection.\n     * @event module:ol/Collection.CollectionEvent#remove\n     * @api\n     */\n    REMOVE: 'remove'\n};\n//# sourceMappingURL=CollectionEventType.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Collection\n */\nimport AssertionError from './AssertionError.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport BaseObject from './Object.js';\nimport Event from './events/Event.js';\n/**\n * @enum {string}\n * @private\n */\nvar Property = {\n    LENGTH: 'length'\n};\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n */\nvar CollectionEvent = /** @class */ (function (_super) {\n    __extends(CollectionEvent, _super);\n    /**\n     * @param {CollectionEventType} type Type.\n     * @param {*=} opt_element Element.\n     * @param {number} opt_index The index of the added or removed element.\n     */\n    function CollectionEvent(type, opt_element, opt_index) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The element that is added to or removed from the collection.\n         * @type {*}\n         * @api\n         */\n        _this.element = opt_element;\n        /**\n         * The index of the added or removed element.\n         * @type {number}\n         * @api\n         */\n        _this.index = opt_index;\n        return _this;\n    }\n    return CollectionEvent;\n}(Event));\nexport { CollectionEvent };\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @fires CollectionEvent\n *\n * @template T\n * @api\n */\nvar Collection = /** @class */ (function (_super) {\n    __extends(Collection, _super);\n    /**\n     * @param {Array<T>=} opt_array Array.\n     * @param {Options=} opt_options Collection options.\n     */\n    function Collection(opt_array, opt_options) {\n        var _this = _super.call(this) || this;\n        var options = opt_options || {};\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.unique_ = !!options.unique;\n        /**\n         * @private\n         * @type {!Array<T>}\n         */\n        _this.array_ = opt_array ? opt_array : [];\n        if (_this.unique_) {\n            for (var i = 0, ii = _this.array_.length; i < ii; ++i) {\n                _this.assertUnique_(_this.array_[i], i);\n            }\n        }\n        _this.updateLength_();\n        return _this;\n    }\n    /**\n     * Remove all elements from the collection.\n     * @api\n     */\n    Collection.prototype.clear = function () {\n        while (this.getLength() > 0) {\n            this.pop();\n        }\n    };\n    /**\n     * Add elements to the collection.  This pushes each item in the provided array\n     * to the end of the collection.\n     * @param {!Array<T>} arr Array.\n     * @return {Collection<T>} This collection.\n     * @api\n     */\n    Collection.prototype.extend = function (arr) {\n        for (var i = 0, ii = arr.length; i < ii; ++i) {\n            this.push(arr[i]);\n        }\n        return this;\n    };\n    /**\n     * Iterate over each element, calling the provided callback.\n     * @param {function(T, number, Array<T>): *} f The function to call\n     *     for every element. This function takes 3 arguments (the element, the\n     *     index and the array). The return value is ignored.\n     * @api\n     */\n    Collection.prototype.forEach = function (f) {\n        var array = this.array_;\n        for (var i = 0, ii = array.length; i < ii; ++i) {\n            f(array[i], i, array);\n        }\n    };\n    /**\n     * Get a reference to the underlying Array object. Warning: if the array\n     * is mutated, no events will be dispatched by the collection, and the\n     * collection's \"length\" property won't be in sync with the actual length\n     * of the array.\n     * @return {!Array<T>} Array.\n     * @api\n     */\n    Collection.prototype.getArray = function () {\n        return this.array_;\n    };\n    /**\n     * Get the element at the provided index.\n     * @param {number} index Index.\n     * @return {T} Element.\n     * @api\n     */\n    Collection.prototype.item = function (index) {\n        return this.array_[index];\n    };\n    /**\n     * Get the length of this collection.\n     * @return {number} The length of the array.\n     * @observable\n     * @api\n     */\n    Collection.prototype.getLength = function () {\n        return this.get(Property.LENGTH);\n    };\n    /**\n     * Insert an element at the provided index.\n     * @param {number} index Index.\n     * @param {T} elem Element.\n     * @api\n     */\n    Collection.prototype.insertAt = function (index, elem) {\n        if (this.unique_) {\n            this.assertUnique_(elem);\n        }\n        this.array_.splice(index, 0, elem);\n        this.updateLength_();\n        this.dispatchEvent(new CollectionEvent(CollectionEventType.ADD, elem, index));\n    };\n    /**\n     * Remove the last element of the collection and return it.\n     * Return `undefined` if the collection is empty.\n     * @return {T|undefined} Element.\n     * @api\n     */\n    Collection.prototype.pop = function () {\n        return this.removeAt(this.getLength() - 1);\n    };\n    /**\n     * Insert the provided element at the end of the collection.\n     * @param {T} elem Element.\n     * @return {number} New length of the collection.\n     * @api\n     */\n    Collection.prototype.push = function (elem) {\n        if (this.unique_) {\n            this.assertUnique_(elem);\n        }\n        var n = this.getLength();\n        this.insertAt(n, elem);\n        return this.getLength();\n    };\n    /**\n     * Remove the first occurrence of an element from the collection.\n     * @param {T} elem Element.\n     * @return {T|undefined} The removed element or undefined if none found.\n     * @api\n     */\n    Collection.prototype.remove = function (elem) {\n        var arr = this.array_;\n        for (var i = 0, ii = arr.length; i < ii; ++i) {\n            if (arr[i] === elem) {\n                return this.removeAt(i);\n            }\n        }\n        return undefined;\n    };\n    /**\n     * Remove the element at the provided index and return it.\n     * Return `undefined` if the collection does not contain this index.\n     * @param {number} index Index.\n     * @return {T|undefined} Value.\n     * @api\n     */\n    Collection.prototype.removeAt = function (index) {\n        var prev = this.array_[index];\n        this.array_.splice(index, 1);\n        this.updateLength_();\n        this.dispatchEvent(new CollectionEvent(CollectionEventType.REMOVE, prev, index));\n        return prev;\n    };\n    /**\n     * Set the element at the provided index.\n     * @param {number} index Index.\n     * @param {T} elem Element.\n     * @api\n     */\n    Collection.prototype.setAt = function (index, elem) {\n        var n = this.getLength();\n        if (index < n) {\n            if (this.unique_) {\n                this.assertUnique_(elem, index);\n            }\n            var prev = this.array_[index];\n            this.array_[index] = elem;\n            this.dispatchEvent(new CollectionEvent(CollectionEventType.REMOVE, prev, index));\n            this.dispatchEvent(new CollectionEvent(CollectionEventType.ADD, elem, index));\n        }\n        else {\n            for (var j = n; j < index; ++j) {\n                this.insertAt(j, undefined);\n            }\n            this.insertAt(index, elem);\n        }\n    };\n    /**\n     * @private\n     */\n    Collection.prototype.updateLength_ = function () {\n        this.set(Property.LENGTH, this.array_.length);\n    };\n    /**\n     * @private\n     * @param {T} elem Element.\n     * @param {number=} opt_except Optional index to ignore.\n     */\n    Collection.prototype.assertUnique_ = function (elem, opt_except) {\n        for (var i = 0, ii = this.array_.length; i < ii; ++i) {\n            if (this.array_[i] === elem && i !== opt_except) {\n                throw new AssertionError(58);\n            }\n        }\n    };\n    return Collection;\n}(BaseObject));\nexport default Collection;\n//# sourceMappingURL=Collection.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/MapEvent\n */\nimport Event from './events/Event.js';\n/**\n * @classdesc\n * Events emitted as map events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map event.\n */\nvar MapEvent = /** @class */ (function (_super) {\n    __extends(MapEvent, _super);\n    /**\n     * @param {string} type Event type.\n     * @param {import(\"./PluggableMap.js\").default} map Map.\n     * @param {?import(\"./PluggableMap.js\").FrameState=} opt_frameState Frame state.\n     */\n    function MapEvent(type, map, opt_frameState) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The map where the event occurred.\n         * @type {import(\"./PluggableMap.js\").default}\n         * @api\n         */\n        _this.map = map;\n        /**\n         * The frame state at the time of the event.\n         * @type {?import(\"./PluggableMap.js\").FrameState}\n         * @api\n         */\n        _this.frameState = opt_frameState !== undefined ? opt_frameState : null;\n        return _this;\n    }\n    return MapEvent;\n}(Event));\nexport default MapEvent;\n//# sourceMappingURL=MapEvent.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/MapBrowserEvent\n */\nimport MapEvent from './MapEvent.js';\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map browser event.\n */\nvar MapBrowserEvent = /** @class */ (function (_super) {\n    __extends(MapBrowserEvent, _super);\n    /**\n     * @param {string} type Event type.\n     * @param {import(\"./PluggableMap.js\").default} map Map.\n     * @param {Event} browserEvent Browser event.\n     * @param {boolean=} opt_dragging Is the map currently being dragged?\n     * @param {?import(\"./PluggableMap.js\").FrameState=} opt_frameState Frame state.\n     */\n    function MapBrowserEvent(type, map, browserEvent, opt_dragging, opt_frameState) {\n        var _this = _super.call(this, type, map, opt_frameState) || this;\n        /**\n         * The original browser event.\n         * @const\n         * @type {Event}\n         * @api\n         */\n        _this.originalEvent = browserEvent;\n        /**\n         * The map pixel relative to the viewport corresponding to the original browser event.\n         * @type {import(\"./pixel.js\").Pixel}\n         * @api\n         */\n        _this.pixel = map.getEventPixel(browserEvent);\n        /**\n         * The coordinate in view projection corresponding to the original browser event.\n         * @type {import(\"./coordinate.js\").Coordinate}\n         * @api\n         */\n        _this.coordinate = map.getCoordinateFromPixel(_this.pixel);\n        /**\n         * Indicates if the map is currently being dragged. Only set for\n         * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n         *\n         * @type {boolean}\n         * @api\n         */\n        _this.dragging = opt_dragging !== undefined ? opt_dragging : false;\n        return _this;\n    }\n    /**\n     * Prevents the default browser action.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\n     * @override\n     * @api\n     */\n    MapBrowserEvent.prototype.preventDefault = function () {\n        _super.prototype.preventDefault.call(this);\n        this.originalEvent.preventDefault();\n    };\n    /**\n     * Prevents further propagation of the current event.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\n     * @override\n     * @api\n     */\n    MapBrowserEvent.prototype.stopPropagation = function () {\n        _super.prototype.stopPropagation.call(this);\n        this.originalEvent.stopPropagation();\n    };\n    return MapBrowserEvent;\n}(MapEvent));\nexport default MapBrowserEvent;\n//# sourceMappingURL=MapBrowserEvent.js.map","/**\n * @module ol/has\n */\nvar ua = typeof navigator !== 'undefined' ?\n    navigator.userAgent.toLowerCase() : '';\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport var FIREFOX = ua.indexOf('firefox') !== -1;\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport var SAFARI = ua.indexOf('safari') !== -1 && ua.indexOf('chrom') == -1;\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport var WEBKIT = ua.indexOf('webkit') !== -1 && ua.indexOf('edge') == -1;\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport var MAC = ua.indexOf('macintosh') !== -1;\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport var DEVICE_PIXEL_RATIO = window.devicePixelRatio || 1;\n/**\n * Is HTML5 geolocation supported in the current browser?\n * @const\n * @type {boolean}\n * @api\n */\nexport var GEOLOCATION = 'geolocation' in navigator;\n/**\n * True if browser supports touch events.\n * @const\n * @type {boolean}\n * @api\n */\nexport var TOUCH = 'ontouchstart' in window;\n/**\n * True if browser supports pointer events.\n * @const\n * @type {boolean}\n */\nexport var POINTER = 'PointerEvent' in window;\n/**\n * True if browser supports ms pointer events (IE 10).\n * @const\n * @type {boolean}\n */\nexport var MSPOINTER = !!(navigator.msPointerEnabled);\nexport { HAS as WEBGL } from './webgl.js';\n//# sourceMappingURL=has.js.map","/**\n * @module ol/MapBrowserEventType\n */\nimport EventType from './events/EventType.js';\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n    /**\n     * A true single click with no dragging and no double click. Note that this\n     * event is delayed by 250 ms to ensure that it is not a double click.\n     * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\n     * @api\n     */\n    SINGLECLICK: 'singleclick',\n    /**\n     * A click with no dragging. A double click will fire two of this.\n     * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\n     * @api\n     */\n    CLICK: EventType.CLICK,\n    /**\n     * A true double click, with no dragging.\n     * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\n     * @api\n     */\n    DBLCLICK: EventType.DBLCLICK,\n    /**\n     * Triggered when a pointer is dragged.\n     * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\n     * @api\n     */\n    POINTERDRAG: 'pointerdrag',\n    /**\n     * Triggered when a pointer is moved. Note that on touch devices this is\n     * triggered when the map is panned, so is not the same as mousemove.\n     * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\n     * @api\n     */\n    POINTERMOVE: 'pointermove',\n    POINTERDOWN: 'pointerdown',\n    POINTERUP: 'pointerup',\n    POINTEROVER: 'pointerover',\n    POINTEROUT: 'pointerout',\n    POINTERENTER: 'pointerenter',\n    POINTERLEAVE: 'pointerleave',\n    POINTERCANCEL: 'pointercancel'\n};\n//# sourceMappingURL=MapBrowserEventType.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/MapBrowserPointerEvent\n */\nimport MapBrowserEvent from './MapBrowserEvent.js';\nvar MapBrowserPointerEvent = /** @class */ (function (_super) {\n    __extends(MapBrowserPointerEvent, _super);\n    /**\n     * @param {string} type Event type.\n     * @param {import(\"./PluggableMap.js\").default} map Map.\n     * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer event.\n     * @param {boolean=} opt_dragging Is the map currently being dragged?\n     * @param {?import(\"./PluggableMap.js\").FrameState=} opt_frameState Frame state.\n     */\n    function MapBrowserPointerEvent(type, map, pointerEvent, opt_dragging, opt_frameState) {\n        var _this = _super.call(this, type, map, pointerEvent.originalEvent, opt_dragging, opt_frameState) || this;\n        /**\n         * @const\n         * @type {import(\"./pointer/PointerEvent.js\").default}\n         */\n        _this.pointerEvent = pointerEvent;\n        return _this;\n    }\n    return MapBrowserPointerEvent;\n}(MapBrowserEvent));\nexport default MapBrowserPointerEvent;\n//# sourceMappingURL=MapBrowserPointerEvent.js.map","/**\n * @module ol/pointer/EventType\n */\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n    POINTERMOVE: 'pointermove',\n    POINTERDOWN: 'pointerdown',\n    POINTERUP: 'pointerup',\n    POINTEROVER: 'pointerover',\n    POINTEROUT: 'pointerout',\n    POINTERENTER: 'pointerenter',\n    POINTERLEAVE: 'pointerleave',\n    POINTERCANCEL: 'pointercancel'\n};\n//# sourceMappingURL=EventType.js.map","/**\n * @module ol/pointer/EventSource\n */\nvar EventSource = /** @class */ (function () {\n    /**\n     * @param {import(\"./PointerEventHandler.js\").default} dispatcher Event handler.\n     * @param {!Object<string, function(Event): void>} mapping Event mapping.\n     */\n    function EventSource(dispatcher, mapping) {\n        /**\n         * @type {import(\"./PointerEventHandler.js\").default}\n         */\n        this.dispatcher = dispatcher;\n        /**\n         * @private\n         * @const\n         * @type {!Object<string, function(Event): void>}\n         */\n        this.mapping_ = mapping;\n    }\n    /**\n     * List of events supported by this source.\n     * @return {Array<string>} Event names\n     */\n    EventSource.prototype.getEvents = function () {\n        return Object.keys(this.mapping_);\n    };\n    /**\n     * Returns the handler that should handle a given event type.\n     * @param {string} eventType The event type.\n     * @return {function(Event)} Handler\n     */\n    EventSource.prototype.getHandlerForEvent = function (eventType) {\n        return this.mapping_[eventType];\n    };\n    return EventSource;\n}());\nexport default EventSource;\n//# sourceMappingURL=EventSource.js.map","/**\n * @module ol/pointer/MouseSource\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n// Based on https://github.com/Polymer/PointerEvents\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\nimport EventSource from './EventSource.js';\n/**\n * @type {number}\n */\nexport var POINTER_ID = 1;\n/**\n * @type {string}\n */\nexport var POINTER_TYPE = 'mouse';\n/**\n * Radius around touchend that swallows mouse events.\n *\n * @type {number}\n */\nvar DEDUP_DIST = 25;\n/**\n * Handler for `mousedown`.\n *\n * @this {MouseSource}\n * @param {MouseEvent} inEvent The in event.\n */\nfunction mousedown(inEvent) {\n    if (!this.isEventSimulatedFromTouch_(inEvent)) {\n        // TODO(dfreedman) workaround for some elements not sending mouseup\n        // http://crbug/149091\n        if (POINTER_ID.toString() in this.pointerMap) {\n            this.cancel(inEvent);\n        }\n        var e = prepareEvent(inEvent, this.dispatcher);\n        this.pointerMap[POINTER_ID.toString()] = inEvent;\n        this.dispatcher.down(e, inEvent);\n    }\n}\n/**\n * Handler for `mousemove`.\n *\n * @this {MouseSource}\n * @param {MouseEvent} inEvent The in event.\n */\nfunction mousemove(inEvent) {\n    if (!this.isEventSimulatedFromTouch_(inEvent)) {\n        var e = prepareEvent(inEvent, this.dispatcher);\n        this.dispatcher.move(e, inEvent);\n    }\n}\n/**\n * Handler for `mouseup`.\n *\n * @this {MouseSource}\n * @param {MouseEvent} inEvent The in event.\n */\nfunction mouseup(inEvent) {\n    if (!this.isEventSimulatedFromTouch_(inEvent)) {\n        var p = this.pointerMap[POINTER_ID.toString()];\n        if (p && p.button === inEvent.button) {\n            var e = prepareEvent(inEvent, this.dispatcher);\n            this.dispatcher.up(e, inEvent);\n            this.cleanupMouse();\n        }\n    }\n}\n/**\n * Handler for `mouseover`.\n *\n * @this {MouseSource}\n * @param {MouseEvent} inEvent The in event.\n */\nfunction mouseover(inEvent) {\n    if (!this.isEventSimulatedFromTouch_(inEvent)) {\n        var e = prepareEvent(inEvent, this.dispatcher);\n        this.dispatcher.enterOver(e, inEvent);\n    }\n}\n/**\n * Handler for `mouseout`.\n *\n * @this {MouseSource}\n * @param {MouseEvent} inEvent The in event.\n */\nfunction mouseout(inEvent) {\n    if (!this.isEventSimulatedFromTouch_(inEvent)) {\n        var e = prepareEvent(inEvent, this.dispatcher);\n        this.dispatcher.leaveOut(e, inEvent);\n    }\n}\nvar MouseSource = /** @class */ (function (_super) {\n    __extends(MouseSource, _super);\n    /**\n     * @param {import(\"./PointerEventHandler.js\").default} dispatcher Event handler.\n     */\n    function MouseSource(dispatcher) {\n        var _this = this;\n        var mapping = {\n            'mousedown': mousedown,\n            'mousemove': mousemove,\n            'mouseup': mouseup,\n            'mouseover': mouseover,\n            'mouseout': mouseout\n        };\n        _this = _super.call(this, dispatcher, mapping) || this;\n        /**\n         * @const\n         * @type {!Object<string, Event|Object>}\n         */\n        _this.pointerMap = dispatcher.pointerMap;\n        /**\n         * @const\n         * @type {Array<import(\"../pixel.js\").Pixel>}\n         */\n        _this.lastTouches = [];\n        return _this;\n    }\n    /**\n     * Detect if a mouse event was simulated from a touch by\n     * checking if previously there was a touch event at the\n     * same position.\n     *\n     * FIXME - Known problem with the native Android browser on\n     * Samsung GT-I9100 (Android 4.1.2):\n     * In case the page is scrolled, this function does not work\n     * correctly when a canvas is used (WebGL or canvas renderer).\n     * Mouse listeners on canvas elements (for this browser), create\n     * two mouse events: One 'good' and one 'bad' one (on other browsers or\n     * when a div is used, there is only one event). For the 'bad' one,\n     * clientX/clientY and also pageX/pageY are wrong when the page\n     * is scrolled. Because of that, this function can not detect if\n     * the events were simulated from a touch event. As result, a\n     * pointer event at a wrong position is dispatched, which confuses\n     * the map interactions.\n     * It is unclear, how one can get the correct position for the event\n     * or detect that the positions are invalid.\n     *\n     * @private\n     * @param {MouseEvent} inEvent The in event.\n     * @return {boolean} True, if the event was generated by a touch.\n     */\n    MouseSource.prototype.isEventSimulatedFromTouch_ = function (inEvent) {\n        var lts = this.lastTouches;\n        var x = inEvent.clientX;\n        var y = inEvent.clientY;\n        for (var i = 0, l = lts.length, t = void 0; i < l && (t = lts[i]); i++) {\n            // simulated mouse events will be swallowed near a primary touchend\n            var dx = Math.abs(x - t[0]);\n            var dy = Math.abs(y - t[1]);\n            if (dx <= DEDUP_DIST && dy <= DEDUP_DIST) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * Dispatches a `pointercancel` event.\n     *\n     * @param {Event} inEvent The in event.\n     */\n    MouseSource.prototype.cancel = function (inEvent) {\n        var e = prepareEvent(inEvent, this.dispatcher);\n        this.dispatcher.cancel(e, inEvent);\n        this.cleanupMouse();\n    };\n    /**\n     * Remove the mouse from the list of active pointers.\n     */\n    MouseSource.prototype.cleanupMouse = function () {\n        delete this.pointerMap[POINTER_ID.toString()];\n    };\n    return MouseSource;\n}(EventSource));\n/**\n * Creates a copy of the original event that will be used\n * for the fake pointer event.\n *\n * @param {Event} inEvent The in event.\n * @param {import(\"./PointerEventHandler.js\").default} dispatcher Event handler.\n * @return {Object} The copied event.\n */\nexport function prepareEvent(inEvent, dispatcher) {\n    var e = dispatcher.cloneEvent(inEvent, inEvent);\n    // forward mouse preventDefault\n    var pd = e.preventDefault;\n    e.preventDefault = function () {\n        inEvent.preventDefault();\n        pd();\n    };\n    e.pointerId = POINTER_ID;\n    e.isPrimary = true;\n    e.pointerType = POINTER_TYPE;\n    return e;\n}\nexport default MouseSource;\n//# sourceMappingURL=MouseSource.js.map","/**\n * @module ol/pointer/MsSource\n */\n// Based on https://github.com/Polymer/PointerEvents\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\nimport EventSource from './EventSource.js';\n/**\n * @const\n * @type {Array<string>}\n */\nvar POINTER_TYPES = [\n    '',\n    'unavailable',\n    'touch',\n    'pen',\n    'mouse'\n];\n/**\n * Handler for `msPointerDown`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerDown(inEvent) {\n    this.pointerMap[inEvent.pointerId.toString()] = inEvent;\n    var e = this.prepareEvent_(inEvent);\n    this.dispatcher.down(e, inEvent);\n}\n/**\n * Handler for `msPointerMove`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerMove(inEvent) {\n    var e = this.prepareEvent_(inEvent);\n    this.dispatcher.move(e, inEvent);\n}\n/**\n * Handler for `msPointerUp`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerUp(inEvent) {\n    var e = this.prepareEvent_(inEvent);\n    this.dispatcher.up(e, inEvent);\n    this.cleanup(inEvent.pointerId);\n}\n/**\n * Handler for `msPointerOut`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerOut(inEvent) {\n    var e = this.prepareEvent_(inEvent);\n    this.dispatcher.leaveOut(e, inEvent);\n}\n/**\n * Handler for `msPointerOver`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerOver(inEvent) {\n    var e = this.prepareEvent_(inEvent);\n    this.dispatcher.enterOver(e, inEvent);\n}\n/**\n * Handler for `msPointerCancel`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerCancel(inEvent) {\n    var e = this.prepareEvent_(inEvent);\n    this.dispatcher.cancel(e, inEvent);\n    this.cleanup(inEvent.pointerId);\n}\n/**\n * Handler for `msLostPointerCapture`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msLostPointerCapture(inEvent) {\n    var e = this.dispatcher.makeEvent('lostpointercapture', inEvent, inEvent);\n    this.dispatcher.dispatchEvent(e);\n}\n/**\n * Handler for `msGotPointerCapture`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msGotPointerCapture(inEvent) {\n    var e = this.dispatcher.makeEvent('gotpointercapture', inEvent, inEvent);\n    this.dispatcher.dispatchEvent(e);\n}\nvar MsSource = /** @class */ (function (_super) {\n    __extends(MsSource, _super);\n    /**\n     * @param {import(\"./PointerEventHandler.js\").default} dispatcher Event handler.\n     */\n    function MsSource(dispatcher) {\n        var _this = this;\n        var mapping = {\n            'MSPointerDown': msPointerDown,\n            'MSPointerMove': msPointerMove,\n            'MSPointerUp': msPointerUp,\n            'MSPointerOut': msPointerOut,\n            'MSPointerOver': msPointerOver,\n            'MSPointerCancel': msPointerCancel,\n            'MSGotPointerCapture': msGotPointerCapture,\n            'MSLostPointerCapture': msLostPointerCapture\n        };\n        _this = _super.call(this, dispatcher, mapping) || this;\n        /**\n         * @const\n         * @type {!Object<string, MSPointerEvent|Object>}\n         */\n        _this.pointerMap = dispatcher.pointerMap;\n        return _this;\n    }\n    /**\n     * Creates a copy of the original event that will be used\n     * for the fake pointer event.\n     *\n     * @private\n     * @param {MSPointerEvent} inEvent The in event.\n     * @return {Object} The copied event.\n     */\n    MsSource.prototype.prepareEvent_ = function (inEvent) {\n        /** @type {MSPointerEvent|Object} */\n        var e = inEvent;\n        if (typeof inEvent.pointerType === 'number') {\n            e = this.dispatcher.cloneEvent(inEvent, inEvent);\n            e.pointerType = POINTER_TYPES[inEvent.pointerType];\n        }\n        return e;\n    };\n    /**\n     * Remove this pointer from the list of active pointers.\n     * @param {number} pointerId Pointer identifier.\n     */\n    MsSource.prototype.cleanup = function (pointerId) {\n        delete this.pointerMap[pointerId.toString()];\n    };\n    return MsSource;\n}(EventSource));\nexport default MsSource;\n//# sourceMappingURL=MsSource.js.map","/**\n * @module ol/pointer/NativeSource\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n// Based on https://github.com/Polymer/PointerEvents\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\nimport EventSource from './EventSource.js';\n/**\n * Handler for `pointerdown`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerDown(inEvent) {\n    this.dispatcher.fireNativeEvent(inEvent);\n}\n/**\n * Handler for `pointermove`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerMove(inEvent) {\n    this.dispatcher.fireNativeEvent(inEvent);\n}\n/**\n * Handler for `pointerup`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerUp(inEvent) {\n    this.dispatcher.fireNativeEvent(inEvent);\n}\n/**\n * Handler for `pointerout`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerOut(inEvent) {\n    this.dispatcher.fireNativeEvent(inEvent);\n}\n/**\n * Handler for `pointerover`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerOver(inEvent) {\n    this.dispatcher.fireNativeEvent(inEvent);\n}\n/**\n * Handler for `pointercancel`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerCancel(inEvent) {\n    this.dispatcher.fireNativeEvent(inEvent);\n}\n/**\n * Handler for `lostpointercapture`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction lostPointerCapture(inEvent) {\n    this.dispatcher.fireNativeEvent(inEvent);\n}\n/**\n * Handler for `gotpointercapture`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction gotPointerCapture(inEvent) {\n    this.dispatcher.fireNativeEvent(inEvent);\n}\nvar NativeSource = /** @class */ (function (_super) {\n    __extends(NativeSource, _super);\n    /**\n     * @param {import(\"./PointerEventHandler.js\").default} dispatcher Event handler.\n     */\n    function NativeSource(dispatcher) {\n        var _this = this;\n        var mapping = {\n            'pointerdown': pointerDown,\n            'pointermove': pointerMove,\n            'pointerup': pointerUp,\n            'pointerout': pointerOut,\n            'pointerover': pointerOver,\n            'pointercancel': pointerCancel,\n            'gotpointercapture': gotPointerCapture,\n            'lostpointercapture': lostPointerCapture\n        };\n        _this = _super.call(this, dispatcher, mapping) || this;\n        return _this;\n    }\n    return NativeSource;\n}(EventSource));\nexport default NativeSource;\n//# sourceMappingURL=NativeSource.js.map","/**\n * @module ol/pointer/PointerEvent\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n// Based on https://github.com/Polymer/PointerEvents\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\nimport _Event from '../events/Event.js';\n/**\n * Is the `buttons` property supported?\n * @type {boolean}\n */\nvar HAS_BUTTONS = false;\nvar PointerEvent = /** @class */ (function (_super) {\n    __extends(PointerEvent, _super);\n    /**\n     * A class for pointer events.\n     *\n     * This class is used as an abstraction for mouse events,\n     * touch events and even native pointer events.\n     *\n     * @param {string} type The type of the event to create.\n     * @param {Event} originalEvent The event.\n     * @param {Object<string, ?>=} opt_eventDict An optional dictionary of\n     *    initial event properties.\n     */\n    function PointerEvent(type, originalEvent, opt_eventDict) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * @const\n         * @type {Event}\n         */\n        _this.originalEvent = originalEvent;\n        var eventDict = opt_eventDict ? opt_eventDict : {};\n        /**\n         * @type {number}\n         */\n        _this.buttons = getButtons(eventDict);\n        /**\n         * @type {number}\n         */\n        _this.pressure = getPressure(eventDict, _this.buttons);\n        // MouseEvent related properties\n        /**\n         * @type {boolean}\n         */\n        _this.bubbles = 'bubbles' in eventDict ? eventDict['bubbles'] : false;\n        /**\n         * @type {boolean}\n         */\n        _this.cancelable = 'cancelable' in eventDict ? eventDict['cancelable'] : false;\n        /**\n         * @type {Object}\n         */\n        _this.view = 'view' in eventDict ? eventDict['view'] : null;\n        /**\n         * @type {number}\n         */\n        _this.detail = 'detail' in eventDict ? eventDict['detail'] : null;\n        /**\n         * @type {number}\n         */\n        _this.screenX = 'screenX' in eventDict ? eventDict['screenX'] : 0;\n        /**\n         * @type {number}\n         */\n        _this.screenY = 'screenY' in eventDict ? eventDict['screenY'] : 0;\n        /**\n         * @type {number}\n         */\n        _this.clientX = 'clientX' in eventDict ? eventDict['clientX'] : 0;\n        /**\n         * @type {number}\n         */\n        _this.clientY = 'clientY' in eventDict ? eventDict['clientY'] : 0;\n        /**\n         * @type {boolean}\n         */\n        _this.ctrlKey = 'ctrlKey' in eventDict ? eventDict['ctrlKey'] : false;\n        /**\n         * @type {boolean}\n         */\n        _this.altKey = 'altKey' in eventDict ? eventDict['altKey'] : false;\n        /**\n         * @type {boolean}\n         */\n        _this.shiftKey = 'shiftKey' in eventDict ? eventDict['shiftKey'] : false;\n        /**\n         * @type {boolean}\n         */\n        _this.metaKey = 'metaKey' in eventDict ? eventDict['metaKey'] : false;\n        /**\n         * @type {number}\n         */\n        _this.button = 'button' in eventDict ? eventDict['button'] : 0;\n        /**\n         * @type {Node}\n         */\n        _this.relatedTarget = 'relatedTarget' in eventDict ?\n            eventDict['relatedTarget'] : null;\n        // PointerEvent related properties\n        /**\n         * @const\n         * @type {number}\n         */\n        _this.pointerId = 'pointerId' in eventDict ? eventDict['pointerId'] : 0;\n        /**\n         * @type {number}\n         */\n        _this.width = 'width' in eventDict ? eventDict['width'] : 0;\n        /**\n         * @type {number}\n         */\n        _this.height = 'height' in eventDict ? eventDict['height'] : 0;\n        /**\n         * @type {number}\n         */\n        _this.tiltX = 'tiltX' in eventDict ? eventDict['tiltX'] : 0;\n        /**\n         * @type {number}\n         */\n        _this.tiltY = 'tiltY' in eventDict ? eventDict['tiltY'] : 0;\n        /**\n         * @type {string}\n         */\n        _this.pointerType = 'pointerType' in eventDict ? eventDict['pointerType'] : '';\n        /**\n         * @type {number}\n         */\n        _this.hwTimestamp = 'hwTimestamp' in eventDict ? eventDict['hwTimestamp'] : 0;\n        /**\n         * @type {boolean}\n         */\n        _this.isPrimary = 'isPrimary' in eventDict ? eventDict['isPrimary'] : false;\n        // keep the semantics of preventDefault\n        if (originalEvent.preventDefault) {\n            _this.preventDefault = function () {\n                originalEvent.preventDefault();\n            };\n        }\n        return _this;\n    }\n    return PointerEvent;\n}(_Event));\n/**\n * @param {Object<string, ?>} eventDict The event dictionary.\n * @return {number} Button indicator.\n */\nfunction getButtons(eventDict) {\n    // According to the w3c spec,\n    // http://www.w3.org/TR/DOM-Level-3-Events/#events-MouseEvent-button\n    // MouseEvent.button == 0 can mean either no mouse button depressed, or the\n    // left mouse button depressed.\n    //\n    // As of now, the only way to distinguish between the two states of\n    // MouseEvent.button is by using the deprecated MouseEvent.which property, as\n    // this maps mouse buttons to positive integers > 0, and uses 0 to mean that\n    // no mouse button is held.\n    //\n    // MouseEvent.which is derived from MouseEvent.button at MouseEvent creation,\n    // but initMouseEvent does not expose an argument with which to set\n    // MouseEvent.which. Calling initMouseEvent with a buttonArg of 0 will set\n    // MouseEvent.button == 0 and MouseEvent.which == 1, breaking the expectations\n    // of app developers.\n    //\n    // The only way to propagate the correct state of MouseEvent.which and\n    // MouseEvent.button to a new MouseEvent.button == 0 and MouseEvent.which == 0\n    // is to call initMouseEvent with a buttonArg value of -1.\n    //\n    // This is fixed with DOM Level 4's use of buttons\n    var buttons;\n    if (eventDict.buttons || HAS_BUTTONS) {\n        buttons = eventDict.buttons;\n    }\n    else {\n        switch (eventDict.which) {\n            case 1:\n                buttons = 1;\n                break;\n            case 2:\n                buttons = 4;\n                break;\n            case 3:\n                buttons = 2;\n                break;\n            default: buttons = 0;\n        }\n    }\n    return buttons;\n}\n/**\n * @param {Object<string, ?>} eventDict The event dictionary.\n * @param {number} buttons Button indicator.\n * @return {number} The pressure.\n */\nfunction getPressure(eventDict, buttons) {\n    // Spec requires that pointers without pressure specified use 0.5 for down\n    // state and 0 for up state.\n    var pressure = 0;\n    if (eventDict.pressure) {\n        pressure = eventDict.pressure;\n    }\n    else {\n        pressure = buttons ? 0.5 : 0;\n    }\n    return pressure;\n}\n/**\n * Checks if the `buttons` property is supported.\n */\n(function () {\n    try {\n        var ev = new MouseEvent('click', { buttons: 1 });\n        HAS_BUTTONS = ev.buttons === 1;\n    }\n    catch (e) {\n        // pass\n    }\n})();\nexport default PointerEvent;\n//# sourceMappingURL=PointerEvent.js.map","/**\n * @module ol/pointer/TouchSource\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n// Based on https://github.com/Polymer/PointerEvents\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\nimport { remove } from '../array.js';\nimport EventSource from './EventSource.js';\nimport { POINTER_ID } from './MouseSource.js';\n/**\n * @type {number}\n */\nvar CLICK_COUNT_TIMEOUT = 200;\n/**\n * @type {string}\n */\nvar POINTER_TYPE = 'touch';\n/**\n * Handler for `touchstart`, triggers `pointerover`,\n * `pointerenter` and `pointerdown` events.\n *\n * @this {TouchSource}\n * @param {TouchEvent} inEvent The in event.\n */\nfunction touchstart(inEvent) {\n    this.vacuumTouches_(inEvent);\n    this.setPrimaryTouch_(inEvent.changedTouches[0]);\n    this.dedupSynthMouse_(inEvent);\n    this.clickCount_++;\n    this.processTouches_(inEvent, this.overDown_);\n}\n/**\n * Handler for `touchmove`.\n *\n * @this {TouchSource}\n * @param {TouchEvent} inEvent The in event.\n */\nfunction touchmove(inEvent) {\n    this.processTouches_(inEvent, this.moveOverOut_);\n}\n/**\n * Handler for `touchend`, triggers `pointerup`,\n * `pointerout` and `pointerleave` events.\n *\n * @this {TouchSource}\n * @param {TouchEvent} inEvent The event.\n */\nfunction touchend(inEvent) {\n    this.dedupSynthMouse_(inEvent);\n    this.processTouches_(inEvent, this.upOut_);\n}\n/**\n * Handler for `touchcancel`, triggers `pointercancel`,\n * `pointerout` and `pointerleave` events.\n *\n * @this {TouchSource}\n * @param {TouchEvent} inEvent The in event.\n */\nfunction touchcancel(inEvent) {\n    this.processTouches_(inEvent, this.cancelOut_);\n}\nvar TouchSource = /** @class */ (function (_super) {\n    __extends(TouchSource, _super);\n    /**\n     * @param {import(\"./PointerEventHandler.js\").default} dispatcher The event handler.\n     * @param {import(\"./MouseSource.js\").default} mouseSource Mouse source.\n     */\n    function TouchSource(dispatcher, mouseSource) {\n        var _this = this;\n        var mapping = {\n            'touchstart': touchstart,\n            'touchmove': touchmove,\n            'touchend': touchend,\n            'touchcancel': touchcancel\n        };\n        _this = _super.call(this, dispatcher, mapping) || this;\n        /**\n         * @const\n         * @type {!Object<string, Event|Object>}\n         */\n        _this.pointerMap = dispatcher.pointerMap;\n        /**\n         * @const\n         * @type {import(\"./MouseSource.js\").default}\n         */\n        _this.mouseSource = mouseSource;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.firstTouchId_ = undefined;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.clickCount_ = 0;\n        /**\n         * @private\n         * @type {?}\n         */\n        _this.resetId_;\n        /**\n         * Mouse event timeout: This should be long enough to\n         * ignore compat mouse events made by touch.\n         * @private\n         * @type {number}\n         */\n        _this.dedupTimeout_ = 2500;\n        return _this;\n    }\n    /**\n     * @private\n     * @param {Touch} inTouch The in touch.\n     * @return {boolean} True, if this is the primary touch.\n     */\n    TouchSource.prototype.isPrimaryTouch_ = function (inTouch) {\n        return this.firstTouchId_ === inTouch.identifier;\n    };\n    /**\n     * Set primary touch if there are no pointers, or the only pointer is the mouse.\n     * @param {Touch} inTouch The in touch.\n     * @private\n     */\n    TouchSource.prototype.setPrimaryTouch_ = function (inTouch) {\n        var count = Object.keys(this.pointerMap).length;\n        if (count === 0 || (count === 1 && POINTER_ID.toString() in this.pointerMap)) {\n            this.firstTouchId_ = inTouch.identifier;\n            this.cancelResetClickCount_();\n        }\n    };\n    /**\n     * @private\n     * @param {PointerEvent} inPointer The in pointer object.\n     */\n    TouchSource.prototype.removePrimaryPointer_ = function (inPointer) {\n        if (inPointer.isPrimary) {\n            this.firstTouchId_ = undefined;\n            this.resetClickCount_();\n        }\n    };\n    /**\n     * @private\n     */\n    TouchSource.prototype.resetClickCount_ = function () {\n        this.resetId_ = setTimeout(this.resetClickCountHandler_.bind(this), CLICK_COUNT_TIMEOUT);\n    };\n    /**\n     * @private\n     */\n    TouchSource.prototype.resetClickCountHandler_ = function () {\n        this.clickCount_ = 0;\n        this.resetId_ = undefined;\n    };\n    /**\n     * @private\n     */\n    TouchSource.prototype.cancelResetClickCount_ = function () {\n        if (this.resetId_ !== undefined) {\n            clearTimeout(this.resetId_);\n        }\n    };\n    /**\n     * @private\n     * @param {TouchEvent} browserEvent Browser event\n     * @param {Touch} inTouch Touch event\n     * @return {PointerEvent} A pointer object.\n     */\n    TouchSource.prototype.touchToPointer_ = function (browserEvent, inTouch) {\n        var e = this.dispatcher.cloneEvent(browserEvent, inTouch);\n        // Spec specifies that pointerId 1 is reserved for Mouse.\n        // Touch identifiers can start at 0.\n        // Add 2 to the touch identifier for compatibility.\n        e.pointerId = inTouch.identifier + 2;\n        // TODO: check if this is necessary?\n        //e.target = findTarget(e);\n        e.bubbles = true;\n        e.cancelable = true;\n        e.detail = this.clickCount_;\n        e.button = 0;\n        e.buttons = 1;\n        e.width = inTouch.radiusX || 0;\n        e.height = inTouch.radiusY || 0;\n        e.pressure = inTouch.force || 0.5;\n        e.isPrimary = this.isPrimaryTouch_(inTouch);\n        e.pointerType = POINTER_TYPE;\n        // make sure that the properties that are different for\n        // each `Touch` object are not copied from the BrowserEvent object\n        e.clientX = inTouch.clientX;\n        e.clientY = inTouch.clientY;\n        e.screenX = inTouch.screenX;\n        e.screenY = inTouch.screenY;\n        return e;\n    };\n    /**\n     * @private\n     * @param {TouchEvent} inEvent Touch event\n     * @param {function(TouchEvent, PointerEvent): void} inFunction In function.\n     */\n    TouchSource.prototype.processTouches_ = function (inEvent, inFunction) {\n        var touches = Array.prototype.slice.call(inEvent.changedTouches);\n        var count = touches.length;\n        function preventDefault() {\n            inEvent.preventDefault();\n        }\n        for (var i = 0; i < count; ++i) {\n            var pointer = this.touchToPointer_(inEvent, touches[i]);\n            // forward touch preventDefaults\n            pointer.preventDefault = preventDefault;\n            inFunction.call(this, inEvent, pointer);\n        }\n    };\n    /**\n     * @private\n     * @param {TouchList} touchList The touch list.\n     * @param {number} searchId Search identifier.\n     * @return {boolean} True, if the `Touch` with the given id is in the list.\n     */\n    TouchSource.prototype.findTouch_ = function (touchList, searchId) {\n        var l = touchList.length;\n        for (var i = 0; i < l; i++) {\n            var touch = touchList[i];\n            if (touch.identifier === searchId) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * In some instances, a touchstart can happen without a touchend. This\n     * leaves the pointermap in a broken state.\n     * Therefore, on every touchstart, we remove the touches that did not fire a\n     * touchend event.\n     * To keep state globally consistent, we fire a pointercancel for\n     * this \"abandoned\" touch\n     *\n     * @private\n     * @param {TouchEvent} inEvent The in event.\n     */\n    TouchSource.prototype.vacuumTouches_ = function (inEvent) {\n        var touchList = inEvent.touches;\n        // pointerMap.getCount() should be < touchList.length here,\n        // as the touchstart has not been processed yet.\n        var keys = Object.keys(this.pointerMap);\n        var count = keys.length;\n        if (count >= touchList.length) {\n            var d = [];\n            for (var i = 0; i < count; ++i) {\n                var key = Number(keys[i]);\n                var value = this.pointerMap[key];\n                // Never remove pointerId == 1, which is mouse.\n                // Touch identifiers are 2 smaller than their pointerId, which is the\n                // index in pointermap.\n                if (key != POINTER_ID && !this.findTouch_(touchList, key - 2)) {\n                    d.push(value.out);\n                }\n            }\n            for (var i = 0; i < d.length; ++i) {\n                this.cancelOut_(inEvent, d[i]);\n            }\n        }\n    };\n    /**\n     * @private\n     * @param {TouchEvent} browserEvent The event.\n     * @param {PointerEvent} inPointer The in pointer object.\n     */\n    TouchSource.prototype.overDown_ = function (browserEvent, inPointer) {\n        this.pointerMap[inPointer.pointerId] = {\n            target: inPointer.target,\n            out: inPointer,\n            outTarget: inPointer.target\n        };\n        this.dispatcher.over(inPointer, browserEvent);\n        this.dispatcher.enter(inPointer, browserEvent);\n        this.dispatcher.down(inPointer, browserEvent);\n    };\n    /**\n     * @private\n     * @param {TouchEvent} browserEvent The event.\n     * @param {PointerEvent} inPointer The in pointer.\n     */\n    TouchSource.prototype.moveOverOut_ = function (browserEvent, inPointer) {\n        var event = inPointer;\n        var pointer = this.pointerMap[event.pointerId];\n        // a finger drifted off the screen, ignore it\n        if (!pointer) {\n            return;\n        }\n        var outEvent = pointer.out;\n        var outTarget = pointer.outTarget;\n        this.dispatcher.move(event, browserEvent);\n        if (outEvent && outTarget !== event.target) {\n            outEvent.relatedTarget = event.target;\n            /** @type {Object} */ (event).relatedTarget = outTarget;\n            // recover from retargeting by shadow\n            outEvent.target = outTarget;\n            if (event.target) {\n                this.dispatcher.leaveOut(outEvent, browserEvent);\n                this.dispatcher.enterOver(event, browserEvent);\n            }\n            else {\n                // clean up case when finger leaves the screen\n                /** @type {Object} */ (event).target = outTarget;\n                /** @type {Object} */ (event).relatedTarget = null;\n                this.cancelOut_(browserEvent, event);\n            }\n        }\n        pointer.out = event;\n        pointer.outTarget = event.target;\n    };\n    /**\n     * @private\n     * @param {TouchEvent} browserEvent An event.\n     * @param {PointerEvent} inPointer The inPointer object.\n     */\n    TouchSource.prototype.upOut_ = function (browserEvent, inPointer) {\n        this.dispatcher.up(inPointer, browserEvent);\n        this.dispatcher.out(inPointer, browserEvent);\n        this.dispatcher.leave(inPointer, browserEvent);\n        this.cleanUpPointer_(inPointer);\n    };\n    /**\n     * @private\n     * @param {TouchEvent} browserEvent The event.\n     * @param {PointerEvent} inPointer The in pointer.\n     */\n    TouchSource.prototype.cancelOut_ = function (browserEvent, inPointer) {\n        this.dispatcher.cancel(inPointer, browserEvent);\n        this.dispatcher.out(inPointer, browserEvent);\n        this.dispatcher.leave(inPointer, browserEvent);\n        this.cleanUpPointer_(inPointer);\n    };\n    /**\n     * @private\n     * @param {PointerEvent} inPointer The inPointer object.\n     */\n    TouchSource.prototype.cleanUpPointer_ = function (inPointer) {\n        delete this.pointerMap[inPointer.pointerId];\n        this.removePrimaryPointer_(inPointer);\n    };\n    /**\n     * Prevent synth mouse events from creating pointer events.\n     *\n     * @private\n     * @param {TouchEvent} inEvent The in event.\n     */\n    TouchSource.prototype.dedupSynthMouse_ = function (inEvent) {\n        var lts = this.mouseSource.lastTouches;\n        var t = inEvent.changedTouches[0];\n        // only the primary finger will synth mouse events\n        if (this.isPrimaryTouch_(t)) {\n            // remember x/y of last touch\n            var lt_1 = [t.clientX, t.clientY];\n            lts.push(lt_1);\n            setTimeout(function () {\n                // remove touch after timeout\n                remove(lts, lt_1);\n            }, this.dedupTimeout_);\n        }\n    };\n    return TouchSource;\n}(EventSource));\nexport default TouchSource;\n//# sourceMappingURL=TouchSource.js.map","/**\n * @module ol/pointer/PointerEventHandler\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n// Based on https://github.com/Polymer/PointerEvents\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\nimport { listen, unlisten } from '../events.js';\nimport EventTarget from '../events/Target.js';\nimport { POINTER, MSPOINTER, TOUCH } from '../has.js';\nimport PointerEventType from './EventType.js';\nimport MouseSource, { prepareEvent as prepareMouseEvent } from './MouseSource.js';\nimport MsSource from './MsSource.js';\nimport NativeSource from './NativeSource.js';\nimport PointerEvent from './PointerEvent.js';\nimport TouchSource from './TouchSource.js';\n/**\n * Properties to copy when cloning an event, with default values.\n * @type {Array<Array>}\n */\nvar CLONE_PROPS = [\n    // MouseEvent\n    ['bubbles', false],\n    ['cancelable', false],\n    ['view', null],\n    ['detail', null],\n    ['screenX', 0],\n    ['screenY', 0],\n    ['clientX', 0],\n    ['clientY', 0],\n    ['ctrlKey', false],\n    ['altKey', false],\n    ['shiftKey', false],\n    ['metaKey', false],\n    ['button', 0],\n    ['relatedTarget', null],\n    // DOM Level 3\n    ['buttons', 0],\n    // PointerEvent\n    ['pointerId', 0],\n    ['width', 0],\n    ['height', 0],\n    ['pressure', 0],\n    ['tiltX', 0],\n    ['tiltY', 0],\n    ['pointerType', ''],\n    ['hwTimestamp', 0],\n    ['isPrimary', false],\n    // event instance\n    ['type', ''],\n    ['target', null],\n    ['currentTarget', null],\n    ['which', 0]\n];\nvar PointerEventHandler = /** @class */ (function (_super) {\n    __extends(PointerEventHandler, _super);\n    /**\n     * @param {Element|HTMLDocument} element Viewport element.\n     */\n    function PointerEventHandler(element) {\n        var _this = _super.call(this) || this;\n        /**\n         * @const\n         * @private\n         * @type {Element|HTMLDocument}\n         */\n        _this.element_ = element;\n        /**\n         * @const\n         * @type {!Object<string, Event|Object>}\n         */\n        _this.pointerMap = {};\n        /**\n         * @type {Object<string, function(Event): void>}\n         * @private\n         */\n        _this.eventMap_ = {};\n        /**\n         * @type {Array<import(\"./EventSource.js\").default>}\n         * @private\n         */\n        _this.eventSourceList_ = [];\n        _this.registerSources();\n        return _this;\n    }\n    /**\n     * Set up the event sources (mouse, touch and native pointers)\n     * that generate pointer events.\n     */\n    PointerEventHandler.prototype.registerSources = function () {\n        if (POINTER) {\n            this.registerSource('native', new NativeSource(this));\n        }\n        else if (MSPOINTER) {\n            this.registerSource('ms', new MsSource(this));\n        }\n        else {\n            var mouseSource = new MouseSource(this);\n            this.registerSource('mouse', mouseSource);\n            if (TOUCH) {\n                this.registerSource('touch', new TouchSource(this, mouseSource));\n            }\n        }\n        // register events on the viewport element\n        this.register_();\n    };\n    /**\n     * Add a new event source that will generate pointer events.\n     *\n     * @param {string} name A name for the event source\n     * @param {import(\"./EventSource.js\").default} source The source event.\n     */\n    PointerEventHandler.prototype.registerSource = function (name, source) {\n        var s = source;\n        var newEvents = s.getEvents();\n        if (newEvents) {\n            newEvents.forEach(function (e) {\n                var handler = s.getHandlerForEvent(e);\n                if (handler) {\n                    this.eventMap_[e] = handler.bind(s);\n                }\n            }.bind(this));\n            this.eventSourceList_.push(s);\n        }\n    };\n    /**\n     * Set up the events for all registered event sources.\n     * @private\n     */\n    PointerEventHandler.prototype.register_ = function () {\n        var l = this.eventSourceList_.length;\n        for (var i = 0; i < l; i++) {\n            var eventSource = this.eventSourceList_[i];\n            this.addEvents_(eventSource.getEvents());\n        }\n    };\n    /**\n     * Remove all registered events.\n     * @private\n     */\n    PointerEventHandler.prototype.unregister_ = function () {\n        var l = this.eventSourceList_.length;\n        for (var i = 0; i < l; i++) {\n            var eventSource = this.eventSourceList_[i];\n            this.removeEvents_(eventSource.getEvents());\n        }\n    };\n    /**\n     * Calls the right handler for a new event.\n     * @private\n     * @param {Event} inEvent Browser event.\n     */\n    PointerEventHandler.prototype.eventHandler_ = function (inEvent) {\n        var type = inEvent.type;\n        var handler = this.eventMap_[type];\n        if (handler) {\n            handler(inEvent);\n        }\n    };\n    /**\n     * Setup listeners for the given events.\n     * @private\n     * @param {Array<string>} events List of events.\n     */\n    PointerEventHandler.prototype.addEvents_ = function (events) {\n        events.forEach(function (eventName) {\n            listen(this.element_, eventName, this.eventHandler_, this);\n        }.bind(this));\n    };\n    /**\n     * Unregister listeners for the given events.\n     * @private\n     * @param {Array<string>} events List of events.\n     */\n    PointerEventHandler.prototype.removeEvents_ = function (events) {\n        events.forEach(function (e) {\n            unlisten(this.element_, e, this.eventHandler_, this);\n        }.bind(this));\n    };\n    /**\n     * Returns a snapshot of inEvent, with writable properties.\n     *\n     * @param {Event} event Browser event.\n     * @param {Event|Touch} inEvent An event that contains\n     *    properties to copy.\n     * @return {Object} An object containing shallow copies of\n     *    `inEvent`'s properties.\n     */\n    PointerEventHandler.prototype.cloneEvent = function (event, inEvent) {\n        var eventCopy = {};\n        for (var i = 0, ii = CLONE_PROPS.length; i < ii; i++) {\n            var p = CLONE_PROPS[i][0];\n            eventCopy[p] = event[p] || inEvent[p] || CLONE_PROPS[i][1];\n        }\n        return eventCopy;\n    };\n    // EVENTS\n    /**\n     * Triggers a 'pointerdown' event.\n     * @param {Object} data Pointer event data.\n     * @param {Event} event The event.\n     */\n    PointerEventHandler.prototype.down = function (data, event) {\n        this.fireEvent(PointerEventType.POINTERDOWN, data, event);\n    };\n    /**\n     * Triggers a 'pointermove' event.\n     * @param {Object} data Pointer event data.\n     * @param {Event} event The event.\n     */\n    PointerEventHandler.prototype.move = function (data, event) {\n        this.fireEvent(PointerEventType.POINTERMOVE, data, event);\n    };\n    /**\n     * Triggers a 'pointerup' event.\n     * @param {Object} data Pointer event data.\n     * @param {Event} event The event.\n     */\n    PointerEventHandler.prototype.up = function (data, event) {\n        this.fireEvent(PointerEventType.POINTERUP, data, event);\n    };\n    /**\n     * Triggers a 'pointerenter' event.\n     * @param {Object} data Pointer event data.\n     * @param {Event} event The event.\n     */\n    PointerEventHandler.prototype.enter = function (data, event) {\n        data.bubbles = false;\n        this.fireEvent(PointerEventType.POINTERENTER, data, event);\n    };\n    /**\n     * Triggers a 'pointerleave' event.\n     * @param {Object} data Pointer event data.\n     * @param {Event} event The event.\n     */\n    PointerEventHandler.prototype.leave = function (data, event) {\n        data.bubbles = false;\n        this.fireEvent(PointerEventType.POINTERLEAVE, data, event);\n    };\n    /**\n     * Triggers a 'pointerover' event.\n     * @param {Object} data Pointer event data.\n     * @param {Event} event The event.\n     */\n    PointerEventHandler.prototype.over = function (data, event) {\n        data.bubbles = true;\n        this.fireEvent(PointerEventType.POINTEROVER, data, event);\n    };\n    /**\n     * Triggers a 'pointerout' event.\n     * @param {Object} data Pointer event data.\n     * @param {Event} event The event.\n     */\n    PointerEventHandler.prototype.out = function (data, event) {\n        data.bubbles = true;\n        this.fireEvent(PointerEventType.POINTEROUT, data, event);\n    };\n    /**\n     * Triggers a 'pointercancel' event.\n     * @param {Object} data Pointer event data.\n     * @param {Event} event The event.\n     */\n    PointerEventHandler.prototype.cancel = function (data, event) {\n        this.fireEvent(PointerEventType.POINTERCANCEL, data, event);\n    };\n    /**\n     * Triggers a combination of 'pointerout' and 'pointerleave' events.\n     * @param {Object} data Pointer event data.\n     * @param {Event} event The event.\n     */\n    PointerEventHandler.prototype.leaveOut = function (data, event) {\n        this.out(data, event);\n        if (!this.contains_(data.target, data.relatedTarget)) {\n            this.leave(data, event);\n        }\n    };\n    /**\n     * Triggers a combination of 'pointerover' and 'pointerevents' events.\n     * @param {Object} data Pointer event data.\n     * @param {Event} event The event.\n     */\n    PointerEventHandler.prototype.enterOver = function (data, event) {\n        this.over(data, event);\n        if (!this.contains_(data.target, data.relatedTarget)) {\n            this.enter(data, event);\n        }\n    };\n    /**\n     * @private\n     * @param {Element} container The container element.\n     * @param {Element} contained The contained element.\n     * @return {boolean} Returns true if the container element\n     *   contains the other element.\n     */\n    PointerEventHandler.prototype.contains_ = function (container, contained) {\n        if (!container || !contained) {\n            return false;\n        }\n        return container.contains(contained);\n    };\n    // EVENT CREATION AND TRACKING\n    /**\n     * Creates a new Event of type `inType`, based on the information in\n     * `data`.\n     *\n     * @param {string} inType A string representing the type of event to create.\n     * @param {Object} data Pointer event data.\n     * @param {Event} event The event.\n     * @return {PointerEvent} A PointerEvent of type `inType`.\n     */\n    PointerEventHandler.prototype.makeEvent = function (inType, data, event) {\n        return new PointerEvent(inType, event, data);\n    };\n    /**\n     * Make and dispatch an event in one call.\n     * @param {string} inType A string representing the type of event.\n     * @param {Object} data Pointer event data.\n     * @param {Event} event The event.\n     */\n    PointerEventHandler.prototype.fireEvent = function (inType, data, event) {\n        var e = this.makeEvent(inType, data, event);\n        this.dispatchEvent(e);\n    };\n    /**\n     * Creates a pointer event from a native pointer event\n     * and dispatches this event.\n     * @param {Event} event A platform event with a target.\n     */\n    PointerEventHandler.prototype.fireNativeEvent = function (event) {\n        var e = this.makeEvent(event.type, event, event);\n        this.dispatchEvent(e);\n    };\n    /**\n     * Wrap a native mouse event into a pointer event.\n     * This proxy method is required for the legacy IE support.\n     * @param {string} eventType The pointer event type.\n     * @param {Event} event The event.\n     * @return {PointerEvent} The wrapped event.\n     */\n    PointerEventHandler.prototype.wrapMouseEvent = function (eventType, event) {\n        var pointerEvent = this.makeEvent(eventType, prepareMouseEvent(event, this), event);\n        return pointerEvent;\n    };\n    /**\n     * @inheritDoc\n     */\n    PointerEventHandler.prototype.disposeInternal = function () {\n        this.unregister_();\n        _super.prototype.disposeInternal.call(this);\n    };\n    return PointerEventHandler;\n}(EventTarget));\nexport default PointerEventHandler;\n//# sourceMappingURL=PointerEventHandler.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/MapBrowserEventHandler\n */\nimport { DEVICE_PIXEL_RATIO } from './has.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapBrowserPointerEvent from './MapBrowserPointerEvent.js';\nimport { listen, unlistenByKey } from './events.js';\nimport EventTarget from './events/Target.js';\nimport PointerEventType from './pointer/EventType.js';\nimport PointerEventHandler from './pointer/PointerEventHandler.js';\nvar MapBrowserEventHandler = /** @class */ (function (_super) {\n    __extends(MapBrowserEventHandler, _super);\n    /**\n     * @param {import(\"./PluggableMap.js\").default} map The map with the viewport to listen to events on.\n     * @param {number=} moveTolerance The minimal distance the pointer must travel to trigger a move.\n     */\n    function MapBrowserEventHandler(map, moveTolerance) {\n        var _this = _super.call(this) || this;\n        /**\n         * This is the element that we will listen to the real events on.\n         * @type {import(\"./PluggableMap.js\").default}\n         * @private\n         */\n        _this.map_ = map;\n        /**\n         * @type {any}\n         * @private\n         */\n        _this.clickTimeoutId_;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        _this.dragging_ = false;\n        /**\n         * @type {!Array<import(\"./events.js\").EventsKey>}\n         * @private\n         */\n        _this.dragListenerKeys_ = [];\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.moveTolerance_ = moveTolerance ?\n            moveTolerance * DEVICE_PIXEL_RATIO : DEVICE_PIXEL_RATIO;\n        /**\n         * The most recent \"down\" type event (or null if none have occurred).\n         * Set on pointerdown.\n         * @type {import(\"./pointer/PointerEvent.js\").default}\n         * @private\n         */\n        _this.down_ = null;\n        var element = _this.map_.getViewport();\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.activePointers_ = 0;\n        /**\n         * @type {!Object<number, boolean>}\n         * @private\n         */\n        _this.trackedTouches_ = {};\n        /**\n         * Event handler which generates pointer events for\n         * the viewport element.\n         *\n         * @type {PointerEventHandler}\n         * @private\n         */\n        _this.pointerEventHandler_ = new PointerEventHandler(element);\n        /**\n         * Event handler which generates pointer events for\n         * the document (used when dragging).\n         *\n         * @type {PointerEventHandler}\n         * @private\n         */\n        _this.documentPointerEventHandler_ = null;\n        /**\n         * @type {?import(\"./events.js\").EventsKey}\n         * @private\n         */\n        _this.pointerdownListenerKey_ = listen(_this.pointerEventHandler_, PointerEventType.POINTERDOWN, _this.handlePointerDown_, _this);\n        /**\n         * @type {?import(\"./events.js\").EventsKey}\n         * @private\n         */\n        _this.relayedListenerKey_ = listen(_this.pointerEventHandler_, PointerEventType.POINTERMOVE, _this.relayEvent_, _this);\n        return _this;\n    }\n    /**\n     * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n     * event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.emulateClick_ = function (pointerEvent) {\n        var newEvent = new MapBrowserPointerEvent(MapBrowserEventType.CLICK, this.map_, pointerEvent);\n        this.dispatchEvent(newEvent);\n        if (this.clickTimeoutId_ !== undefined) {\n            // double-click\n            clearTimeout(this.clickTimeoutId_);\n            this.clickTimeoutId_ = undefined;\n            newEvent = new MapBrowserPointerEvent(MapBrowserEventType.DBLCLICK, this.map_, pointerEvent);\n            this.dispatchEvent(newEvent);\n        }\n        else {\n            // click\n            this.clickTimeoutId_ = setTimeout(function () {\n                this.clickTimeoutId_ = undefined;\n                var newEvent = new MapBrowserPointerEvent(MapBrowserEventType.SINGLECLICK, this.map_, pointerEvent);\n                this.dispatchEvent(newEvent);\n            }.bind(this), 250);\n        }\n    };\n    /**\n     * Keeps track on how many pointers are currently active.\n     *\n     * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n     * event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.updateActivePointers_ = function (pointerEvent) {\n        var event = pointerEvent;\n        if (event.type == MapBrowserEventType.POINTERUP ||\n            event.type == MapBrowserEventType.POINTERCANCEL) {\n            delete this.trackedTouches_[event.pointerId];\n        }\n        else if (event.type == MapBrowserEventType.POINTERDOWN) {\n            this.trackedTouches_[event.pointerId] = true;\n        }\n        this.activePointers_ = Object.keys(this.trackedTouches_).length;\n    };\n    /**\n     * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n     * event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.handlePointerUp_ = function (pointerEvent) {\n        this.updateActivePointers_(pointerEvent);\n        var newEvent = new MapBrowserPointerEvent(MapBrowserEventType.POINTERUP, this.map_, pointerEvent);\n        this.dispatchEvent(newEvent);\n        // We emulate click events on left mouse button click, touch contact, and pen\n        // contact. isMouseActionButton returns true in these cases (evt.button is set\n        // to 0).\n        // See http://www.w3.org/TR/pointerevents/#button-states\n        // We only fire click, singleclick, and doubleclick if nobody has called\n        // event.stopPropagation() or event.preventDefault().\n        if (!newEvent.propagationStopped && !this.dragging_ && this.isMouseActionButton_(pointerEvent)) {\n            this.emulateClick_(this.down_);\n        }\n        if (this.activePointers_ === 0) {\n            this.dragListenerKeys_.forEach(unlistenByKey);\n            this.dragListenerKeys_.length = 0;\n            this.dragging_ = false;\n            this.down_ = null;\n            this.documentPointerEventHandler_.dispose();\n            this.documentPointerEventHandler_ = null;\n        }\n    };\n    /**\n     * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n     * event.\n     * @return {boolean} If the left mouse button was pressed.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.isMouseActionButton_ = function (pointerEvent) {\n        return pointerEvent.button === 0;\n    };\n    /**\n     * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n     * event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.handlePointerDown_ = function (pointerEvent) {\n        this.updateActivePointers_(pointerEvent);\n        var newEvent = new MapBrowserPointerEvent(MapBrowserEventType.POINTERDOWN, this.map_, pointerEvent);\n        this.dispatchEvent(newEvent);\n        this.down_ = pointerEvent;\n        if (this.dragListenerKeys_.length === 0) {\n            /* Set up a pointer event handler on the `document`,\n             * which is required when the pointer is moved outside\n             * the viewport when dragging.\n             */\n            this.documentPointerEventHandler_ =\n                new PointerEventHandler(document);\n            this.dragListenerKeys_.push(listen(this.documentPointerEventHandler_, MapBrowserEventType.POINTERMOVE, this.handlePointerMove_, this), listen(this.documentPointerEventHandler_, MapBrowserEventType.POINTERUP, this.handlePointerUp_, this), \n            /* Note that the listener for `pointercancel is set up on\n             * `pointerEventHandler_` and not `documentPointerEventHandler_` like\n             * the `pointerup` and `pointermove` listeners.\n             *\n             * The reason for this is the following: `TouchSource.vacuumTouches_()`\n             * issues `pointercancel` events, when there was no `touchend` for a\n             * `touchstart`. Now, let's say a first `touchstart` is registered on\n             * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\n             * But `documentPointerEventHandler_` doesn't know about the first\n             * `touchstart`. If there is no `touchend` for the `touchstart`, we can\n             * only receive a `touchcancel` from `pointerEventHandler_`, because it is\n             * only registered there.\n             */\n            listen(this.pointerEventHandler_, MapBrowserEventType.POINTERCANCEL, this.handlePointerUp_, this));\n        }\n    };\n    /**\n     * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n     * event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.handlePointerMove_ = function (pointerEvent) {\n        // Between pointerdown and pointerup, pointermove events are triggered.\n        // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\n        // moved a significant distance.\n        if (this.isMoving_(pointerEvent)) {\n            this.dragging_ = true;\n            var newEvent = new MapBrowserPointerEvent(MapBrowserEventType.POINTERDRAG, this.map_, pointerEvent, this.dragging_);\n            this.dispatchEvent(newEvent);\n        }\n        // Some native android browser triggers mousemove events during small period\n        // of time. See: https://code.google.com/p/android/issues/detail?id=5491 or\n        // https://code.google.com/p/android/issues/detail?id=19827\n        // ex: Galaxy Tab P3110 + Android 4.1.1\n        pointerEvent.preventDefault();\n    };\n    /**\n     * Wrap and relay a pointer event.  Note that this requires that the type\n     * string for the MapBrowserPointerEvent matches the PointerEvent type.\n     * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n     * event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.relayEvent_ = function (pointerEvent) {\n        var dragging = !!(this.down_ && this.isMoving_(pointerEvent));\n        this.dispatchEvent(new MapBrowserPointerEvent(pointerEvent.type, this.map_, pointerEvent, dragging));\n    };\n    /**\n     * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n     * event.\n     * @return {boolean} Is moving.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.isMoving_ = function (pointerEvent) {\n        return this.dragging_ ||\n            Math.abs(pointerEvent.clientX - this.down_.clientX) > this.moveTolerance_ ||\n            Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_;\n    };\n    /**\n     * @inheritDoc\n     */\n    MapBrowserEventHandler.prototype.disposeInternal = function () {\n        if (this.relayedListenerKey_) {\n            unlistenByKey(this.relayedListenerKey_);\n            this.relayedListenerKey_ = null;\n        }\n        if (this.pointerdownListenerKey_) {\n            unlistenByKey(this.pointerdownListenerKey_);\n            this.pointerdownListenerKey_ = null;\n        }\n        this.dragListenerKeys_.forEach(unlistenByKey);\n        this.dragListenerKeys_.length = 0;\n        if (this.documentPointerEventHandler_) {\n            this.documentPointerEventHandler_.dispose();\n            this.documentPointerEventHandler_ = null;\n        }\n        if (this.pointerEventHandler_) {\n            this.pointerEventHandler_.dispose();\n            this.pointerEventHandler_ = null;\n        }\n        _super.prototype.disposeInternal.call(this);\n    };\n    return MapBrowserEventHandler;\n}(EventTarget));\nexport default MapBrowserEventHandler;\n//# sourceMappingURL=MapBrowserEventHandler.js.map","/**\n * @module ol/MapEventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    /**\n     * Triggered after a map frame is rendered.\n     * @event module:ol/MapEvent~MapEvent#postrender\n     * @api\n     */\n    POSTRENDER: 'postrender',\n    /**\n     * Triggered when the map starts moving.\n     * @event module:ol/MapEvent~MapEvent#movestart\n     * @api\n     */\n    MOVESTART: 'movestart',\n    /**\n     * Triggered after the map is moved.\n     * @event module:ol/MapEvent~MapEvent#moveend\n     * @api\n     */\n    MOVEEND: 'moveend'\n};\n//# sourceMappingURL=MapEventType.js.map","/**\n * @module ol/MapProperty\n */\n/**\n * @enum {string}\n */\nexport default {\n    LAYERGROUP: 'layergroup',\n    SIZE: 'size',\n    TARGET: 'target',\n    VIEW: 'view'\n};\n//# sourceMappingURL=MapProperty.js.map","/**\n * @module ol/render/EventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    /**\n     * Triggered before a layer is rendered.\n     * @event module:ol/render/Event~RenderEvent#prerender\n     * @api\n     */\n    PRERENDER: 'prerender',\n    /**\n     * Triggered after a layer is rendered.\n     * @event module:ol/render/Event~RenderEvent#postrender\n     * @api\n     */\n    POSTRENDER: 'postrender',\n    /**\n     * Triggered before layers are rendered.\n     * @event module:ol/render/Event~RenderEvent#precompose\n     * @api\n     */\n    PRECOMPOSE: 'precompose',\n    /**\n     * Triggered after all layers are rendered.\n     * @event module:ol/render/Event~RenderEvent#postcompose\n     * @api\n     */\n    POSTCOMPOSE: 'postcompose',\n    /**\n     * Triggered when rendering is complete, i.e. all sources and tiles have\n     * finished loading for the current viewport, and all tiles are faded in.\n     * @event module:ol/render/Event~RenderEvent#rendercomplete\n     * @api\n     */\n    RENDERCOMPLETE: 'rendercomplete'\n};\n//# sourceMappingURL=EventType.js.map","/**\n * @module ol/TileState\n */\n/**\n * @enum {number}\n */\nexport default {\n    IDLE: 0,\n    LOADING: 1,\n    LOADED: 2,\n    /**\n     * Indicates that tile loading failed\n     * @type {number}\n     */\n    ERROR: 3,\n    EMPTY: 4,\n    ABORT: 5\n};\n//# sourceMappingURL=TileState.js.map","/**\n * @module ol/structs/PriorityQueue\n */\nimport { assert } from '../asserts.js';\nimport { clear } from '../obj.js';\n/**\n * @type {number}\n */\nexport var DROP = Infinity;\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See http://closure-library.googlecode.com/svn/docs/closure_goog_structs_heap.js.source.html\n * and http://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nvar PriorityQueue = /** @class */ (function () {\n    /**\n     * @param {function(T): number} priorityFunction Priority function.\n     * @param {function(T): string} keyFunction Key function.\n     */\n    function PriorityQueue(priorityFunction, keyFunction) {\n        /**\n         * @type {function(T): number}\n         * @private\n         */\n        this.priorityFunction_ = priorityFunction;\n        /**\n         * @type {function(T): string}\n         * @private\n         */\n        this.keyFunction_ = keyFunction;\n        /**\n         * @type {Array<T>}\n         * @private\n         */\n        this.elements_ = [];\n        /**\n         * @type {Array<number>}\n         * @private\n         */\n        this.priorities_ = [];\n        /**\n         * @type {!Object<string, boolean>}\n         * @private\n         */\n        this.queuedElements_ = {};\n    }\n    /**\n     * FIXME empty description for jsdoc\n     */\n    PriorityQueue.prototype.clear = function () {\n        this.elements_.length = 0;\n        this.priorities_.length = 0;\n        clear(this.queuedElements_);\n    };\n    /**\n     * Remove and return the highest-priority element. O(log N).\n     * @return {T} Element.\n     */\n    PriorityQueue.prototype.dequeue = function () {\n        var elements = this.elements_;\n        var priorities = this.priorities_;\n        var element = elements[0];\n        if (elements.length == 1) {\n            elements.length = 0;\n            priorities.length = 0;\n        }\n        else {\n            elements[0] = elements.pop();\n            priorities[0] = priorities.pop();\n            this.siftUp_(0);\n        }\n        var elementKey = this.keyFunction_(element);\n        delete this.queuedElements_[elementKey];\n        return element;\n    };\n    /**\n     * Enqueue an element. O(log N).\n     * @param {T} element Element.\n     * @return {boolean} The element was added to the queue.\n     */\n    PriorityQueue.prototype.enqueue = function (element) {\n        assert(!(this.keyFunction_(element) in this.queuedElements_), 31); // Tried to enqueue an `element` that was already added to the queue\n        var priority = this.priorityFunction_(element);\n        if (priority != DROP) {\n            this.elements_.push(element);\n            this.priorities_.push(priority);\n            this.queuedElements_[this.keyFunction_(element)] = true;\n            this.siftDown_(0, this.elements_.length - 1);\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @return {number} Count.\n     */\n    PriorityQueue.prototype.getCount = function () {\n        return this.elements_.length;\n    };\n    /**\n     * Gets the index of the left child of the node at the given index.\n     * @param {number} index The index of the node to get the left child for.\n     * @return {number} The index of the left child.\n     * @private\n     */\n    PriorityQueue.prototype.getLeftChildIndex_ = function (index) {\n        return index * 2 + 1;\n    };\n    /**\n     * Gets the index of the right child of the node at the given index.\n     * @param {number} index The index of the node to get the right child for.\n     * @return {number} The index of the right child.\n     * @private\n     */\n    PriorityQueue.prototype.getRightChildIndex_ = function (index) {\n        return index * 2 + 2;\n    };\n    /**\n     * Gets the index of the parent of the node at the given index.\n     * @param {number} index The index of the node to get the parent for.\n     * @return {number} The index of the parent.\n     * @private\n     */\n    PriorityQueue.prototype.getParentIndex_ = function (index) {\n        return (index - 1) >> 1;\n    };\n    /**\n     * Make this a heap. O(N).\n     * @private\n     */\n    PriorityQueue.prototype.heapify_ = function () {\n        var i;\n        for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n            this.siftUp_(i);\n        }\n    };\n    /**\n     * @return {boolean} Is empty.\n     */\n    PriorityQueue.prototype.isEmpty = function () {\n        return this.elements_.length === 0;\n    };\n    /**\n     * @param {string} key Key.\n     * @return {boolean} Is key queued.\n     */\n    PriorityQueue.prototype.isKeyQueued = function (key) {\n        return key in this.queuedElements_;\n    };\n    /**\n     * @param {T} element Element.\n     * @return {boolean} Is queued.\n     */\n    PriorityQueue.prototype.isQueued = function (element) {\n        return this.isKeyQueued(this.keyFunction_(element));\n    };\n    /**\n     * @param {number} index The index of the node to move down.\n     * @private\n     */\n    PriorityQueue.prototype.siftUp_ = function (index) {\n        var elements = this.elements_;\n        var priorities = this.priorities_;\n        var count = elements.length;\n        var element = elements[index];\n        var priority = priorities[index];\n        var startIndex = index;\n        while (index < (count >> 1)) {\n            var lIndex = this.getLeftChildIndex_(index);\n            var rIndex = this.getRightChildIndex_(index);\n            var smallerChildIndex = rIndex < count &&\n                priorities[rIndex] < priorities[lIndex] ?\n                rIndex : lIndex;\n            elements[index] = elements[smallerChildIndex];\n            priorities[index] = priorities[smallerChildIndex];\n            index = smallerChildIndex;\n        }\n        elements[index] = element;\n        priorities[index] = priority;\n        this.siftDown_(startIndex, index);\n    };\n    /**\n     * @param {number} startIndex The index of the root.\n     * @param {number} index The index of the node to move up.\n     * @private\n     */\n    PriorityQueue.prototype.siftDown_ = function (startIndex, index) {\n        var elements = this.elements_;\n        var priorities = this.priorities_;\n        var element = elements[index];\n        var priority = priorities[index];\n        while (index > startIndex) {\n            var parentIndex = this.getParentIndex_(index);\n            if (priorities[parentIndex] > priority) {\n                elements[index] = elements[parentIndex];\n                priorities[index] = priorities[parentIndex];\n                index = parentIndex;\n            }\n            else {\n                break;\n            }\n        }\n        elements[index] = element;\n        priorities[index] = priority;\n    };\n    /**\n     * FIXME empty description for jsdoc\n     */\n    PriorityQueue.prototype.reprioritize = function () {\n        var priorityFunction = this.priorityFunction_;\n        var elements = this.elements_;\n        var priorities = this.priorities_;\n        var index = 0;\n        var n = elements.length;\n        var element, i, priority;\n        for (i = 0; i < n; ++i) {\n            element = elements[i];\n            priority = priorityFunction(element);\n            if (priority == DROP) {\n                delete this.queuedElements_[this.keyFunction_(element)];\n            }\n            else {\n                priorities[index] = priority;\n                elements[index++] = element;\n            }\n        }\n        elements.length = index;\n        priorities.length = index;\n        this.heapify_();\n    };\n    return PriorityQueue;\n}());\nexport default PriorityQueue;\n//# sourceMappingURL=PriorityQueue.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/TileQueue\n */\nimport TileState from './TileState.js';\nimport { listen, unlisten } from './events.js';\nimport EventType from './events/EventType.js';\nimport PriorityQueue from './structs/PriorityQueue.js';\n/**\n * @typedef {function(import(\"./Tile.js\").default, string, import(\"./coordinate.js\").Coordinate, number): number} PriorityFunction\n */\nvar TileQueue = /** @class */ (function (_super) {\n    __extends(TileQueue, _super);\n    /**\n     * @param {PriorityFunction} tilePriorityFunction Tile priority function.\n     * @param {function(): ?} tileChangeCallback Function called on each tile change event.\n     */\n    function TileQueue(tilePriorityFunction, tileChangeCallback) {\n        var _this = _super.call(this, \n        /**\n         * @param {Array} element Element.\n         * @return {number} Priority.\n         */\n        function (element) {\n            return tilePriorityFunction.apply(null, element);\n        }, \n        /**\n         * @param {Array} element Element.\n         * @return {string} Key.\n         */\n        function (element) {\n            return ( /** @type {import(\"./Tile.js\").default} */(element[0]).getKey());\n        }) || this;\n        /**\n         * @private\n         * @type {function(): ?}\n         */\n        _this.tileChangeCallback_ = tileChangeCallback;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.tilesLoading_ = 0;\n        /**\n         * @private\n         * @type {!Object<string,boolean>}\n         */\n        _this.tilesLoadingKeys_ = {};\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    TileQueue.prototype.enqueue = function (element) {\n        var added = _super.prototype.enqueue.call(this, element);\n        if (added) {\n            var tile = element[0];\n            listen(tile, EventType.CHANGE, this.handleTileChange, this);\n        }\n        return added;\n    };\n    /**\n     * @return {number} Number of tiles loading.\n     */\n    TileQueue.prototype.getTilesLoading = function () {\n        return this.tilesLoading_;\n    };\n    /**\n     * @param {import(\"./events/Event.js\").default} event Event.\n     * @protected\n     */\n    TileQueue.prototype.handleTileChange = function (event) {\n        var tile = /** @type {import(\"./Tile.js\").default} */ (event.target);\n        var state = tile.getState();\n        if (tile.hifi && state === TileState.LOADED || state === TileState.ERROR ||\n            state === TileState.EMPTY || state === TileState.ABORT) {\n            unlisten(tile, EventType.CHANGE, this.handleTileChange, this);\n            var tileKey = tile.getKey();\n            if (tileKey in this.tilesLoadingKeys_) {\n                delete this.tilesLoadingKeys_[tileKey];\n                --this.tilesLoading_;\n            }\n            this.tileChangeCallback_();\n        }\n    };\n    /**\n     * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n     * @param {number} maxNewLoads Maximum number of new tiles to load.\n     */\n    TileQueue.prototype.loadMoreTiles = function (maxTotalLoading, maxNewLoads) {\n        var newLoads = 0;\n        var abortedTiles = false;\n        var state, tile, tileKey;\n        while (this.tilesLoading_ < maxTotalLoading && newLoads < maxNewLoads &&\n            this.getCount() > 0) {\n            tile = /** @type {import(\"./Tile.js\").default} */ (this.dequeue()[0]);\n            tileKey = tile.getKey();\n            state = tile.getState();\n            if (state === TileState.ABORT) {\n                abortedTiles = true;\n            }\n            else if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n                this.tilesLoadingKeys_[tileKey] = true;\n                ++this.tilesLoading_;\n                ++newLoads;\n                tile.load();\n            }\n        }\n        if (newLoads === 0 && abortedTiles) {\n            // Do not stop the render loop when all wanted tiles were aborted due to\n            // a small, saturated tile cache.\n            this.tileChangeCallback_();\n        }\n    };\n    return TileQueue;\n}(PriorityQueue));\nexport default TileQueue;\n//# sourceMappingURL=TileQueue.js.map","/**\n * @module ol/tilegrid/common\n */\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport var DEFAULT_MAX_ZOOM = 42;\n/**\n * Default tile size.\n * @type {number}\n */\nexport var DEFAULT_TILE_SIZE = 256;\n//# sourceMappingURL=common.js.map","/**\n * @module ol/centerconstraint\n */\nimport { clamp } from './math.js';\n/**\n * @typedef {function((import(\"./coordinate.js\").Coordinate|undefined), number, import(\"./size.js\").Size, boolean=): (import(\"./coordinate.js\").Coordinate|undefined)} Type\n */\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {boolean} onlyCenter If true, the constraint will only apply to the view center.\n * @param {boolean} smooth If true, the view will be able to go slightly out of the given extent\n * (only during interaction and animation).\n * @return {Type} The constraint.\n */\nexport function createExtent(extent, onlyCenter, smooth) {\n    return (\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center Center.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./size.js\").Size} size Viewport size; unused if `onlyCenter` was specified.\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n     */\n    function (center, resolution, size, opt_isMoving) {\n        if (center) {\n            var viewWidth = onlyCenter ? 0 : size[0] * resolution;\n            var viewHeight = onlyCenter ? 0 : size[1] * resolution;\n            var minX = extent[0] + viewWidth / 2;\n            var maxX = extent[2] - viewWidth / 2;\n            var minY = extent[1] + viewHeight / 2;\n            var maxY = extent[3] - viewHeight / 2;\n            // note: when zooming out of bounds, min and max values for x and y may\n            // end up inverted (min > max); this has to be accounted for\n            if (minX > maxX) {\n                minX = maxX = (maxX + minX) / 2;\n            }\n            if (minY > maxY) {\n                minY = maxY = (maxY + minY) / 2;\n            }\n            var x = clamp(center[0], minX, maxX);\n            var y = clamp(center[1], minY, maxY);\n            var ratio = 30 * resolution;\n            // during an interaction, allow some overscroll\n            if (opt_isMoving && smooth) {\n                x += -ratio * Math.log(1 + Math.max(0, minX - center[0]) / ratio) +\n                    ratio * Math.log(1 + Math.max(0, center[0] - maxX) / ratio);\n                y += -ratio * Math.log(1 + Math.max(0, minY - center[1]) / ratio) +\n                    ratio * Math.log(1 + Math.max(0, center[1] - maxY) / ratio);\n            }\n            return [x, y];\n        }\n        else {\n            return undefined;\n        }\n    });\n}\n/**\n * @param {import(\"./coordinate.js\").Coordinate=} center Center.\n * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n */\nexport function none(center) {\n    return center;\n}\n//# sourceMappingURL=centerconstraint.js.map","/**\n * @module ol/resolutionconstraint\n */\nimport { linearFindNearest } from './array.js';\nimport { getHeight, getWidth } from './extent';\nimport { clamp } from './math';\n/**\n * @typedef {function((number|undefined), number, import(\"./size.js\").Size, boolean=): (number|undefined)} Type\n */\n/**\n * Returns a modified resolution taking into acocunt the viewport size and maximum\n * allowed extent.\n * @param {number} resolution Resolution\n * @param {import(\"./extent.js\").Extent=} maxExtent Maximum allowed extent.\n * @param {import(\"./size.js\").Size} viewportSize Viewport size.\n * @return {number} Capped resolution.\n */\nfunction getViewportClampedResolution(resolution, maxExtent, viewportSize) {\n    var xResolution = getWidth(maxExtent) / viewportSize[0];\n    var yResolution = getHeight(maxExtent) / viewportSize[1];\n    return Math.min(resolution, Math.min(xResolution, yResolution));\n}\n/**\n * Returns a modified resolution to be between maxResolution and minResolution while\n * still allowing the value to be slightly out of bounds.\n * Note: the computation is based on the logarithm function (ln):\n *  - at 1, ln(x) is 0\n *  - above 1, ln(x) keeps increasing but at a much slower pace than x\n * The final result is clamped to prevent getting too far away from bounds.\n * @param {number} resolution Resolution.\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @return {number} Smoothed resolution.\n */\nfunction getSmoothClampedResolution(resolution, maxResolution, minResolution) {\n    var result = Math.min(resolution, maxResolution);\n    var ratio = 50;\n    result *= Math.log(1 + ratio * Math.max(0, resolution / maxResolution - 1)) / ratio + 1;\n    if (minResolution) {\n        result = Math.max(result, minResolution);\n        result /= Math.log(1 + ratio * Math.max(0, minResolution / resolution - 1)) / ratio + 1;\n    }\n    return clamp(result, minResolution / 2, maxResolution * 2);\n}\n/**\n * @param {Array<number>} resolutions Resolutions.\n * @param {boolean=} opt_smooth If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent=} opt_maxExtent Maximum allowed extent.\n * @return {Type} Zoom function.\n */\nexport function createSnapToResolutions(resolutions, opt_smooth, opt_maxExtent) {\n    return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n        if (resolution !== undefined) {\n            var maxResolution = resolutions[0];\n            var minResolution = resolutions[resolutions.length - 1];\n            var cappedMaxRes = opt_maxExtent ?\n                getViewportClampedResolution(maxResolution, opt_maxExtent, size) :\n                maxResolution;\n            // during interacting or animating, allow intermediary values\n            if (opt_isMoving) {\n                var smooth = opt_smooth !== undefined ? opt_smooth : true;\n                if (!smooth) {\n                    return clamp(resolution, minResolution, cappedMaxRes);\n                }\n                return getSmoothClampedResolution(resolution, cappedMaxRes, minResolution);\n            }\n            var capped = Math.min(cappedMaxRes, resolution);\n            var z = Math.floor(linearFindNearest(resolutions, capped, direction));\n            return resolutions[z];\n        }\n        else {\n            return undefined;\n        }\n    });\n}\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number=} opt_minResolution Minimum resolution.\n * @param {boolean=} opt_smooth If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent=} opt_maxExtent Maximum allowed extent.\n * @return {Type} Zoom function.\n */\nexport function createSnapToPower(power, maxResolution, opt_minResolution, opt_smooth, opt_maxExtent) {\n    return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n        if (resolution !== undefined) {\n            var cappedMaxRes = opt_maxExtent ?\n                getViewportClampedResolution(maxResolution, opt_maxExtent, size) :\n                maxResolution;\n            var minResolution = opt_minResolution !== undefined ? opt_minResolution : 0;\n            // during interacting or animating, allow intermediary values\n            if (opt_isMoving) {\n                var smooth = opt_smooth !== undefined ? opt_smooth : true;\n                if (!smooth) {\n                    return clamp(resolution, minResolution, cappedMaxRes);\n                }\n                return getSmoothClampedResolution(resolution, cappedMaxRes, minResolution);\n            }\n            var offset = -direction * (0.5 - 1e-9) + 0.5;\n            var capped = Math.min(cappedMaxRes, resolution);\n            var zoomLevel = Math.floor(Math.log(maxResolution / capped) / Math.log(power) + offset);\n            var newResolution = maxResolution / Math.pow(power, zoomLevel);\n            return clamp(newResolution, minResolution, cappedMaxRes);\n        }\n        else {\n            return undefined;\n        }\n    });\n}\n/**\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @param {boolean=} opt_smooth If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent=} opt_maxExtent Maximum allowed extent.\n * @return {Type} Zoom function.\n */\nexport function createMinMaxResolution(maxResolution, minResolution, opt_smooth, opt_maxExtent) {\n    return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n        if (resolution !== undefined) {\n            var cappedMaxRes = opt_maxExtent ?\n                getViewportClampedResolution(maxResolution, opt_maxExtent, size) :\n                maxResolution;\n            var smooth = opt_smooth !== undefined ? opt_smooth : true;\n            if (!smooth || !opt_isMoving) {\n                return clamp(resolution, minResolution, cappedMaxRes);\n            }\n            return getSmoothClampedResolution(resolution, cappedMaxRes, minResolution);\n        }\n        else {\n            return undefined;\n        }\n    });\n}\n//# sourceMappingURL=resolutionconstraint.js.map","/**\n * @module ol/rotationconstraint\n */\nimport { toRadians } from './math.js';\n/**\n * @typedef {function((number|undefined), boolean=): (number|undefined)} Type\n */\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation) {\n    if (rotation !== undefined) {\n        return 0;\n    }\n    else {\n        return undefined;\n    }\n}\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation) {\n    if (rotation !== undefined) {\n        return rotation;\n    }\n    else {\n        return undefined;\n    }\n}\n/**\n * @param {number} n N.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n    var theta = 2 * Math.PI / n;\n    return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, opt_isMoving) {\n        if (opt_isMoving) {\n            return rotation;\n        }\n        if (rotation !== undefined) {\n            rotation = Math.floor(rotation / theta + 0.5) * theta;\n            return rotation;\n        }\n        else {\n            return undefined;\n        }\n    });\n}\n/**\n * @param {number=} opt_tolerance Tolerance.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToZero(opt_tolerance) {\n    var tolerance = opt_tolerance || toRadians(5);\n    return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} opt_isMoving True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, opt_isMoving) {\n        if (opt_isMoving) {\n            return rotation;\n        }\n        if (rotation !== undefined) {\n            if (Math.abs(rotation) <= tolerance) {\n                return 0;\n            }\n            else {\n                return rotation;\n            }\n        }\n        else {\n            return undefined;\n        }\n    });\n}\n//# sourceMappingURL=rotationconstraint.js.map","/**\n * @module ol/ViewHint\n */\n/**\n * @enum {number}\n */\nexport default {\n    ANIMATING: 0,\n    INTERACTING: 1\n};\n//# sourceMappingURL=ViewHint.js.map","/**\n * @module ol/ViewProperty\n */\n/**\n * @enum {string}\n */\nexport default {\n    CENTER: 'center',\n    RESOLUTION: 'resolution',\n    ROTATION: 'rotation'\n};\n//# sourceMappingURL=ViewProperty.js.map","/**\n * @module ol/string\n */\n/**\n * @param {number} number Number to be formatted\n * @param {number} width The desired width\n * @param {number=} opt_precision Precision of the output string (i.e. number of decimal places)\n * @returns {string} Formatted string\n */\nexport function padNumber(number, width, opt_precision) {\n    var numberString = opt_precision !== undefined ? number.toFixed(opt_precision) : '' + number;\n    var decimal = numberString.indexOf('.');\n    decimal = decimal === -1 ? numberString.length : decimal;\n    return decimal > width ? numberString : new Array(1 + width - decimal).join('0') + numberString;\n}\n/**\n * Adapted from https://github.com/omichelsen/compare-versions/blob/master/index.js\n * @param {string|number} v1 First version\n * @param {string|number} v2 Second version\n * @returns {number} Value\n */\nexport function compareVersions(v1, v2) {\n    var s1 = ('' + v1).split('.');\n    var s2 = ('' + v2).split('.');\n    for (var i = 0; i < Math.max(s1.length, s2.length); i++) {\n        var n1 = parseInt(s1[i] || '0', 10);\n        var n2 = parseInt(s2[i] || '0', 10);\n        if (n1 > n2) {\n            return 1;\n        }\n        if (n2 > n1) {\n            return -1;\n        }\n    }\n    return 0;\n}\n//# sourceMappingURL=string.js.map","/**\n * @module ol/coordinate\n */\nimport { modulo } from './math.js';\nimport { padNumber } from './string.js';\n/**\n * An array of numbers representing an xy coordinate. Example: `[16, 48]`.\n * @typedef {Array<number>} Coordinate\n * @api\n */\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {Coordinate} delta Delta.\n * @return {Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n    coordinate[0] += +delta[0];\n    coordinate[1] += +delta[1];\n    return coordinate;\n}\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {import(\"./geom/Circle.js\").default} circle The circle.\n * @return {Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n    var r = circle.getRadius();\n    var center = circle.getCenter();\n    var x0 = center[0];\n    var y0 = center[1];\n    var x1 = coordinate[0];\n    var y1 = coordinate[1];\n    var dx = x1 - x0;\n    var dy = y1 - y0;\n    if (dx === 0 && dy === 0) {\n        dx = 1;\n    }\n    var d = Math.sqrt(dx * dx + dy * dy);\n    var x = x0 + r * dx / d;\n    var y = y0 + r * dy / d;\n    return [x, y];\n}\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {Array<Coordinate>} segment The two coordinates\n * of the segment.\n * @return {Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n    var x0 = coordinate[0];\n    var y0 = coordinate[1];\n    var start = segment[0];\n    var end = segment[1];\n    var x1 = start[0];\n    var y1 = start[1];\n    var x2 = end[0];\n    var y2 = end[1];\n    var dx = x2 - x1;\n    var dy = y2 - y1;\n    var along = (dx === 0 && dy === 0) ? 0 :\n        ((dx * (x0 - x1)) + (dy * (y0 - y1))) / ((dx * dx + dy * dy) || 0);\n    var x, y;\n    if (along <= 0) {\n        x = x1;\n        y = y1;\n    }\n    else if (along >= 1) {\n        x = x2;\n        y = y2;\n    }\n    else {\n        x = x1 + along * dx;\n        y = y1 + along * dy;\n    }\n    return [x, y];\n}\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY();\n *     var out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY(2);\n *     var out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(opt_fractionDigits) {\n    return (\n    /**\n     * @param {Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function (coordinate) {\n        return toStringXY(coordinate, opt_fractionDigits);\n    });\n}\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, opt_fractionDigits) {\n    var normalizedDegrees = modulo(degrees + 180, 360) - 180;\n    var x = Math.abs(3600 * normalizedDegrees);\n    var dflPrecision = opt_fractionDigits || 0;\n    var precision = Math.pow(10, dflPrecision);\n    var deg = Math.floor(x / 3600);\n    var min = Math.floor((x - deg * 3600) / 60);\n    var sec = x - (deg * 3600) - (min * 60);\n    sec = Math.ceil(sec * precision) / precision;\n    if (sec >= 60) {\n        sec = 0;\n        min += 1;\n    }\n    if (min >= 60) {\n        min = 0;\n        deg += 1;\n    }\n    return deg + '\\u00b0 ' + padNumber(min, 2) + '\\u2032 ' +\n        padNumber(sec, 2, dflPrecision) + '\\u2033' +\n        (normalizedDegrees == 0 ? '' : ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0));\n}\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, opt_fractionDigits) {\n    if (coordinate) {\n        return template\n            .replace('{x}', coordinate[0].toFixed(opt_fractionDigits))\n            .replace('{y}', coordinate[1].toFixed(opt_fractionDigits));\n    }\n    else {\n        return '';\n    }\n}\n/**\n * @param {Coordinate} coordinate1 First coordinate.\n * @param {Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n    var equals = true;\n    for (var i = coordinate1.length - 1; i >= 0; --i) {\n        if (coordinate1[i] != coordinate2[i]) {\n            equals = false;\n            break;\n        }\n    }\n    return equals;\n}\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n    var cosAngle = Math.cos(angle);\n    var sinAngle = Math.sin(angle);\n    var x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n    var y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n    coordinate[0] = x;\n    coordinate[1] = y;\n    return coordinate;\n}\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n    coordinate[0] *= scale;\n    coordinate[1] *= scale;\n    return coordinate;\n}\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n    var dx = coord1[0] - coord2[0];\n    var dy = coord1[1] - coord2[1];\n    return dx * dx + dy * dy;\n}\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n    return Math.sqrt(squaredDistance(coord1, coord2));\n}\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {Coordinate} coordinate Coordinate of the point.\n * @param {Array<Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n    return squaredDistance(coordinate, closestOnSegment(coordinate, segment));\n}\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, opt_fractionDigits) {\n    if (coordinate) {\n        return degreesToStringHDMS('NS', coordinate[1], opt_fractionDigits) + ' ' +\n            degreesToStringHDMS('EW', coordinate[0], opt_fractionDigits);\n    }\n    else {\n        return '';\n    }\n}\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, opt_fractionDigits) {\n    return format(coordinate, '{x}, {y}', opt_fractionDigits);\n}\n//# sourceMappingURL=coordinate.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/View\n */\nimport { DEFAULT_TILE_SIZE } from './tilegrid/common.js';\nimport { getUid } from './util.js';\nimport { VOID } from './functions.js';\nimport { createExtent, none as centerNone } from './centerconstraint.js';\nimport BaseObject from './Object.js';\nimport { createSnapToResolutions, createSnapToPower } from './resolutionconstraint.js';\nimport { createSnapToZero, createSnapToN, none as rotationNone, disable } from './rotationconstraint.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport { linearFindNearest } from './array.js';\nimport { assert } from './asserts.js';\nimport { add as addCoordinate, rotate as rotateCoordinate, equals as coordinatesEqual } from './coordinate.js';\nimport { inAndOut } from './easing.js';\nimport { getForViewAndSize, getCenter, getHeight, getWidth, isEmpty } from './extent.js';\nimport GeometryType from './geom/GeometryType.js';\nimport { fromExtent as polygonFromExtent } from './geom/Polygon.js';\nimport { clamp, modulo } from './math.js';\nimport { assign } from './obj.js';\nimport { createProjection, METERS_PER_UNIT } from './proj.js';\nimport Units from './proj/Units.js';\nimport { equals } from './coordinate';\nimport { easeOut } from './easing';\nimport { createMinMaxResolution } from './resolutionconstraint';\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {import(\"./coordinate.js\").Coordinate} [sourceCenter]\n * @property {import(\"./coordinate.js\").Coordinate} [targetCenter]\n * @property {number} [sourceResolution]\n * @property {number} [targetResolution]\n * @property {number} [sourceRotation]\n * @property {number} [targetRotation]\n * @property {import(\"./coordinate.js\").Coordinate} [anchor]\n * @property {number} start\n * @property {number} duration\n * @property {boolean} complete\n * @property {function(number):number} easing\n * @property {function(boolean)} callback\n */\n/**\n * @typedef {Object} Constraints\n * @property {import(\"./centerconstraint.js\").Type} center\n * @property {import(\"./resolutionconstraint.js\").Type} resolution\n * @property {import(\"./rotationconstraint.js\").Type} rotation\n */\n/**\n * @typedef {Object} FitOptions\n * @property {import(\"./size.js\").Size} [size] The size in pixels of the box to fit\n * the extent into. Default is the current size of the first map in the DOM that\n * uses this view, or `[100, 100]` if no such map is found.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [nearest=false] If the view `constrainResolution` option is `true`,\n * get the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing~inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean)} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n/**\n * @typedef {Object} ViewOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The initial center for\n * the view. The coordinate system for the center is specified with the\n * `projection` option. Layer sources will not be fetched if this is not set,\n * but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {import(\"./extent.js\").Extent} [extent] The extent that constrains the\n * view, in other words, nothing outside of this extent can be visible on the map.\n * @property {boolean} [constrainOnlyCenter=false] If true, the extent\n * constraint will only apply to the view center and not the whole extent.\n * @property {boolean} [smoothExtentConstraint=true] If true, the extent\n * constraint will be applied smoothly, i.e. allow the view to go slightly outside\n * of the given `extent`.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {boolean} [multiWorld=false] No more than one world is visible.\n * @property {boolean} [constrainResolution=false] If true, the view will always\n * animate to the closest zoom level after an interaction; false means\n * intermediary zoom levels are allowed.\n * @property {boolean} [smoothResolutionConstraint=true] If true, the resolution\n * min/max values will be applied smoothly, i. e. allow the view to exceed slightly\n * the given resolution or zoom bounds.\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array<number>} [resolutions] Resolutions to determine the\n * resolution constraint. If set the `maxResolution`, `minResolution`,\n * `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view.\n * @property {number} [zoomFactor=2] The zoom factor used to compute the\n * corresponding resolution.\n */\n/**\n * @typedef {Object} AnimationOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The center of the view at the end of\n * the animation.\n * @property {number} [zoom] The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number} [resolution] The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number} [rotation] The rotation of the view at the end of\n * the animation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Optional anchor to remain fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing~inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n/**\n * @typedef {Object} State\n * @property {import(\"./coordinate.js\").Coordinate} center\n * @property {import(\"./proj/Projection.js\").default} projection\n * @property {number} resolution\n * @property {number} rotation\n * @property {number} zoom\n */\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nvar DEFAULT_MIN_ZOOM = 0;\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * ### The view states\n *\n * An View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * The `zoom` state is actually not saved on the view: all computations\n * internally use the `resolution` state. Still, the `setZoom` and `getZoom`\n * methods are available, as well as `getResolutionForZoom` and\n * `getZoomForResolution` to switch from one system to the other.\n *\n * A View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Spherical Mercator (EPSG:3857).\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view, but any constraint defined in the constructor will\n * be applied along the way.\n *\n * A View object can have a *resolution constraint*, a *rotation constraint*\n * and a *center constraint*.\n *\n * The *resolution constraint* typically restricts min/max values and\n * snaps to specific resolutions. It is determined by the following\n * options: `resolutions`, `maxResolution`, `maxZoom`, and `zoomFactor`.\n * If `resolutions` is set, the other three options are ignored. See\n * documentation for each option for more information. By default, the view\n * only has a min/max restriction and allow intermediary zoom levels when\n * pinch-zooming for example.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default the rotation value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the view center is not constrained at all.\n *\n * ### Changing the view state\n *\n * It is important to note that `setZoom`, `setResolution`, `setCenter` and\n * `setRotation` are subject to the above mentioned constraints. As such, it\n * may sometimes not be possible to know in advance the resulting state of the\n * View. For example, calling `setResolution(10)` does not guarantee that\n * `getResolution()` will return `10`.\n *\n * A consequence of this is that, when applying a delta on the view state, one\n * should use `adjustCenter`, `adjustRotation`, `adjustZoom` and `adjustResolution`\n * rather than the corresponding setters. This will let view do its internal\n * computations. Besides, the `adjust*` methods also take an `opt_anchor`\n * argument which allows specifying an origin for the transformation.\n *\n * ### Interacting with the view\n *\n * View constraints are usually only applied when the view is *at rest*, meaning that\n * no interaction or animation is ongoing. As such, if the user puts the view in a\n * state that is not equivalent to a constrained one (e.g. rotating the view when\n * the snap angle is 0), an animation will be triggered at the interaction end to\n * put back the view to a stable state;\n *\n * @api\n */\nvar View = /** @class */ (function (_super) {\n    __extends(View, _super);\n    /**\n     * @param {ViewOptions=} opt_options View options.\n     */\n    function View(opt_options) {\n        var _this = _super.call(this) || this;\n        var options = assign({}, opt_options);\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.hints_ = [0, 0];\n        /**\n         * @private\n         * @type {Array<Array<Animation>>}\n         */\n        _this.animations_ = [];\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.updateAnimationKey_;\n        /**\n         * @private\n         * @const\n         * @type {import(\"./proj/Projection.js\").default}\n         */\n        _this.projection_ = createProjection(options.projection, 'EPSG:3857');\n        /**\n         * @private\n         * @type {import(\"./coordinate.js\").Coordinate|undefined}\n         */\n        _this.targetCenter_ = null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.targetResolution_;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.targetRotation_;\n        _this.applyOptions_(options);\n        return _this;\n    }\n    /**\n     * Set up the view with the given options.\n     * @param {ViewOptions} options View options.\n     */\n    View.prototype.applyOptions_ = function (options) {\n        /**\n         * @type {Object<string, *>}\n         */\n        var properties = {};\n        var resolutionConstraintInfo = createResolutionConstraint(options);\n        /**\n         * @private\n         * @type {number}\n         */\n        this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.minResolution_ = resolutionConstraintInfo.minResolution;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n        /**\n         * @private\n         * @type {Array<number>|undefined}\n         */\n        this.resolutions_ = options.resolutions;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.minZoom_ = resolutionConstraintInfo.minZoom;\n        var centerConstraint = createCenterConstraint(options);\n        var resolutionConstraint = resolutionConstraintInfo.constraint;\n        var rotationConstraint = createRotationConstraint(options);\n        /**\n         * @private\n         * @type {Constraints}\n         */\n        this.constraints_ = {\n            center: centerConstraint,\n            resolution: resolutionConstraint,\n            rotation: rotationConstraint\n        };\n        this.setRotation(options.rotation !== undefined ? options.rotation : 0);\n        this.setCenter(options.center !== undefined ? options.center : null);\n        if (options.resolution !== undefined) {\n            this.setResolution(options.resolution);\n        }\n        else if (options.zoom !== undefined) {\n            this.setZoom(options.zoom);\n        }\n        this.resolveConstraints(0);\n        this.setProperties(properties);\n        /**\n         * @private\n         * @type {ViewOptions}\n         */\n        this.options_ = options;\n    };\n    /**\n     * Get an updated version of the view options used to construct the view.  The\n     * current resolution (or zoom), center, and rotation are applied to any stored\n     * options.  The provided options can be used to apply new min/max zoom or\n     * resolution limits.\n     * @param {ViewOptions} newOptions New options to be applied.\n     * @return {ViewOptions} New options updated with the current view state.\n     */\n    View.prototype.getUpdatedOptions_ = function (newOptions) {\n        var options = assign({}, this.options_);\n        // preserve resolution (or zoom)\n        if (options.resolution !== undefined) {\n            options.resolution = this.getResolution();\n        }\n        else {\n            options.zoom = this.getZoom();\n        }\n        // preserve center\n        options.center = this.getCenter();\n        // preserve rotation\n        options.rotation = this.getRotation();\n        return assign({}, options, newOptions);\n    };\n    /**\n     * Animate the view.  The view's center, zoom (or resolution), and rotation\n     * can be animated for smooth transitions between view states.  For example,\n     * to animate the view to a new zoom level:\n     *\n     *     view.animate({zoom: view.getZoom() + 1});\n     *\n     * By default, the animation lasts one second and uses in-and-out easing.  You\n     * can customize this behavior by including `duration` (in milliseconds) and\n     * `easing` options (see {@link module:ol/easing}).\n     *\n     * To chain together multiple animations, call the method with multiple\n     * animation objects.  For example, to first zoom and then pan:\n     *\n     *     view.animate({zoom: 10}, {center: [0, 0]});\n     *\n     * If you provide a function as the last argument to the animate method, it\n     * will get called at the end of an animation series.  The callback will be\n     * called with `true` if the animation series completed on its own or `false`\n     * if it was cancelled.\n     *\n     * Animations are cancelled by user interactions (e.g. dragging the map) or by\n     * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n     * (or another method that calls one of these).\n     *\n     * @param {...(AnimationOptions|function(boolean): void)} var_args Animation\n     *     options.  Multiple animations can be run in series by passing multiple\n     *     options objects.  To run multiple animations in parallel, call the method\n     *     multiple times.  An optional callback can be provided as a final\n     *     argument.  The callback will be called with a boolean indicating whether\n     *     the animation completed without being cancelled.\n     * @api\n     */\n    View.prototype.animate = function (var_args) {\n        if (this.isDef() && !this.getAnimating()) {\n            this.resolveConstraints(0);\n        }\n        this.animate_.apply(this, arguments);\n    };\n    /**\n     * @private\n     * @param {...(AnimationOptions|function(boolean): void)} var_args Animation options.\n     */\n    View.prototype.animate_ = function (var_args) {\n        var animationCount = arguments.length;\n        var callback;\n        if (animationCount > 1 && typeof arguments[animationCount - 1] === 'function') {\n            callback = arguments[animationCount - 1];\n            --animationCount;\n        }\n        if (!this.isDef()) {\n            // if view properties are not yet set, shortcut to the final state\n            var state = arguments[animationCount - 1];\n            if (state.center) {\n                this.setCenter(state.center);\n            }\n            if (state.zoom !== undefined) {\n                this.setZoom(state.zoom);\n            }\n            if (state.rotation !== undefined) {\n                this.setRotation(state.rotation);\n            }\n            if (callback) {\n                animationCallback(callback, true);\n            }\n            return;\n        }\n        var start = Date.now();\n        var center = this.targetCenter_.slice();\n        var resolution = this.targetResolution_;\n        var rotation = this.targetRotation_;\n        var series = [];\n        for (var i = 0; i < animationCount; ++i) {\n            var options = /** @type {AnimationOptions} */ (arguments[i]);\n            var animation = {\n                start: start,\n                complete: false,\n                anchor: options.anchor,\n                duration: options.duration !== undefined ? options.duration : 1000,\n                easing: options.easing || inAndOut,\n                callback: callback\n            };\n            if (options.center) {\n                animation.sourceCenter = center;\n                animation.targetCenter = options.center.slice();\n                center = animation.targetCenter;\n            }\n            if (options.zoom !== undefined) {\n                animation.sourceResolution = resolution;\n                animation.targetResolution = this.getResolutionForZoom(options.zoom);\n                resolution = animation.targetResolution;\n            }\n            else if (options.resolution) {\n                animation.sourceResolution = resolution;\n                animation.targetResolution = options.resolution;\n                resolution = animation.targetResolution;\n            }\n            if (options.rotation !== undefined) {\n                animation.sourceRotation = rotation;\n                var delta = modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n                animation.targetRotation = rotation + delta;\n                rotation = animation.targetRotation;\n            }\n            // check if animation is a no-op\n            if (isNoopAnimation(animation)) {\n                animation.complete = true;\n                // we still push it onto the series for callback handling\n            }\n            else {\n                start += animation.duration;\n            }\n            series.push(animation);\n        }\n        this.animations_.push(series);\n        this.setHint(ViewHint.ANIMATING, 1);\n        this.updateAnimations_();\n    };\n    /**\n     * Determine if the view is being animated.\n     * @return {boolean} The view is being animated.\n     * @api\n     */\n    View.prototype.getAnimating = function () {\n        return this.hints_[ViewHint.ANIMATING] > 0;\n    };\n    /**\n     * Determine if the user is interacting with the view, such as panning or zooming.\n     * @return {boolean} The view is being interacted with.\n     * @api\n     */\n    View.prototype.getInteracting = function () {\n        return this.hints_[ViewHint.INTERACTING] > 0;\n    };\n    /**\n     * Cancel any ongoing animations.\n     * @api\n     */\n    View.prototype.cancelAnimations = function () {\n        this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n        for (var i = 0, ii = this.animations_.length; i < ii; ++i) {\n            var series = this.animations_[i];\n            if (series[0].callback) {\n                animationCallback(series[0].callback, false);\n            }\n        }\n        this.animations_.length = 0;\n    };\n    /**\n     * Update all animations.\n     */\n    View.prototype.updateAnimations_ = function () {\n        if (this.updateAnimationKey_ !== undefined) {\n            cancelAnimationFrame(this.updateAnimationKey_);\n            this.updateAnimationKey_ = undefined;\n        }\n        if (!this.getAnimating()) {\n            return;\n        }\n        var now = Date.now();\n        var more = false;\n        for (var i = this.animations_.length - 1; i >= 0; --i) {\n            var series = this.animations_[i];\n            var seriesComplete = true;\n            for (var j = 0, jj = series.length; j < jj; ++j) {\n                var animation = series[j];\n                if (animation.complete) {\n                    continue;\n                }\n                var elapsed = now - animation.start;\n                var fraction = animation.duration > 0 ? elapsed / animation.duration : 1;\n                if (fraction >= 1) {\n                    animation.complete = true;\n                    fraction = 1;\n                }\n                else {\n                    seriesComplete = false;\n                }\n                var progress = animation.easing(fraction);\n                if (animation.sourceCenter) {\n                    var x0 = animation.sourceCenter[0];\n                    var y0 = animation.sourceCenter[1];\n                    var x1 = animation.targetCenter[0];\n                    var y1 = animation.targetCenter[1];\n                    var x = x0 + progress * (x1 - x0);\n                    var y = y0 + progress * (y1 - y0);\n                    this.targetCenter_ = [x, y];\n                }\n                if (animation.sourceResolution && animation.targetResolution) {\n                    var resolution = progress === 1 ?\n                        animation.targetResolution :\n                        animation.sourceResolution + progress * (animation.targetResolution - animation.sourceResolution);\n                    if (animation.anchor) {\n                        var size = this.getSizeFromViewport_(this.getRotation());\n                        var constrainedResolution = this.constraints_.resolution(resolution, 0, size, true);\n                        this.targetCenter_ = this.calculateCenterZoom(constrainedResolution, animation.anchor);\n                    }\n                    this.targetResolution_ = resolution;\n                    this.applyTargetState_(true);\n                }\n                if (animation.sourceRotation !== undefined && animation.targetRotation !== undefined) {\n                    var rotation = progress === 1 ?\n                        modulo(animation.targetRotation + Math.PI, 2 * Math.PI) - Math.PI :\n                        animation.sourceRotation + progress * (animation.targetRotation - animation.sourceRotation);\n                    if (animation.anchor) {\n                        var constrainedRotation = this.constraints_.rotation(rotation, true);\n                        this.targetCenter_ = this.calculateCenterRotate(constrainedRotation, animation.anchor);\n                    }\n                    this.targetRotation_ = rotation;\n                }\n                this.applyTargetState_(true);\n                more = true;\n                if (!animation.complete) {\n                    break;\n                }\n            }\n            if (seriesComplete) {\n                this.animations_[i] = null;\n                this.setHint(ViewHint.ANIMATING, -1);\n                var callback = series[0].callback;\n                if (callback) {\n                    animationCallback(callback, true);\n                }\n            }\n        }\n        // prune completed series\n        this.animations_ = this.animations_.filter(Boolean);\n        if (more && this.updateAnimationKey_ === undefined) {\n            this.updateAnimationKey_ = requestAnimationFrame(this.updateAnimations_.bind(this));\n        }\n    };\n    /**\n     * @param {number} rotation Target rotation.\n     * @param {import(\"./coordinate.js\").Coordinate} anchor Rotation anchor.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for rotation and anchor.\n     */\n    View.prototype.calculateCenterRotate = function (rotation, anchor) {\n        var center;\n        var currentCenter = this.getCenter();\n        if (currentCenter !== undefined) {\n            center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n            rotateCoordinate(center, rotation - this.getRotation());\n            addCoordinate(center, anchor);\n        }\n        return center;\n    };\n    /**\n     * @param {number} resolution Target resolution.\n     * @param {import(\"./coordinate.js\").Coordinate} anchor Zoom anchor.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for resolution and anchor.\n     */\n    View.prototype.calculateCenterZoom = function (resolution, anchor) {\n        var center;\n        var currentCenter = this.getCenter();\n        var currentResolution = this.getResolution();\n        if (currentCenter !== undefined && currentResolution !== undefined) {\n            var x = anchor[0] - resolution * (anchor[0] - currentCenter[0]) / currentResolution;\n            var y = anchor[1] - resolution * (anchor[1] - currentCenter[1]) / currentResolution;\n            center = [x, y];\n        }\n        return center;\n    };\n    /**\n     * @private\n     * @param {number=} opt_rotation Take into account the rotation of the viewport when giving the size\n     * @return {import(\"./size.js\").Size} Viewport size or `[100, 100]` when no viewport is found.\n     */\n    View.prototype.getSizeFromViewport_ = function (opt_rotation) {\n        var size = [100, 100];\n        var selector = '.ol-viewport[data-view=\"' + getUid(this) + '\"]';\n        var element = document.querySelector(selector);\n        if (element) {\n            var metrics = getComputedStyle(element);\n            size[0] = parseInt(metrics.width, 10);\n            size[1] = parseInt(metrics.height, 10);\n        }\n        if (opt_rotation) {\n            var w = size[0];\n            var h = size[1];\n            size[0] = Math.abs(w * Math.cos(opt_rotation)) + Math.abs(h * Math.sin(opt_rotation));\n            size[1] = Math.abs(w * Math.sin(opt_rotation)) + Math.abs(h * Math.cos(opt_rotation));\n        }\n        return size;\n    };\n    /**\n     * Get the view center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n     * @observable\n     * @api\n     */\n    View.prototype.getCenter = function () {\n        return (\n        /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (this.get(ViewProperty.CENTER)));\n    };\n    /**\n     * @return {Constraints} Constraints.\n     */\n    View.prototype.getConstraints = function () {\n        return this.constraints_;\n    };\n    /**\n     * @param {Array<number>=} opt_hints Destination array.\n     * @return {Array<number>} Hint.\n     */\n    View.prototype.getHints = function (opt_hints) {\n        if (opt_hints !== undefined) {\n            opt_hints[0] = this.hints_[0];\n            opt_hints[1] = this.hints_[1];\n            return opt_hints;\n        }\n        else {\n            return this.hints_.slice();\n        }\n    };\n    /**\n     * Calculate the extent for the current view state and the passed size.\n     * The size is the pixel dimensions of the box into which the calculated extent\n     * should fit. In most cases you want to get the extent of the entire map,\n     * that is `map.getSize()`.\n     * @param {import(\"./size.js\").Size=} opt_size Box pixel size. If not provided, the size of the\n     * first map that uses this view will be used.\n     * @return {import(\"./extent.js\").Extent} Extent.\n     * @api\n     */\n    View.prototype.calculateExtent = function (opt_size) {\n        var size = opt_size || this.getSizeFromViewport_();\n        var center = /** @type {!import(\"./coordinate.js\").Coordinate} */ (this.getCenter());\n        assert(center, 1); // The view center is not defined\n        var resolution = /** @type {!number} */ (this.getResolution());\n        assert(resolution !== undefined, 2); // The view resolution is not defined\n        var rotation = /** @type {!number} */ (this.getRotation());\n        assert(rotation !== undefined, 3); // The view rotation is not defined\n        return getForViewAndSize(center, resolution, rotation, size);\n    };\n    /**\n     * Get the maximum resolution of the view.\n     * @return {number} The maximum resolution of the view.\n     * @api\n     */\n    View.prototype.getMaxResolution = function () {\n        return this.maxResolution_;\n    };\n    /**\n     * Get the minimum resolution of the view.\n     * @return {number} The minimum resolution of the view.\n     * @api\n     */\n    View.prototype.getMinResolution = function () {\n        return this.minResolution_;\n    };\n    /**\n     * Get the maximum zoom level for the view.\n     * @return {number} The maximum zoom level.\n     * @api\n     */\n    View.prototype.getMaxZoom = function () {\n        return /** @type {number} */ (this.getZoomForResolution(this.minResolution_));\n    };\n    /**\n     * Set a new maximum zoom level for the view.\n     * @param {number} zoom The maximum zoom level.\n     * @api\n     */\n    View.prototype.setMaxZoom = function (zoom) {\n        this.applyOptions_(this.getUpdatedOptions_({ maxZoom: zoom }));\n    };\n    /**\n     * Get the minimum zoom level for the view.\n     * @return {number} The minimum zoom level.\n     * @api\n     */\n    View.prototype.getMinZoom = function () {\n        return /** @type {number} */ (this.getZoomForResolution(this.maxResolution_));\n    };\n    /**\n     * Set a new minimum zoom level for the view.\n     * @param {number} zoom The minimum zoom level.\n     * @api\n     */\n    View.prototype.setMinZoom = function (zoom) {\n        this.applyOptions_(this.getUpdatedOptions_({ minZoom: zoom }));\n    };\n    /**\n     * Set whether the view shoud allow intermediary zoom levels.\n     * @param {boolean} enabled Whether the resolution is constrained.\n     * @api\n     */\n    View.prototype.setConstrainResolution = function (enabled) {\n        this.applyOptions_(this.getUpdatedOptions_({ constrainResolution: enabled }));\n    };\n    /**\n     * Get the view projection.\n     * @return {import(\"./proj/Projection.js\").default} The projection of the view.\n     * @api\n     */\n    View.prototype.getProjection = function () {\n        return this.projection_;\n    };\n    /**\n     * Get the view resolution.\n     * @return {number|undefined} The resolution of the view.\n     * @observable\n     * @api\n     */\n    View.prototype.getResolution = function () {\n        return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n    };\n    /**\n     * Get the resolutions for the view. This returns the array of resolutions\n     * passed to the constructor of the View, or undefined if none were given.\n     * @return {Array<number>|undefined} The resolutions of the view.\n     * @api\n     */\n    View.prototype.getResolutions = function () {\n        return this.resolutions_;\n    };\n    /**\n     * Get the resolution for a provided extent (in map units) and size (in pixels).\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {import(\"./size.js\").Size=} opt_size Box pixel size.\n     * @return {number} The resolution at which the provided extent will render at\n     *     the given size.\n     * @api\n     */\n    View.prototype.getResolutionForExtent = function (extent, opt_size) {\n        var size = opt_size || this.getSizeFromViewport_();\n        var xResolution = getWidth(extent) / size[0];\n        var yResolution = getHeight(extent) / size[1];\n        return Math.max(xResolution, yResolution);\n    };\n    /**\n     * Return a function that returns a value between 0 and 1 for a\n     * resolution. Exponential scaling is assumed.\n     * @param {number=} opt_power Power.\n     * @return {function(number): number} Resolution for value function.\n     */\n    View.prototype.getResolutionForValueFunction = function (opt_power) {\n        var power = opt_power || 2;\n        var maxResolution = this.maxResolution_;\n        var minResolution = this.minResolution_;\n        var max = Math.log(maxResolution / minResolution) / Math.log(power);\n        return (\n        /**\n         * @param {number} value Value.\n         * @return {number} Resolution.\n         */\n        function (value) {\n            var resolution = maxResolution / Math.pow(power, value * max);\n            return resolution;\n        });\n    };\n    /**\n     * Get the view rotation.\n     * @return {number} The rotation of the view in radians.\n     * @observable\n     * @api\n     */\n    View.prototype.getRotation = function () {\n        return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n    };\n    /**\n     * Return a function that returns a resolution for a value between\n     * 0 and 1. Exponential scaling is assumed.\n     * @param {number=} opt_power Power.\n     * @return {function(number): number} Value for resolution function.\n     */\n    View.prototype.getValueForResolutionFunction = function (opt_power) {\n        var power = opt_power || 2;\n        var maxResolution = this.maxResolution_;\n        var minResolution = this.minResolution_;\n        var max = Math.log(maxResolution / minResolution) / Math.log(power);\n        return (\n        /**\n         * @param {number} resolution Resolution.\n         * @return {number} Value.\n         */\n        function (resolution) {\n            var value = (Math.log(maxResolution / resolution) / Math.log(power)) / max;\n            return value;\n        });\n    };\n    /**\n     * @param {number} pixelRatio Pixel ratio for center rounding.\n     * @return {State} View state.\n     */\n    View.prototype.getState = function (pixelRatio) {\n        var center = /** @type {import(\"./coordinate.js\").Coordinate} */ (this.getCenter());\n        var projection = this.getProjection();\n        var resolution = /** @type {number} */ (this.getResolution());\n        var rotation = this.getRotation();\n        return {\n            center: center.slice(0),\n            projection: projection !== undefined ? projection : null,\n            resolution: resolution,\n            rotation: rotation,\n            zoom: this.getZoom()\n        };\n    };\n    /**\n     * Get the current zoom level. This method may return non-integer zoom levels\n     * if the view does not constrain the resolution, or if an interaction or\n     * animation is underway.\n     * @return {number|undefined} Zoom.\n     * @api\n     */\n    View.prototype.getZoom = function () {\n        var zoom;\n        var resolution = this.getResolution();\n        if (resolution !== undefined) {\n            zoom = this.getZoomForResolution(resolution);\n        }\n        return zoom;\n    };\n    /**\n     * Get the zoom level for a resolution.\n     * @param {number} resolution The resolution.\n     * @return {number|undefined} The zoom level for the provided resolution.\n     * @api\n     */\n    View.prototype.getZoomForResolution = function (resolution) {\n        var offset = this.minZoom_ || 0;\n        var max, zoomFactor;\n        if (this.resolutions_) {\n            var nearest = linearFindNearest(this.resolutions_, resolution, 1);\n            offset = nearest;\n            max = this.resolutions_[nearest];\n            if (nearest == this.resolutions_.length - 1) {\n                zoomFactor = 2;\n            }\n            else {\n                zoomFactor = max / this.resolutions_[nearest + 1];\n            }\n        }\n        else {\n            max = this.maxResolution_;\n            zoomFactor = this.zoomFactor_;\n        }\n        return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n    };\n    /**\n     * Get the resolution for a zoom level.\n     * @param {number} zoom Zoom level.\n     * @return {number} The view resolution for the provided zoom level.\n     * @api\n     */\n    View.prototype.getResolutionForZoom = function (zoom) {\n        if (this.resolutions_) {\n            if (this.resolutions_.length <= 1) {\n                return 0;\n            }\n            var baseLevel = clamp(Math.floor(zoom), 0, this.resolutions_.length - 2);\n            var zoomFactor = this.resolutions_[baseLevel] / this.resolutions_[baseLevel + 1];\n            return this.resolutions_[baseLevel] / Math.pow(zoomFactor, clamp(zoom - baseLevel, 0, 1));\n        }\n        else {\n            return this.maxResolution_ / Math.pow(this.zoomFactor_, zoom - this.minZoom_);\n        }\n    };\n    /**\n     * Fit the given geometry or extent based on the given map size and border.\n     * The size is pixel dimensions of the box to fit the extent into.\n     * In most cases you will want to use the map size, that is `map.getSize()`.\n     * Takes care of the map angle.\n     * @param {import(\"./geom/SimpleGeometry.js\").default|import(\"./extent.js\").Extent} geometryOrExtent The geometry or\n     *     extent to fit the view to.\n     * @param {FitOptions=} opt_options Options.\n     * @api\n     */\n    View.prototype.fit = function (geometryOrExtent, opt_options) {\n        var options = opt_options || {};\n        var size = options.size;\n        if (!size) {\n            size = this.getSizeFromViewport_();\n        }\n        /** @type {import(\"./geom/SimpleGeometry.js\").default} */\n        var geometry;\n        assert(Array.isArray(geometryOrExtent) || typeof /** @type {?} */ (geometryOrExtent).getSimplifiedGeometry === 'function', 24); // Invalid extent or geometry provided as `geometry`\n        if (Array.isArray(geometryOrExtent)) {\n            assert(!isEmpty(geometryOrExtent), 25); // Cannot fit empty extent provided as `geometry`\n            geometry = polygonFromExtent(geometryOrExtent);\n        }\n        else if (geometryOrExtent.getType() === GeometryType.CIRCLE) {\n            geometryOrExtent = geometryOrExtent.getExtent();\n            geometry = polygonFromExtent(geometryOrExtent);\n            geometry.rotate(this.getRotation(), getCenter(geometryOrExtent));\n        }\n        else {\n            geometry = geometryOrExtent;\n        }\n        var padding = options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n        var nearest = options.nearest !== undefined ? options.nearest : false;\n        var minResolution;\n        if (options.minResolution !== undefined) {\n            minResolution = options.minResolution;\n        }\n        else if (options.maxZoom !== undefined) {\n            minResolution = this.getResolutionForZoom(options.maxZoom);\n        }\n        else {\n            minResolution = 0;\n        }\n        var coords = geometry.getFlatCoordinates();\n        // calculate rotated extent\n        var rotation = this.getRotation();\n        var cosAngle = Math.cos(-rotation);\n        var sinAngle = Math.sin(-rotation);\n        var minRotX = +Infinity;\n        var minRotY = +Infinity;\n        var maxRotX = -Infinity;\n        var maxRotY = -Infinity;\n        var stride = geometry.getStride();\n        for (var i = 0, ii = coords.length; i < ii; i += stride) {\n            var rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n            var rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n            minRotX = Math.min(minRotX, rotX);\n            minRotY = Math.min(minRotY, rotY);\n            maxRotX = Math.max(maxRotX, rotX);\n            maxRotY = Math.max(maxRotY, rotY);\n        }\n        // calculate resolution\n        var resolution = this.getResolutionForExtent([minRotX, minRotY, maxRotX, maxRotY], [size[0] - padding[1] - padding[3], size[1] - padding[0] - padding[2]]);\n        resolution = isNaN(resolution) ? minResolution :\n            Math.max(resolution, minResolution);\n        resolution = this.getConstrainedResolution(resolution, nearest ? 0 : 1);\n        // calculate center\n        sinAngle = -sinAngle; // go back to original rotation\n        var centerRotX = (minRotX + maxRotX) / 2;\n        var centerRotY = (minRotY + maxRotY) / 2;\n        centerRotX += (padding[1] - padding[3]) / 2 * resolution;\n        centerRotY += (padding[0] - padding[2]) / 2 * resolution;\n        var centerX = centerRotX * cosAngle - centerRotY * sinAngle;\n        var centerY = centerRotY * cosAngle + centerRotX * sinAngle;\n        var center = [centerX, centerY];\n        var callback = options.callback ? options.callback : VOID;\n        if (options.duration !== undefined) {\n            this.animate_({\n                resolution: resolution,\n                center: this.getConstrainedCenter(center, resolution),\n                duration: options.duration,\n                easing: options.easing\n            }, callback);\n        }\n        else {\n            this.targetResolution_ = resolution;\n            this.targetCenter_ = center;\n            this.applyTargetState_(false, true);\n            animationCallback(callback, true);\n        }\n    };\n    /**\n     * Center on coordinate and view position.\n     * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {import(\"./size.js\").Size} size Box pixel size.\n     * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n     * @api\n     */\n    View.prototype.centerOn = function (coordinate, size, position) {\n        // calculate rotated position\n        var rotation = this.getRotation();\n        var cosAngle = Math.cos(-rotation);\n        var sinAngle = Math.sin(-rotation);\n        var rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n        var rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n        var resolution = this.getResolution();\n        rotX += (size[0] / 2 - position[0]) * resolution;\n        rotY += (position[1] - size[1] / 2) * resolution;\n        // go back to original angle\n        sinAngle = -sinAngle; // go back to original rotation\n        var centerX = rotX * cosAngle - rotY * sinAngle;\n        var centerY = rotY * cosAngle + rotX * sinAngle;\n        this.setCenter([centerX, centerY]);\n    };\n    /**\n     * @return {boolean} Is defined.\n     */\n    View.prototype.isDef = function () {\n        return !!this.getCenter() && this.getResolution() !== undefined;\n    };\n    /**\n     * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n     * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n     * @api\n     */\n    View.prototype.adjustCenter = function (deltaCoordinates) {\n        var center = this.targetCenter_;\n        this.setCenter([center[0] + deltaCoordinates[0], center[1] + deltaCoordinates[1]]);\n    };\n    /**\n     * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n     * constraint will apply.\n     * @param {number} ratio The ratio to apply on the view resolution.\n     * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The origin of the transformation.\n     * @observable\n     * @api\n     */\n    View.prototype.adjustResolution = function (ratio, opt_anchor) {\n        var isMoving = this.getAnimating() || this.getInteracting();\n        var size = this.getSizeFromViewport_(this.getRotation());\n        var newResolution = this.constraints_.resolution(this.targetResolution_ * ratio, 0, size, isMoving);\n        if (opt_anchor !== undefined) {\n            this.targetCenter_ = this.calculateCenterZoom(newResolution, opt_anchor);\n        }\n        this.targetResolution_ *= ratio;\n        this.applyTargetState_();\n    };\n    /**\n     * Adds a value to the view zoom level, optionally using an anchor. Any resolution\n     * constraint will apply.\n     * @param {number} delta Relative value to add to the zoom level.\n     * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The origin of the transformation.\n     * @api\n     */\n    View.prototype.adjustZoom = function (delta, opt_anchor) {\n        this.adjustResolution(Math.pow(this.zoomFactor_, -delta), opt_anchor);\n    };\n    /**\n     * Adds a value to the view rotation, optionally using an anchor. Any rotation\n     * constraint will apply.\n     * @param {number} delta Relative value to add to the zoom rotation, in radians.\n     * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The rotation center.\n     * @observable\n     * @api\n     */\n    View.prototype.adjustRotation = function (delta, opt_anchor) {\n        var isMoving = this.getAnimating() || this.getInteracting();\n        var newRotation = this.constraints_.rotation(this.targetRotation_ + delta, isMoving);\n        if (opt_anchor !== undefined) {\n            this.targetCenter_ = this.calculateCenterRotate(newRotation, opt_anchor);\n        }\n        this.targetRotation_ += delta;\n        this.applyTargetState_();\n    };\n    /**\n     * Set the center of the current view. Any extent constraint will apply.\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n     * @observable\n     * @api\n     */\n    View.prototype.setCenter = function (center) {\n        this.targetCenter_ = center;\n        this.applyTargetState_();\n    };\n    /**\n     * @param {ViewHint} hint Hint.\n     * @param {number} delta Delta.\n     * @return {number} New value.\n     */\n    View.prototype.setHint = function (hint, delta) {\n        this.hints_[hint] += delta;\n        this.changed();\n        return this.hints_[hint];\n    };\n    /**\n     * Set the resolution for this view. Any resolution constraint will apply.\n     * @param {number|undefined} resolution The resolution of the view.\n     * @observable\n     * @api\n     */\n    View.prototype.setResolution = function (resolution) {\n        this.targetResolution_ = resolution;\n        this.applyTargetState_();\n    };\n    /**\n     * Set the rotation for this view. Any rotation constraint will apply.\n     * @param {number} rotation The rotation of the view in radians.\n     * @observable\n     * @api\n     */\n    View.prototype.setRotation = function (rotation) {\n        this.targetRotation_ = rotation;\n        this.applyTargetState_();\n    };\n    /**\n     * Zoom to a specific zoom level. Any resolution constrain will apply.\n     * @param {number} zoom Zoom level.\n     * @api\n     */\n    View.prototype.setZoom = function (zoom) {\n        this.setResolution(this.getResolutionForZoom(zoom));\n    };\n    /**\n     * Recompute rotation/resolution/center based on target values.\n     * Note: we have to compute rotation first, then resolution and center considering that\n     * parameters can influence one another in case a view extent constraint is present.\n     * @param {boolean=} opt_doNotCancelAnims Do not cancel animations.\n     * @param {boolean=} opt_forceMoving Apply constraints as if the view is moving.\n     * @private\n     */\n    View.prototype.applyTargetState_ = function (opt_doNotCancelAnims, opt_forceMoving) {\n        var isMoving = this.getAnimating() || this.getInteracting() || opt_forceMoving;\n        // compute rotation\n        var newRotation = this.constraints_.rotation(this.targetRotation_, isMoving);\n        var size = this.getSizeFromViewport_(newRotation);\n        var newResolution = this.constraints_.resolution(this.targetResolution_, 0, size, isMoving);\n        var newCenter = this.constraints_.center(this.targetCenter_, newResolution, size, isMoving);\n        if (this.get(ViewProperty.ROTATION) !== newRotation) {\n            this.set(ViewProperty.ROTATION, newRotation);\n        }\n        if (this.get(ViewProperty.RESOLUTION) !== newResolution) {\n            this.set(ViewProperty.RESOLUTION, newResolution);\n        }\n        if (!this.get(ViewProperty.CENTER) || !equals(this.get(ViewProperty.CENTER), newCenter)) {\n            this.set(ViewProperty.CENTER, newCenter);\n        }\n        if (this.getAnimating() && !opt_doNotCancelAnims) {\n            this.cancelAnimations();\n        }\n    };\n    /**\n     * If any constraints need to be applied, an animation will be triggered.\n     * This is typically done on interaction end.\n     * Note: calling this with a duration of 0 will apply the constrained values straight away,\n     * without animation.\n     * @param {number=} opt_duration The animation duration in ms.\n     * @param {number=} opt_resolutionDirection Which direction to zoom.\n     * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The origin of the transformation.\n     */\n    View.prototype.resolveConstraints = function (opt_duration, opt_resolutionDirection, opt_anchor) {\n        var duration = opt_duration !== undefined ? opt_duration : 200;\n        var direction = opt_resolutionDirection || 0;\n        var newRotation = this.constraints_.rotation(this.targetRotation_);\n        var size = this.getSizeFromViewport_(newRotation);\n        var newResolution = this.constraints_.resolution(this.targetResolution_, direction, size);\n        var newCenter = this.constraints_.center(this.targetCenter_, newResolution, size);\n        if (duration === 0) {\n            this.targetResolution_ = newResolution;\n            this.targetRotation_ = newRotation;\n            this.targetCenter_ = newCenter;\n            this.applyTargetState_();\n            return;\n        }\n        if (this.getResolution() !== newResolution ||\n            this.getRotation() !== newRotation ||\n            !this.getCenter() ||\n            !equals(this.getCenter(), newCenter)) {\n            if (this.getAnimating()) {\n                this.cancelAnimations();\n            }\n            this.animate_({\n                rotation: newRotation,\n                center: newCenter,\n                resolution: newResolution,\n                duration: duration,\n                easing: easeOut,\n                anchor: opt_anchor\n            });\n        }\n    };\n    /**\n     * Notify the View that an interaction has started.\n     * The view state will be resolved to a stable one if needed\n     * (depending on its constraints).\n     * @api\n     */\n    View.prototype.beginInteraction = function () {\n        this.resolveConstraints(0);\n        this.setHint(ViewHint.INTERACTING, 1);\n    };\n    /**\n     * Notify the View that an interaction has ended. The view state will be resolved\n     * to a stable one if needed (depending on its constraints).\n     * @param {number=} opt_duration Animation duration in ms.\n     * @param {number=} opt_resolutionDirection Which direction to zoom.\n     * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The origin of the transformation.\n     * @api\n     */\n    View.prototype.endInteraction = function (opt_duration, opt_resolutionDirection, opt_anchor) {\n        this.setHint(ViewHint.INTERACTING, -1);\n        this.resolveConstraints(opt_duration, opt_resolutionDirection, opt_anchor);\n    };\n    /**\n     * Get a valid position for the view center according to the current constraints.\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} targetCenter Target center position.\n     * @param {number=} opt_targetResolution Target resolution. If not supplied, the current one will be used.\n     * This is useful to guess a valid center position at a different zoom level.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Valid center position.\n     */\n    View.prototype.getConstrainedCenter = function (targetCenter, opt_targetResolution) {\n        var size = this.getSizeFromViewport_(this.getRotation());\n        return this.constraints_.center(targetCenter, opt_targetResolution || this.getResolution(), size);\n    };\n    /**\n     * Get a valid zoom level according to the current view constraints.\n     * @param {number|undefined} targetZoom Target zoom.\n     * @param {number=} opt_direction Direction. Default is `0`. Specify `-1` or `1` to return\n     * the available value respectively lower or greater than the target one. Leaving `0` will simply choose\n     * the nearest available value.\n     * @return {number|undefined} Valid zoom level.\n     */\n    View.prototype.getConstrainedZoom = function (targetZoom, opt_direction) {\n        var targetRes = this.getResolutionForZoom(targetZoom);\n        return this.getZoomForResolution(this.getConstrainedResolution(targetRes));\n    };\n    /**\n     * Get a valid resolution according to the current view constraints.\n     * @param {number|undefined} targetResolution Target resolution.\n     * @param {number=} opt_direction Direction. Default is `0`. Specify `-1` or `1` to return\n     * the available value respectively lower or greater than the target one. Leaving `0` will simply choose\n     * the nearest available value.\n     * @return {number|undefined} Valid resolution.\n     */\n    View.prototype.getConstrainedResolution = function (targetResolution, opt_direction) {\n        var direction = opt_direction || 0;\n        var size = this.getSizeFromViewport_(this.getRotation());\n        return this.constraints_.resolution(targetResolution, direction, size);\n    };\n    return View;\n}(BaseObject));\n/**\n * @param {Function} callback Callback.\n * @param {*} returnValue Return value.\n */\nfunction animationCallback(callback, returnValue) {\n    setTimeout(function () {\n        callback(returnValue);\n    }, 0);\n}\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./centerconstraint.js\").Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n    if (options.extent !== undefined) {\n        return createExtent(options.extent, options.constrainOnlyCenter, options.smoothExtentConstraint !== undefined ? options.smoothExtentConstraint : true);\n    }\n    else {\n        return centerNone;\n    }\n}\n/**\n * @param {ViewOptions} options View options.\n * @return {{constraint: import(\"./resolutionconstraint.js\").Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n    var resolutionConstraint;\n    var maxResolution;\n    var minResolution;\n    // TODO: move these to be ol constants\n    // see https://github.com/openlayers/openlayers/issues/2076\n    var defaultMaxZoom = 28;\n    var defaultZoomFactor = 2;\n    var minZoom = options.minZoom !== undefined ?\n        options.minZoom : DEFAULT_MIN_ZOOM;\n    var maxZoom = options.maxZoom !== undefined ?\n        options.maxZoom : defaultMaxZoom;\n    var zoomFactor = options.zoomFactor !== undefined ?\n        options.zoomFactor : defaultZoomFactor;\n    var multiWorld = options.multiWorld !== undefined ?\n        options.multiWorld : false;\n    var smooth = options.smoothResolutionConstraint !== undefined ? options.smoothResolutionConstraint : true;\n    if (options.resolutions !== undefined) {\n        var resolutions = options.resolutions;\n        maxResolution = resolutions[minZoom];\n        minResolution = resolutions[maxZoom] !== undefined ?\n            resolutions[maxZoom] : resolutions[resolutions.length - 1];\n        if (options.constrainResolution) {\n            resolutionConstraint = createSnapToResolutions(resolutions, smooth, !options.constrainOnlyCenter && options.extent);\n        }\n        else {\n            resolutionConstraint = createMinMaxResolution(maxResolution, minResolution, smooth, !options.constrainOnlyCenter && options.extent);\n        }\n    }\n    else {\n        // calculate the default min and max resolution\n        var projection = createProjection(options.projection, 'EPSG:3857');\n        var extent = projection.getExtent();\n        var size = !extent ?\n            // use an extent that can fit the whole world if need be\n            360 * METERS_PER_UNIT[Units.DEGREES] /\n                projection.getMetersPerUnit() :\n            Math.max(getWidth(extent), getHeight(extent));\n        var defaultMaxResolution = size / DEFAULT_TILE_SIZE / Math.pow(defaultZoomFactor, DEFAULT_MIN_ZOOM);\n        var defaultMinResolution = defaultMaxResolution / Math.pow(defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n        // user provided maxResolution takes precedence\n        maxResolution = options.maxResolution;\n        if (maxResolution !== undefined) {\n            minZoom = 0;\n        }\n        else {\n            maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n        }\n        // user provided minResolution takes precedence\n        minResolution = options.minResolution;\n        if (minResolution === undefined) {\n            if (options.maxZoom !== undefined) {\n                if (options.maxResolution !== undefined) {\n                    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n                }\n                else {\n                    minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n                }\n            }\n            else {\n                minResolution = defaultMinResolution;\n            }\n        }\n        // given discrete zoom levels, minResolution may be different than provided\n        maxZoom = minZoom + Math.floor(Math.log(maxResolution / minResolution) / Math.log(zoomFactor));\n        minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n        if (options.constrainResolution) {\n            resolutionConstraint = createSnapToPower(zoomFactor, maxResolution, minResolution, smooth, !options.constrainOnlyCenter && options.extent);\n        }\n        else {\n            var constrainOnlyCenter = options.constrainOnlyCenter;\n            var extent_1 = options.extent;\n            if (!multiWorld && !extent_1 && projection.isGlobal()) {\n                constrainOnlyCenter = false;\n                extent_1 = projection.getExtent();\n            }\n            resolutionConstraint = createMinMaxResolution(maxResolution, minResolution, smooth, !constrainOnlyCenter && extent_1);\n        }\n    }\n    return { constraint: resolutionConstraint, maxResolution: maxResolution,\n        minResolution: minResolution, minZoom: minZoom, zoomFactor: zoomFactor };\n}\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./rotationconstraint.js\").Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n    var enableRotation = options.enableRotation !== undefined ?\n        options.enableRotation : true;\n    if (enableRotation) {\n        var constrainRotation = options.constrainRotation;\n        if (constrainRotation === undefined || constrainRotation === true) {\n            return createSnapToZero();\n        }\n        else if (constrainRotation === false) {\n            return rotationNone;\n        }\n        else if (typeof constrainRotation === 'number') {\n            return createSnapToN(constrainRotation);\n        }\n        else {\n            return rotationNone;\n        }\n    }\n    else {\n        return disable;\n    }\n}\n/**\n * Determine if an animation involves no view change.\n * @param {Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n    if (animation.sourceCenter && animation.targetCenter) {\n        if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n            return false;\n        }\n    }\n    if (animation.sourceResolution !== animation.targetResolution) {\n        return false;\n    }\n    if (animation.sourceRotation !== animation.targetRotation) {\n        return false;\n    }\n    return true;\n}\nexport default View;\n//# sourceMappingURL=View.js.map","/**\n * @module ol/dom\n */\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number=} opt_width Canvas width.\n * @param {number=} opt_height Canvas height.\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(opt_width, opt_height) {\n    var canvas = document.createElement('canvas');\n    if (opt_width) {\n        canvas.width = opt_width;\n    }\n    if (opt_height) {\n        canvas.height = opt_height;\n    }\n    return canvas.getContext('2d');\n}\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n    var width = element.offsetWidth;\n    var style = getComputedStyle(element);\n    width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n    return width;\n}\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n    var height = element.offsetHeight;\n    var style = getComputedStyle(element);\n    height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n    return height;\n}\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n    var parent = oldNode.parentNode;\n    if (parent) {\n        parent.replaceChild(newNode, oldNode);\n    }\n}\n/**\n * @param {Node} node The node to remove.\n * @returns {Node} The node that was removed or null.\n */\nexport function removeNode(node) {\n    return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n}\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n    while (node.lastChild) {\n        node.removeChild(node.lastChild);\n    }\n}\n/**\n * Transform the children of a parent node so they match the\n * provided list of children.  This function aims to efficiently\n * remove, add, and reorder child nodes while maintaining a simple\n * implementation (it is not guaranteed to minimize DOM operations).\n * @param {Node} node The parent node whose children need reworking.\n * @param {Array<Node>} children The desired children.\n */\nexport function replaceChildren(node, children) {\n    var oldChildren = node.childNodes;\n    for (var i = 0; true; ++i) {\n        var oldChild = oldChildren[i];\n        var newChild = children[i];\n        // check if our work is done\n        if (!oldChild && !newChild) {\n            break;\n        }\n        // check if children match\n        if (oldChild === newChild) {\n            continue;\n        }\n        // check if a new child needs to be added\n        if (!oldChild) {\n            node.appendChild(newChild);\n            continue;\n        }\n        // check if an old child needs to be removed\n        if (!newChild) {\n            node.removeChild(oldChild);\n            --i;\n            continue;\n        }\n        // reorder\n        node.insertBefore(newChild, oldChild);\n    }\n}\n//# sourceMappingURL=dom.js.map","/**\n * @module ol/layer/Property\n */\n/**\n * @enum {string}\n */\nexport default {\n    OPACITY: 'opacity',\n    VISIBLE: 'visible',\n    EXTENT: 'extent',\n    Z_INDEX: 'zIndex',\n    MAX_RESOLUTION: 'maxResolution',\n    MIN_RESOLUTION: 'minResolution',\n    SOURCE: 'source'\n};\n//# sourceMappingURL=Property.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/Base\n */\nimport { abstract } from '../util.js';\nimport BaseObject from '../Object.js';\nimport LayerProperty from './Property.js';\nimport { clamp } from '../math.js';\nimport { assign } from '../obj.js';\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n */\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\nvar BaseLayer = /** @class */ (function (_super) {\n    __extends(BaseLayer, _super);\n    /**\n     * @param {Options} options Layer options.\n     */\n    function BaseLayer(options) {\n        var _this = _super.call(this) || this;\n        /**\n         * @type {Object<string, *>}\n         */\n        var properties = assign({}, options);\n        properties[LayerProperty.OPACITY] =\n            options.opacity !== undefined ? options.opacity : 1;\n        properties[LayerProperty.VISIBLE] =\n            options.visible !== undefined ? options.visible : true;\n        properties[LayerProperty.Z_INDEX] = options.zIndex;\n        properties[LayerProperty.MAX_RESOLUTION] =\n            options.maxResolution !== undefined ? options.maxResolution : Infinity;\n        properties[LayerProperty.MIN_RESOLUTION] =\n            options.minResolution !== undefined ? options.minResolution : 0;\n        /**\n         * @type {string}\n         * @private\n         */\n        _this.className_ = properties.className !== undefined ? options.className : 'ol-layer';\n        delete properties.className;\n        _this.setProperties(properties);\n        /**\n         * @type {import(\"./Layer.js\").State}\n         * @private\n         */\n        _this.state_ = null;\n        return _this;\n    }\n    /**\n     * @return {string} CSS class name.\n     */\n    BaseLayer.prototype.getClassName = function () {\n        return this.className_;\n    };\n    /**\n     * @return {import(\"./Layer.js\").State} Layer state.\n     */\n    BaseLayer.prototype.getLayerState = function () {\n        /** @type {import(\"./Layer.js\").State} */\n        var state = this.state_ || /** @type {?} */ ({\n            layer: this,\n            managed: true\n        });\n        state.opacity = clamp(Math.round(this.getOpacity() * 100) / 100, 0, 1);\n        state.sourceState = this.getSourceState();\n        state.visible = this.getVisible();\n        state.extent = this.getExtent();\n        state.zIndex = this.getZIndex() || 0;\n        state.maxResolution = this.getMaxResolution();\n        state.minResolution = Math.max(this.getMinResolution(), 0);\n        this.state_ = state;\n        return state;\n    };\n    /**\n     * @abstract\n     * @param {Array<import(\"./Layer.js\").default>=} opt_array Array of layers (to be\n     *     modified in place).\n     * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n     */\n    BaseLayer.prototype.getLayersArray = function (opt_array) {\n        return abstract();\n    };\n    /**\n     * @abstract\n     * @param {Array<import(\"./Layer.js\").State>=} opt_states Optional list of layer\n     *     states (to be modified in place).\n     * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n     */\n    BaseLayer.prototype.getLayerStatesArray = function (opt_states) {\n        return abstract();\n    };\n    /**\n     * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n     * will be visible regardless of extent.\n     * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getExtent = function () {\n        return (\n        /** @type {import(\"../extent.js\").Extent|undefined} */ (this.get(LayerProperty.EXTENT)));\n    };\n    /**\n     * Return the maximum resolution of the layer.\n     * @return {number} The maximum resolution of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getMaxResolution = function () {\n        return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n    };\n    /**\n     * Return the minimum resolution of the layer.\n     * @return {number} The minimum resolution of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getMinResolution = function () {\n        return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n    };\n    /**\n     * Return the opacity of the layer (between 0 and 1).\n     * @return {number} The opacity of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getOpacity = function () {\n        return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n    };\n    /**\n     * @abstract\n     * @return {import(\"../source/State.js\").default} Source state.\n     */\n    BaseLayer.prototype.getSourceState = function () {\n        return abstract();\n    };\n    /**\n     * Return the visibility of the layer (`true` or `false`).\n     * @return {boolean} The visibility of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getVisible = function () {\n        return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n    };\n    /**\n     * Return the Z-index of the layer, which is used to order layers before\n     * rendering. The default Z-index is 0.\n     * @return {number} The Z-index of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getZIndex = function () {\n        return /** @type {number} */ (this.get(LayerProperty.Z_INDEX));\n    };\n    /**\n     * Set the extent at which the layer is visible.  If `undefined`, the layer\n     * will be visible at all extents.\n     * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setExtent = function (extent) {\n        this.set(LayerProperty.EXTENT, extent);\n    };\n    /**\n     * Set the maximum resolution at which the layer is visible.\n     * @param {number} maxResolution The maximum resolution of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setMaxResolution = function (maxResolution) {\n        this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n    };\n    /**\n     * Set the minimum resolution at which the layer is visible.\n     * @param {number} minResolution The minimum resolution of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setMinResolution = function (minResolution) {\n        this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n    };\n    /**\n     * Set the opacity of the layer, allowed values range from 0 to 1.\n     * @param {number} opacity The opacity of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setOpacity = function (opacity) {\n        this.set(LayerProperty.OPACITY, opacity);\n    };\n    /**\n     * Set the visibility of the layer (`true` or `false`).\n     * @param {boolean} visible The visibility of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setVisible = function (visible) {\n        this.set(LayerProperty.VISIBLE, visible);\n    };\n    /**\n     * Set Z-index of the layer, which is used to order layers before rendering.\n     * The default Z-index is 0.\n     * @param {number} zindex The z-index of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setZIndex = function (zindex) {\n        this.set(LayerProperty.Z_INDEX, zindex);\n    };\n    return BaseLayer;\n}(BaseObject));\nexport default BaseLayer;\n//# sourceMappingURL=Base.js.map","/**\n * @module ol/source/State\n */\n/**\n * @enum {string}\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\nexport default {\n    UNDEFINED: 'undefined',\n    LOADING: 'loading',\n    READY: 'ready',\n    ERROR: 'error'\n};\n//# sourceMappingURL=State.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/Group\n */\nimport { getUid } from '../util.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport { getChangeEventType } from '../Object.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport { assert } from '../asserts.js';\nimport { listen, unlistenByKey } from '../events.js';\nimport EventType from '../events/EventType.js';\nimport { getIntersection } from '../extent.js';\nimport BaseLayer from './Base.js';\nimport { assign, clear } from '../obj.js';\nimport SourceState from '../source/State.js';\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {Array<import(\"./Base.js\").default>|import(\"../Collection.js\").default<import(\"./Base.js\").default>} [layers] Child layers.\n */\n/**\n * @enum {string}\n * @private\n */\nvar Property = {\n    LAYERS: 'layers'\n};\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @api\n */\nvar LayerGroup = /** @class */ (function (_super) {\n    __extends(LayerGroup, _super);\n    /**\n     * @param {Options=} opt_options Layer options.\n     */\n    function LayerGroup(opt_options) {\n        var _this = this;\n        var options = opt_options || {};\n        var baseOptions = /** @type {Options} */ (assign({}, options));\n        delete baseOptions.layers;\n        var layers = options.layers;\n        _this = _super.call(this, baseOptions) || this;\n        /**\n         * @private\n         * @type {Array<import(\"../events.js\").EventsKey>}\n         */\n        _this.layersListenerKeys_ = [];\n        /**\n         * @private\n         * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n         */\n        _this.listenerKeys_ = {};\n        listen(_this, getChangeEventType(Property.LAYERS), _this.handleLayersChanged_, _this);\n        if (layers) {\n            if (Array.isArray(layers)) {\n                layers = new Collection(layers.slice(), { unique: true });\n            }\n            else {\n                assert(typeof /** @type {?} */ (layers).getArray === 'function', 43); // Expected `layers` to be an array or a `Collection`\n            }\n        }\n        else {\n            layers = new Collection(undefined, { unique: true });\n        }\n        _this.setLayers(layers);\n        return _this;\n    }\n    /**\n     * @private\n     */\n    LayerGroup.prototype.handleLayerChange_ = function () {\n        this.changed();\n    };\n    /**\n     * @private\n     */\n    LayerGroup.prototype.handleLayersChanged_ = function () {\n        this.layersListenerKeys_.forEach(unlistenByKey);\n        this.layersListenerKeys_.length = 0;\n        var layers = this.getLayers();\n        this.layersListenerKeys_.push(listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this), listen(layers, CollectionEventType.REMOVE, this.handleLayersRemove_, this));\n        for (var id in this.listenerKeys_) {\n            this.listenerKeys_[id].forEach(unlistenByKey);\n        }\n        clear(this.listenerKeys_);\n        var layersArray = layers.getArray();\n        for (var i = 0, ii = layersArray.length; i < ii; i++) {\n            var layer = layersArray[i];\n            this.listenerKeys_[getUid(layer)] = [\n                listen(layer, ObjectEventType.PROPERTYCHANGE, this.handleLayerChange_, this),\n                listen(layer, EventType.CHANGE, this.handleLayerChange_, this)\n            ];\n        }\n        this.changed();\n    };\n    /**\n     * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n     * @private\n     */\n    LayerGroup.prototype.handleLayersAdd_ = function (collectionEvent) {\n        var layer = /** @type {import(\"./Base.js\").default} */ (collectionEvent.element);\n        this.listenerKeys_[getUid(layer)] = [\n            listen(layer, ObjectEventType.PROPERTYCHANGE, this.handleLayerChange_, this),\n            listen(layer, EventType.CHANGE, this.handleLayerChange_, this)\n        ];\n        this.changed();\n    };\n    /**\n     * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n     * @private\n     */\n    LayerGroup.prototype.handleLayersRemove_ = function (collectionEvent) {\n        var layer = /** @type {import(\"./Base.js\").default} */ (collectionEvent.element);\n        var key = getUid(layer);\n        this.listenerKeys_[key].forEach(unlistenByKey);\n        delete this.listenerKeys_[key];\n        this.changed();\n    };\n    /**\n     * Returns the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n     * in this group.\n     * @return {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} Collection of\n     *   {@link module:ol/layer/Base layers} that are part of this group.\n     * @observable\n     * @api\n     */\n    LayerGroup.prototype.getLayers = function () {\n        return (\n        /** @type {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} */ (this.get(Property.LAYERS)));\n    };\n    /**\n     * Set the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n     * in this group.\n     * @param {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} layers Collection of\n     *   {@link module:ol/layer/Base layers} that are part of this group.\n     * @observable\n     * @api\n     */\n    LayerGroup.prototype.setLayers = function (layers) {\n        this.set(Property.LAYERS, layers);\n    };\n    /**\n     * @inheritDoc\n     */\n    LayerGroup.prototype.getLayersArray = function (opt_array) {\n        var array = opt_array !== undefined ? opt_array : [];\n        this.getLayers().forEach(function (layer) {\n            layer.getLayersArray(array);\n        });\n        return array;\n    };\n    /**\n     * @inheritDoc\n     */\n    LayerGroup.prototype.getLayerStatesArray = function (opt_states) {\n        var states = opt_states !== undefined ? opt_states : [];\n        var pos = states.length;\n        this.getLayers().forEach(function (layer) {\n            layer.getLayerStatesArray(states);\n        });\n        var ownLayerState = this.getLayerState();\n        for (var i = pos, ii = states.length; i < ii; i++) {\n            var layerState = states[i];\n            layerState.opacity *= ownLayerState.opacity;\n            layerState.visible = layerState.visible && ownLayerState.visible;\n            layerState.maxResolution = Math.min(layerState.maxResolution, ownLayerState.maxResolution);\n            layerState.minResolution = Math.max(layerState.minResolution, ownLayerState.minResolution);\n            if (ownLayerState.extent !== undefined) {\n                if (layerState.extent !== undefined) {\n                    layerState.extent = getIntersection(layerState.extent, ownLayerState.extent);\n                }\n                else {\n                    layerState.extent = ownLayerState.extent;\n                }\n            }\n        }\n        return states;\n    };\n    /**\n     * @inheritDoc\n     */\n    LayerGroup.prototype.getSourceState = function () {\n        return SourceState.READY;\n    };\n    return LayerGroup;\n}(BaseLayer));\nexport default LayerGroup;\n//# sourceMappingURL=Group.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/PluggableMap\n */\nimport { getUid } from './util.js';\nimport Collection from './Collection.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventHandler from './MapBrowserEventHandler.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapEvent from './MapEvent.js';\nimport MapEventType from './MapEventType.js';\nimport MapProperty from './MapProperty.js';\nimport RenderEventType from './render/EventType.js';\nimport BaseObject, { getChangeEventType } from './Object.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport TileQueue from './TileQueue.js';\nimport View from './View.js';\nimport ViewHint from './ViewHint.js';\nimport { assert } from './asserts.js';\nimport { removeNode } from './dom.js';\nimport { listen, unlistenByKey, unlisten } from './events.js';\nimport EventType from './events/EventType.js';\nimport { createEmpty, clone, createOrUpdateEmpty, equals, getForViewAndSize, isEmpty } from './extent.js';\nimport { TRUE } from './functions.js';\nimport { DEVICE_PIXEL_RATIO, TOUCH } from './has.js';\nimport LayerGroup from './layer/Group.js';\nimport { hasArea } from './size.js';\nimport { DROP } from './structs/PriorityQueue.js';\nimport { create as createTransform, apply as applyTransform } from './transform.js';\n/**\n * State of the current frame. Only `pixelRatio`, `time` and `viewState` should\n * be used in applications.\n * @typedef {Object} FrameState\n * @property {number} pixelRatio The pixel ratio of the frame.\n * @property {number} time The time when rendering of the frame was requested.\n * @property {import(\"./View.js\").State} viewState The state of the current view.\n * @property {boolean} animate\n * @property {import(\"./transform.js\").Transform} coordinateToPixelTransform\n * @property {null|import(\"./extent.js\").Extent} extent\n * @property {import(\"./coordinate.js\").Coordinate} focus\n * @property {number} index\n * @property {Array<import(\"./layer/Layer.js\").State>} layerStatesArray\n * @property {import(\"./transform.js\").Transform} pixelToCoordinateTransform\n * @property {Array<PostRenderFunction>} postRenderFunctions\n * @property {import(\"./size.js\").Size} size\n * @property {!Object<string, boolean>} skippedFeatureUids\n * @property {TileQueue} tileQueue\n * @property {!Object<string, Object<string, boolean>>} usedTiles\n * @property {Array<number>} viewHints\n * @property {!Object<string, Object<string, boolean>>} wantedTiles\n */\n/**\n * @typedef {function(PluggableMap, ?FrameState): any} PostRenderFunction\n */\n/**\n * @typedef {Object} AtPixelOptions\n * @property {undefined|function(import(\"./layer/Layer.js\").default): boolean} [layerFilter] Layer filter\n * function. The filter function will receive one argument, the\n * {@link module:ol/layer/Layer layer-candidate} and it should return a boolean value.\n * Only layers which are visible and for which this function returns `true`\n * will be tested for features. By default, all visible layers will be tested.\n * @property {number} [hitTolerance=0] Hit-detection tolerance in pixels. Pixels\n * inside the radius around the given position will be checked for features.\n */\n/**\n * @typedef {Object} MapOptionsInternal\n * @property {Collection<import(\"./control/Control.js\").default>} [controls]\n * @property {Collection<import(\"./interaction/Interaction.js\").default>} [interactions]\n * @property {HTMLElement|Document} keyboardEventTarget\n * @property {Collection<import(\"./Overlay.js\").default>} overlays\n * @property {Object<string, *>} values\n */\n/**\n * Object literal with config options for the map.\n * @typedef {Object} MapOptions\n * @property {Collection<import(\"./control/Control.js\").default>|Array<import(\"./control/Control.js\").default>} [controls]\n * Controls initially added to the map. If not specified,\n * {@link module:ol/control~defaults} is used.\n * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between\n * physical pixels and device-independent pixels (dips) on the device.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>|Array<import(\"./interaction/Interaction.js\").default>} [interactions]\n * Interactions that are initially added to the map. If not specified,\n * {@link module:ol/interaction~defaults} is used.\n * @property {HTMLElement|Document|string} [keyboardEventTarget] The element to\n * listen to keyboard events on. This determines when the `KeyboardPan` and\n * `KeyboardZoom` interactions trigger. For example, if this option is set to\n * `document` the keyboard interactions will always trigger. If this option is\n * not specified, the element the library listens to keyboard events on is the\n * map target (i.e. the user-provided div for the map). If this is not\n * `document`, the target element needs to be focused for key events to be\n * emitted, requiring that the target element has a `tabindex` attribute.\n * @property {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>|LayerGroup} [layers]\n * Layers. If this is not defined, a map with no layers will be rendered. Note\n * that layers are rendered in the order supplied, so if you want, for example,\n * a vector layer to appear on top of a tile layer, it must come after the tile\n * layer.\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load\n * simultaneously.\n * @property {number} [moveTolerance=1] The minimum distance in pixels the\n * cursor must move to be detected as a map move event instead of a click.\n * Increasing this value can make it easier to click on the map.\n * @property {Collection<import(\"./Overlay.js\").default>|Array<import(\"./Overlay.js\").default>} [overlays]\n * Overlays initially added to the map. By default, no overlays are added.\n * @property {HTMLElement|string} [target] The container for the map, either the\n * element itself or the `id` of the element. If not specified at construction\n * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be\n * rendered.\n * @property {View} [view] The map's view.  No layer sources will be\n * fetched unless this is specified at construction time or through\n * {@link module:ol/Map~Map#setView}.\n */\n/**\n * @fires import(\"./MapBrowserEvent.js\").MapBrowserEvent\n * @fires import(\"./MapEvent.js\").MapEvent\n * @fires import(\"./render/Event.js\").default#precompose\n * @fires import(\"./render/Event.js\").default#postcompose\n * @fires import(\"./render/Event.js\").default#rendercomplete\n * @api\n */\nvar PluggableMap = /** @class */ (function (_super) {\n    __extends(PluggableMap, _super);\n    /**\n     * @param {MapOptions} options Map options.\n     */\n    function PluggableMap(options) {\n        var _this = _super.call(this) || this;\n        var optionsInternal = createOptionsInternal(options);\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.maxTilesLoading_ = options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.pixelRatio_ = options.pixelRatio !== undefined ?\n            options.pixelRatio : DEVICE_PIXEL_RATIO;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.animationDelayKey_;\n        /**\n         * @private\n         */\n        _this.animationDelay_ = function () {\n            this.animationDelayKey_ = undefined;\n            this.renderFrame_(Date.now());\n        }.bind(_this);\n        /**\n         * @private\n         * @type {import(\"./transform.js\").Transform}\n         */\n        _this.coordinateToPixelTransform_ = createTransform();\n        /**\n         * @private\n         * @type {import(\"./transform.js\").Transform}\n         */\n        _this.pixelToCoordinateTransform_ = createTransform();\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.frameIndex_ = 0;\n        /**\n         * @private\n         * @type {?FrameState}\n         */\n        _this.frameState_ = null;\n        /**\n         * The extent at the previous 'moveend' event.\n         * @private\n         * @type {import(\"./extent.js\").Extent}\n         */\n        _this.previousExtent_ = null;\n        /**\n         * @private\n         * @type {?import(\"./events.js\").EventsKey}\n         */\n        _this.viewPropertyListenerKey_ = null;\n        /**\n         * @private\n         * @type {?import(\"./events.js\").EventsKey}\n         */\n        _this.viewChangeListenerKey_ = null;\n        /**\n         * @private\n         * @type {Array<import(\"./events.js\").EventsKey>}\n         */\n        _this.layerGroupPropertyListenerKeys_ = null;\n        /**\n         * @private\n         * @type {!HTMLElement}\n         */\n        _this.viewport_ = document.createElement('div');\n        _this.viewport_.className = 'ol-viewport' + (TOUCH ? ' ol-touch' : '');\n        _this.viewport_.style.position = 'relative';\n        _this.viewport_.style.overflow = 'hidden';\n        _this.viewport_.style.width = '100%';\n        _this.viewport_.style.height = '100%';\n        // prevent page zoom on IE >= 10 browsers\n        _this.viewport_.style.msTouchAction = 'none';\n        _this.viewport_.style.touchAction = 'none';\n        /**\n         * @private\n         * @type {!HTMLElement}\n         */\n        _this.overlayContainer_ = document.createElement('div');\n        _this.overlayContainer_.style.position = 'absolute';\n        _this.overlayContainer_.style.zIndex = '0';\n        _this.overlayContainer_.style.width = '100%';\n        _this.overlayContainer_.style.height = '100%';\n        _this.overlayContainer_.className = 'ol-overlaycontainer';\n        _this.viewport_.appendChild(_this.overlayContainer_);\n        /**\n         * @private\n         * @type {!HTMLElement}\n         */\n        _this.overlayContainerStopEvent_ = document.createElement('div');\n        _this.overlayContainerStopEvent_.style.position = 'absolute';\n        _this.overlayContainerStopEvent_.style.zIndex = '0';\n        _this.overlayContainerStopEvent_.style.width = '100%';\n        _this.overlayContainerStopEvent_.style.height = '100%';\n        _this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\n        _this.viewport_.appendChild(_this.overlayContainerStopEvent_);\n        /**\n         * @private\n         * @type {MapBrowserEventHandler}\n         */\n        _this.mapBrowserEventHandler_ = new MapBrowserEventHandler(_this, options.moveTolerance);\n        for (var key in MapBrowserEventType) {\n            listen(_this.mapBrowserEventHandler_, MapBrowserEventType[key], _this.handleMapBrowserEvent, _this);\n        }\n        /**\n         * @private\n         * @type {HTMLElement|Document}\n         */\n        _this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\n        /**\n         * @private\n         * @type {Array<import(\"./events.js\").EventsKey>}\n         */\n        _this.keyHandlerKeys_ = null;\n        listen(_this.viewport_, EventType.CONTEXTMENU, _this.handleBrowserEvent, _this);\n        listen(_this.viewport_, EventType.WHEEL, _this.handleBrowserEvent, _this);\n        listen(_this.viewport_, EventType.MOUSEWHEEL, _this.handleBrowserEvent, _this);\n        /**\n         * @type {Collection<import(\"./control/Control.js\").default>}\n         * @protected\n         */\n        _this.controls = optionsInternal.controls || new Collection();\n        /**\n         * @type {Collection<import(\"./interaction/Interaction.js\").default>}\n         * @protected\n         */\n        _this.interactions = optionsInternal.interactions || new Collection();\n        /**\n         * @type {Collection<import(\"./Overlay.js\").default>}\n         * @private\n         */\n        _this.overlays_ = optionsInternal.overlays;\n        /**\n         * A lookup of overlays by id.\n         * @private\n         * @type {Object<string, import(\"./Overlay.js\").default>}\n         */\n        _this.overlayIdIndex_ = {};\n        /**\n         * @type {import(\"./renderer/Map.js\").default}\n         * @private\n         */\n        _this.renderer_ = _this.createRenderer();\n        /**\n         * @type {function(Event): void|undefined}\n         * @private\n         */\n        _this.handleResize_;\n        /**\n         * @private\n         * @type {import(\"./coordinate.js\").Coordinate}\n         */\n        _this.focus_ = null;\n        /**\n         * @private\n         * @type {!Array<PostRenderFunction>}\n         */\n        _this.postRenderFunctions_ = [];\n        /**\n         * @private\n         * @type {TileQueue}\n         */\n        _this.tileQueue_ = new TileQueue(_this.getTilePriority.bind(_this), _this.handleTileChange_.bind(_this));\n        /**\n         * Uids of features to skip at rendering time.\n         * @type {Object<string, boolean>}\n         * @private\n         */\n        _this.skippedFeatureUids_ = {};\n        listen(_this, getChangeEventType(MapProperty.LAYERGROUP), _this.handleLayerGroupChanged_, _this);\n        listen(_this, getChangeEventType(MapProperty.VIEW), _this.handleViewChanged_, _this);\n        listen(_this, getChangeEventType(MapProperty.SIZE), _this.handleSizeChanged_, _this);\n        listen(_this, getChangeEventType(MapProperty.TARGET), _this.handleTargetChanged_, _this);\n        // setProperties will trigger the rendering of the map if the map\n        // is \"defined\" already.\n        _this.setProperties(optionsInternal.values);\n        _this.controls.forEach(\n        /**\n         * @param {import(\"./control/Control.js\").default} control Control.\n         * @this {PluggableMap}\n         */\n        (function (control) {\n            control.setMap(this);\n        }).bind(_this));\n        listen(_this.controls, CollectionEventType.ADD, \n        /**\n         * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n         */\n        function (event) {\n            event.element.setMap(this);\n        }, _this);\n        listen(_this.controls, CollectionEventType.REMOVE, \n        /**\n         * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n         */\n        function (event) {\n            event.element.setMap(null);\n        }, _this);\n        _this.interactions.forEach(\n        /**\n         * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction.\n         * @this {PluggableMap}\n         */\n        (function (interaction) {\n            interaction.setMap(this);\n        }).bind(_this));\n        listen(_this.interactions, CollectionEventType.ADD, \n        /**\n         * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n         */\n        function (event) {\n            event.element.setMap(this);\n        }, _this);\n        listen(_this.interactions, CollectionEventType.REMOVE, \n        /**\n         * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n         */\n        function (event) {\n            event.element.setMap(null);\n        }, _this);\n        _this.overlays_.forEach(_this.addOverlayInternal_.bind(_this));\n        listen(_this.overlays_, CollectionEventType.ADD, \n        /**\n         * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n         */\n        function (event) {\n            this.addOverlayInternal_(/** @type {import(\"./Overlay.js\").default} */ (event.element));\n        }, _this);\n        listen(_this.overlays_, CollectionEventType.REMOVE, \n        /**\n         * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n         */\n        function (event) {\n            var overlay = /** @type {import(\"./Overlay.js\").default} */ (event.element);\n            var id = overlay.getId();\n            if (id !== undefined) {\n                delete this.overlayIdIndex_[id.toString()];\n            }\n            event.element.setMap(null);\n        }, _this);\n        return _this;\n    }\n    /**\n     * @abstract\n     * @return {import(\"./renderer/Map.js\").default} The map renderer\n     */\n    PluggableMap.prototype.createRenderer = function () {\n        throw new Error('Use a map type that has a createRenderer method');\n    };\n    /**\n     * Add the given control to the map.\n     * @param {import(\"./control/Control.js\").default} control Control.\n     * @api\n     */\n    PluggableMap.prototype.addControl = function (control) {\n        this.getControls().push(control);\n    };\n    /**\n     * Add the given interaction to the map. If you want to add an interaction\n     * at another point of the collection use `getInteraction()` and the methods\n     * available on {@link module:ol/Collection~Collection}. This can be used to\n     * stop the event propagation from the handleEvent function. The interactions\n     * get to handle the events in the reverse order of this collection.\n     * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to add.\n     * @api\n     */\n    PluggableMap.prototype.addInteraction = function (interaction) {\n        this.getInteractions().push(interaction);\n    };\n    /**\n     * Adds the given layer to the top of this map. If you want to add a layer\n     * elsewhere in the stack, use `getLayers()` and the methods available on\n     * {@link module:ol/Collection~Collection}.\n     * @param {import(\"./layer/Base.js\").default} layer Layer.\n     * @api\n     */\n    PluggableMap.prototype.addLayer = function (layer) {\n        var layers = this.getLayerGroup().getLayers();\n        layers.push(layer);\n    };\n    /**\n     * Add the given overlay to the map.\n     * @param {import(\"./Overlay.js\").default} overlay Overlay.\n     * @api\n     */\n    PluggableMap.prototype.addOverlay = function (overlay) {\n        this.getOverlays().push(overlay);\n    };\n    /**\n     * This deals with map's overlay collection changes.\n     * @param {import(\"./Overlay.js\").default} overlay Overlay.\n     * @private\n     */\n    PluggableMap.prototype.addOverlayInternal_ = function (overlay) {\n        var id = overlay.getId();\n        if (id !== undefined) {\n            this.overlayIdIndex_[id.toString()] = overlay;\n        }\n        overlay.setMap(this);\n    };\n    /**\n     *\n     * @inheritDoc\n     */\n    PluggableMap.prototype.disposeInternal = function () {\n        this.mapBrowserEventHandler_.dispose();\n        unlisten(this.viewport_, EventType.CONTEXTMENU, this.handleBrowserEvent, this);\n        unlisten(this.viewport_, EventType.WHEEL, this.handleBrowserEvent, this);\n        unlisten(this.viewport_, EventType.MOUSEWHEEL, this.handleBrowserEvent, this);\n        if (this.handleResize_ !== undefined) {\n            removeEventListener(EventType.RESIZE, this.handleResize_, false);\n            this.handleResize_ = undefined;\n        }\n        if (this.animationDelayKey_) {\n            cancelAnimationFrame(this.animationDelayKey_);\n            this.animationDelayKey_ = undefined;\n        }\n        this.setTarget(null);\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * Detect features that intersect a pixel on the viewport, and execute a\n     * callback with each intersecting feature. Layers included in the detection can\n     * be configured through the `layerFilter` option in `opt_options`.\n     * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n     * @param {function(this: S, import(\"./Feature.js\").FeatureLike,\n     *     import(\"./layer/Layer.js\").default): T} callback Feature callback. The callback will be\n     *     called with two arguments. The first argument is one\n     *     {@link module:ol/Feature feature} or\n     *     {@link module:ol/render/Feature render feature} at the pixel, the second is\n     *     the {@link module:ol/layer/Layer layer} of the feature and will be null for\n     *     unmanaged layers. To stop detection, callback functions can return a\n     *     truthy value.\n     * @param {AtPixelOptions=} opt_options Optional options.\n     * @return {T|undefined} Callback result, i.e. the return value of last\n     * callback execution, or the first truthy callback return value.\n     * @template S,T\n     * @api\n     */\n    PluggableMap.prototype.forEachFeatureAtPixel = function (pixel, callback, opt_options) {\n        if (!this.frameState_) {\n            return;\n        }\n        var coordinate = this.getCoordinateFromPixel(pixel);\n        opt_options = opt_options !== undefined ? opt_options :\n            /** @type {AtPixelOptions} */ ({});\n        var hitTolerance = opt_options.hitTolerance !== undefined ?\n            opt_options.hitTolerance * this.frameState_.pixelRatio : 0;\n        var layerFilter = opt_options.layerFilter !== undefined ?\n            opt_options.layerFilter : TRUE;\n        return this.renderer_.forEachFeatureAtCoordinate(coordinate, this.frameState_, hitTolerance, callback, null, layerFilter, null);\n    };\n    /**\n     * Get all features that intersect a pixel on the viewport.\n     * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n     * @param {AtPixelOptions=} opt_options Optional options.\n     * @return {Array<import(\"./Feature.js\").FeatureLike>} The detected features or\n     * `null` if none were found.\n     * @api\n     */\n    PluggableMap.prototype.getFeaturesAtPixel = function (pixel, opt_options) {\n        var features = null;\n        this.forEachFeatureAtPixel(pixel, function (feature) {\n            if (!features) {\n                features = [];\n            }\n            features.push(feature);\n        }, opt_options);\n        return features;\n    };\n    /**\n     * Detect layers that have a color value at a pixel on the viewport, and\n     * execute a callback with each matching layer. Layers included in the\n     * detection can be configured through `opt_layerFilter`.\n     * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n     * @param {function(this: S, import(\"./layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback\n     *     Layer callback. This callback will receive two arguments: first is the\n     *     {@link module:ol/layer/Layer layer}, second argument is an array representing\n     *     [R, G, B, A] pixel values (0 - 255) and will be `null` for layer types\n     *     that do not currently support this argument. To stop detection, callback\n     *     functions can return a truthy value.\n     * @param {AtPixelOptions=} opt_options Configuration options.\n     * @return {T|undefined} Callback result, i.e. the return value of last\n     * callback execution, or the first truthy callback return value.\n     * @template S,T\n     * @api\n     */\n    PluggableMap.prototype.forEachLayerAtPixel = function (pixel, callback, opt_options) {\n        if (!this.frameState_) {\n            return;\n        }\n        var options = opt_options || /** @type {AtPixelOptions} */ ({});\n        var hitTolerance = options.hitTolerance !== undefined ?\n            opt_options.hitTolerance * this.frameState_.pixelRatio : 0;\n        var layerFilter = options.layerFilter || TRUE;\n        return this.renderer_.forEachLayerAtPixel(pixel, this.frameState_, hitTolerance, callback, layerFilter);\n    };\n    /**\n     * Detect if features intersect a pixel on the viewport. Layers included in the\n     * detection can be configured through `opt_layerFilter`.\n     * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n     * @param {AtPixelOptions=} opt_options Optional options.\n     * @return {boolean} Is there a feature at the given pixel?\n     * @api\n     */\n    PluggableMap.prototype.hasFeatureAtPixel = function (pixel, opt_options) {\n        if (!this.frameState_) {\n            return false;\n        }\n        var coordinate = this.getCoordinateFromPixel(pixel);\n        opt_options = opt_options !== undefined ? opt_options :\n            /** @type {AtPixelOptions} */ ({});\n        var layerFilter = opt_options.layerFilter !== undefined ? opt_options.layerFilter : TRUE;\n        var hitTolerance = opt_options.hitTolerance !== undefined ?\n            opt_options.hitTolerance * this.frameState_.pixelRatio : 0;\n        return this.renderer_.hasFeatureAtCoordinate(coordinate, this.frameState_, hitTolerance, layerFilter, null);\n    };\n    /**\n     * Returns the coordinate in view projection for a browser event.\n     * @param {Event} event Event.\n     * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n     * @api\n     */\n    PluggableMap.prototype.getEventCoordinate = function (event) {\n        return this.getCoordinateFromPixel(this.getEventPixel(event));\n    };\n    /**\n     * Returns the map pixel position for a browser event relative to the viewport.\n     * @param {Event|TouchEvent} event Event.\n     * @return {import(\"./pixel.js\").Pixel} Pixel.\n     * @api\n     */\n    PluggableMap.prototype.getEventPixel = function (event) {\n        var viewportPosition = this.viewport_.getBoundingClientRect();\n        var eventPosition = 'changedTouches' in event ?\n            /** @type {TouchEvent} */ (event).changedTouches[0] :\n            /** @type {MouseEvent} */ (event);\n        return [\n            eventPosition.clientX - viewportPosition.left,\n            eventPosition.clientY - viewportPosition.top\n        ];\n    };\n    /**\n     * Get the target in which this map is rendered.\n     * Note that this returns what is entered as an option or in setTarget:\n     * if that was an element, it returns an element; if a string, it returns that.\n     * @return {HTMLElement|string|undefined} The Element or id of the Element that the\n     *     map is rendered in.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.getTarget = function () {\n        return /** @type {HTMLElement|string|undefined} */ (this.get(MapProperty.TARGET));\n    };\n    /**\n     * Get the DOM element into which this map is rendered. In contrast to\n     * `getTarget` this method always return an `Element`, or `null` if the\n     * map has no target.\n     * @return {HTMLElement} The element that the map is rendered in.\n     * @api\n     */\n    PluggableMap.prototype.getTargetElement = function () {\n        var target = this.getTarget();\n        if (target !== undefined) {\n            return typeof target === 'string' ? document.getElementById(target) : target;\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * Get the coordinate for a given pixel.  This returns a coordinate in the\n     * map view projection.\n     * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n     * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n     * @api\n     */\n    PluggableMap.prototype.getCoordinateFromPixel = function (pixel) {\n        var frameState = this.frameState_;\n        if (!frameState) {\n            return null;\n        }\n        else {\n            return applyTransform(frameState.pixelToCoordinateTransform, pixel.slice());\n        }\n    };\n    /**\n     * Get the map controls. Modifying this collection changes the controls\n     * associated with the map.\n     * @return {Collection<import(\"./control/Control.js\").default>} Controls.\n     * @api\n     */\n    PluggableMap.prototype.getControls = function () {\n        return this.controls;\n    };\n    /**\n     * Get the map overlays. Modifying this collection changes the overlays\n     * associated with the map.\n     * @return {Collection<import(\"./Overlay.js\").default>} Overlays.\n     * @api\n     */\n    PluggableMap.prototype.getOverlays = function () {\n        return this.overlays_;\n    };\n    /**\n     * Get an overlay by its identifier (the value returned by overlay.getId()).\n     * Note that the index treats string and numeric identifiers as the same. So\n     * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\n     * @param {string|number} id Overlay identifier.\n     * @return {import(\"./Overlay.js\").default} Overlay.\n     * @api\n     */\n    PluggableMap.prototype.getOverlayById = function (id) {\n        var overlay = this.overlayIdIndex_[id.toString()];\n        return overlay !== undefined ? overlay : null;\n    };\n    /**\n     * Get the map interactions. Modifying this collection changes the interactions\n     * associated with the map.\n     *\n     * Interactions are used for e.g. pan, zoom and rotate.\n     * @return {Collection<import(\"./interaction/Interaction.js\").default>} Interactions.\n     * @api\n     */\n    PluggableMap.prototype.getInteractions = function () {\n        return this.interactions;\n    };\n    /**\n     * Get the layergroup associated with this map.\n     * @return {LayerGroup} A layer group containing the layers in this map.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.getLayerGroup = function () {\n        return (\n        /** @type {LayerGroup} */ (this.get(MapProperty.LAYERGROUP)));\n    };\n    /**\n     * Get the collection of layers associated with this map.\n     * @return {!Collection<import(\"./layer/Base.js\").default>} Layers.\n     * @api\n     */\n    PluggableMap.prototype.getLayers = function () {\n        var layers = this.getLayerGroup().getLayers();\n        return layers;\n    };\n    /**\n     * Get the pixel for a coordinate.  This takes a coordinate in the map view\n     * projection and returns the corresponding pixel.\n     * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n     * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n     * @api\n     */\n    PluggableMap.prototype.getPixelFromCoordinate = function (coordinate) {\n        var frameState = this.frameState_;\n        if (!frameState) {\n            return null;\n        }\n        else {\n            return applyTransform(frameState.coordinateToPixelTransform, coordinate.slice(0, 2));\n        }\n    };\n    /**\n     * Get the map renderer.\n     * @return {import(\"./renderer/Map.js\").default} Renderer\n     */\n    PluggableMap.prototype.getRenderer = function () {\n        return this.renderer_;\n    };\n    /**\n     * Get the size of this map.\n     * @return {import(\"./size.js\").Size|undefined} The size in pixels of the map in the DOM.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.getSize = function () {\n        return (\n        /** @type {import(\"./size.js\").Size|undefined} */ (this.get(MapProperty.SIZE)));\n    };\n    /**\n     * Get the view associated with this map. A view manages properties such as\n     * center and resolution.\n     * @return {View} The view that controls this map.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.getView = function () {\n        return (\n        /** @type {View} */ (this.get(MapProperty.VIEW)));\n    };\n    /**\n     * Get the element that serves as the map viewport.\n     * @return {HTMLElement} Viewport.\n     * @api\n     */\n    PluggableMap.prototype.getViewport = function () {\n        return this.viewport_;\n    };\n    /**\n     * Get the element that serves as the container for overlays.  Elements added to\n     * this container will let mousedown and touchstart events through to the map,\n     * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}\n     * events.\n     * @return {!HTMLElement} The map's overlay container.\n     */\n    PluggableMap.prototype.getOverlayContainer = function () {\n        return this.overlayContainer_;\n    };\n    /**\n     * Get the element that serves as a container for overlays that don't allow\n     * event propagation. Elements added to this container won't let mousedown and\n     * touchstart events through to the map, so clicks and gestures on an overlay\n     * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n     * @return {!HTMLElement} The map's overlay container that stops events.\n     */\n    PluggableMap.prototype.getOverlayContainerStopEvent = function () {\n        return this.overlayContainerStopEvent_;\n    };\n    /**\n     * @param {import(\"./Tile.js\").default} tile Tile.\n     * @param {string} tileSourceKey Tile source key.\n     * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n     * @param {number} tileResolution Tile resolution.\n     * @return {number} Tile priority.\n     */\n    PluggableMap.prototype.getTilePriority = function (tile, tileSourceKey, tileCenter, tileResolution) {\n        // Filter out tiles at higher zoom levels than the current zoom level, or that\n        // are outside the visible extent.\n        var frameState = this.frameState_;\n        if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n            return DROP;\n        }\n        if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n            return DROP;\n        }\n        // Prioritize the highest zoom level tiles closest to the focus.\n        // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n        // Within a zoom level, tiles are prioritized by the distance in pixels\n        // between the center of the tile and the focus.  The factor of 65536 means\n        // that the prioritization should behave as desired for tiles up to\n        // 65536 * Math.log(2) = 45426 pixels from the focus.\n        var deltaX = tileCenter[0] - frameState.focus[0];\n        var deltaY = tileCenter[1] - frameState.focus[1];\n        return 65536 * Math.log(tileResolution) +\n            Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution;\n    };\n    /**\n     * @param {Event} browserEvent Browser event.\n     * @param {string=} opt_type Type.\n     */\n    PluggableMap.prototype.handleBrowserEvent = function (browserEvent, opt_type) {\n        var type = opt_type || browserEvent.type;\n        var mapBrowserEvent = new MapBrowserEvent(type, this, browserEvent);\n        this.handleMapBrowserEvent(mapBrowserEvent);\n    };\n    /**\n     * @param {MapBrowserEvent} mapBrowserEvent The event to handle.\n     */\n    PluggableMap.prototype.handleMapBrowserEvent = function (mapBrowserEvent) {\n        if (!this.frameState_) {\n            // With no view defined, we cannot translate pixels into geographical\n            // coordinates so interactions cannot be used.\n            return;\n        }\n        var target = mapBrowserEvent.originalEvent.target;\n        while (target instanceof HTMLElement) {\n            if (target.parentElement === this.overlayContainerStopEvent_) {\n                return;\n            }\n            target = target.parentElement;\n        }\n        this.focus_ = mapBrowserEvent.coordinate;\n        mapBrowserEvent.frameState = this.frameState_;\n        var interactionsArray = this.getInteractions().getArray();\n        if (this.dispatchEvent(mapBrowserEvent) !== false) {\n            for (var i = interactionsArray.length - 1; i >= 0; i--) {\n                var interaction = interactionsArray[i];\n                if (!interaction.getActive()) {\n                    continue;\n                }\n                var cont = interaction.handleEvent(mapBrowserEvent);\n                if (!cont) {\n                    break;\n                }\n            }\n        }\n    };\n    /**\n     * @protected\n     */\n    PluggableMap.prototype.handlePostRender = function () {\n        var frameState = this.frameState_;\n        // Manage the tile queue\n        // Image loads are expensive and a limited resource, so try to use them\n        // efficiently:\n        // * When the view is static we allow a large number of parallel tile loads\n        //   to complete the frame as quickly as possible.\n        // * When animating or interacting, image loads can cause janks, so we reduce\n        //   the maximum number of loads per frame and limit the number of parallel\n        //   tile loads to remain reactive to view changes and to reduce the chance of\n        //   loading tiles that will quickly disappear from view.\n        var tileQueue = this.tileQueue_;\n        if (!tileQueue.isEmpty()) {\n            var maxTotalLoading = this.maxTilesLoading_;\n            var maxNewLoads = maxTotalLoading;\n            if (frameState) {\n                var hints = frameState.viewHints;\n                if (hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING]) {\n                    var lowOnFrameBudget = Date.now() - frameState.time > 8;\n                    maxTotalLoading = lowOnFrameBudget ? 0 : 8;\n                    maxNewLoads = lowOnFrameBudget ? 0 : 2;\n                }\n            }\n            if (tileQueue.getTilesLoading() < maxTotalLoading) {\n                tileQueue.reprioritize(); // FIXME only call if view has changed\n                tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n            }\n        }\n        if (frameState && this.hasListener(RenderEventType.RENDERCOMPLETE) && !frameState.animate &&\n            !this.tileQueue_.getTilesLoading() && !getLoading(this.getLayers().getArray())) {\n            this.renderer_.dispatchRenderEvent(RenderEventType.RENDERCOMPLETE, frameState);\n        }\n        var postRenderFunctions = this.postRenderFunctions_;\n        for (var i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\n            postRenderFunctions[i](this, frameState);\n        }\n        postRenderFunctions.length = 0;\n    };\n    /**\n     * @private\n     */\n    PluggableMap.prototype.handleSizeChanged_ = function () {\n        if (this.getView()) {\n            this.getView().resolveConstraints(0);\n        }\n        this.render();\n    };\n    /**\n     * @private\n     */\n    PluggableMap.prototype.handleTargetChanged_ = function () {\n        // target may be undefined, null, a string or an Element.\n        // If it's a string we convert it to an Element before proceeding.\n        // If it's not now an Element we remove the viewport from the DOM.\n        // If it's an Element we append the viewport element to it.\n        var targetElement;\n        if (this.getTarget()) {\n            targetElement = this.getTargetElement();\n        }\n        if (this.keyHandlerKeys_) {\n            for (var i = 0, ii = this.keyHandlerKeys_.length; i < ii; ++i) {\n                unlistenByKey(this.keyHandlerKeys_[i]);\n            }\n            this.keyHandlerKeys_ = null;\n        }\n        if (!targetElement) {\n            this.renderer_.removeLayerRenderers();\n            removeNode(this.viewport_);\n            if (this.handleResize_ !== undefined) {\n                removeEventListener(EventType.RESIZE, this.handleResize_, false);\n                this.handleResize_ = undefined;\n            }\n        }\n        else {\n            targetElement.appendChild(this.viewport_);\n            var keyboardEventTarget = !this.keyboardEventTarget_ ?\n                targetElement : this.keyboardEventTarget_;\n            this.keyHandlerKeys_ = [\n                listen(keyboardEventTarget, EventType.KEYDOWN, this.handleBrowserEvent, this),\n                listen(keyboardEventTarget, EventType.KEYPRESS, this.handleBrowserEvent, this)\n            ];\n            if (!this.handleResize_) {\n                this.handleResize_ = this.updateSize.bind(this);\n                addEventListener(EventType.RESIZE, this.handleResize_, false);\n            }\n        }\n        this.updateSize();\n        // updateSize calls setSize, so no need to call this.render\n        // ourselves here.\n    };\n    /**\n     * @private\n     */\n    PluggableMap.prototype.handleTileChange_ = function () {\n        this.render();\n    };\n    /**\n     * @private\n     */\n    PluggableMap.prototype.handleViewPropertyChanged_ = function () {\n        this.render();\n    };\n    /**\n     * @private\n     */\n    PluggableMap.prototype.handleViewChanged_ = function () {\n        if (this.viewPropertyListenerKey_) {\n            unlistenByKey(this.viewPropertyListenerKey_);\n            this.viewPropertyListenerKey_ = null;\n        }\n        if (this.viewChangeListenerKey_) {\n            unlistenByKey(this.viewChangeListenerKey_);\n            this.viewChangeListenerKey_ = null;\n        }\n        var view = this.getView();\n        if (view) {\n            this.viewport_.setAttribute('data-view', getUid(view));\n            this.viewPropertyListenerKey_ = listen(view, ObjectEventType.PROPERTYCHANGE, this.handleViewPropertyChanged_, this);\n            this.viewChangeListenerKey_ = listen(view, EventType.CHANGE, this.handleViewPropertyChanged_, this);\n            view.resolveConstraints(0);\n        }\n        this.render();\n    };\n    /**\n     * @private\n     */\n    PluggableMap.prototype.handleLayerGroupChanged_ = function () {\n        if (this.layerGroupPropertyListenerKeys_) {\n            this.layerGroupPropertyListenerKeys_.forEach(unlistenByKey);\n            this.layerGroupPropertyListenerKeys_ = null;\n        }\n        var layerGroup = this.getLayerGroup();\n        if (layerGroup) {\n            this.layerGroupPropertyListenerKeys_ = [\n                listen(layerGroup, ObjectEventType.PROPERTYCHANGE, this.render, this),\n                listen(layerGroup, EventType.CHANGE, this.render, this)\n            ];\n        }\n        this.render();\n    };\n    /**\n     * @return {boolean} Is rendered.\n     */\n    PluggableMap.prototype.isRendered = function () {\n        return !!this.frameState_;\n    };\n    /**\n     * Requests an immediate render in a synchronous manner.\n     * @api\n     */\n    PluggableMap.prototype.renderSync = function () {\n        if (this.animationDelayKey_) {\n            cancelAnimationFrame(this.animationDelayKey_);\n        }\n        this.animationDelay_();\n    };\n    /**\n     * Request a map rendering (at the next animation frame).\n     * @api\n     */\n    PluggableMap.prototype.render = function () {\n        if (this.animationDelayKey_ === undefined) {\n            this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\n        }\n    };\n    /**\n     * Remove the given control from the map.\n     * @param {import(\"./control/Control.js\").default} control Control.\n     * @return {import(\"./control/Control.js\").default|undefined} The removed control (or undefined\n     *     if the control was not found).\n     * @api\n     */\n    PluggableMap.prototype.removeControl = function (control) {\n        return this.getControls().remove(control);\n    };\n    /**\n     * Remove the given interaction from the map.\n     * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to remove.\n     * @return {import(\"./interaction/Interaction.js\").default|undefined} The removed interaction (or\n     *     undefined if the interaction was not found).\n     * @api\n     */\n    PluggableMap.prototype.removeInteraction = function (interaction) {\n        return this.getInteractions().remove(interaction);\n    };\n    /**\n     * Removes the given layer from the map.\n     * @param {import(\"./layer/Base.js\").default} layer Layer.\n     * @return {import(\"./layer/Base.js\").default|undefined} The removed layer (or undefined if the\n     *     layer was not found).\n     * @api\n     */\n    PluggableMap.prototype.removeLayer = function (layer) {\n        var layers = this.getLayerGroup().getLayers();\n        return layers.remove(layer);\n    };\n    /**\n     * Remove the given overlay from the map.\n     * @param {import(\"./Overlay.js\").default} overlay Overlay.\n     * @return {import(\"./Overlay.js\").default|undefined} The removed overlay (or undefined\n     *     if the overlay was not found).\n     * @api\n     */\n    PluggableMap.prototype.removeOverlay = function (overlay) {\n        return this.getOverlays().remove(overlay);\n    };\n    /**\n     * @param {number} time Time.\n     * @private\n     */\n    PluggableMap.prototype.renderFrame_ = function (time) {\n        var viewState;\n        var size = this.getSize();\n        var view = this.getView();\n        var extent = createEmpty();\n        var previousFrameState = this.frameState_;\n        /** @type {?FrameState} */\n        var frameState = null;\n        if (size !== undefined && hasArea(size) && view && view.isDef()) {\n            var viewHints = view.getHints(this.frameState_ ? this.frameState_.viewHints : undefined);\n            viewState = view.getState(this.pixelRatio_);\n            frameState = /** @type {FrameState} */ ({\n                animate: false,\n                coordinateToPixelTransform: this.coordinateToPixelTransform_,\n                extent: extent,\n                focus: this.focus_ ? this.focus_ : viewState.center,\n                index: this.frameIndex_++,\n                layerStatesArray: this.getLayerGroup().getLayerStatesArray(),\n                pixelRatio: this.pixelRatio_,\n                pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\n                postRenderFunctions: [],\n                size: size,\n                skippedFeatureUids: this.skippedFeatureUids_,\n                tileQueue: this.tileQueue_,\n                time: time,\n                usedTiles: {},\n                viewState: viewState,\n                viewHints: viewHints,\n                wantedTiles: {}\n            });\n        }\n        if (frameState) {\n            frameState.extent = getForViewAndSize(viewState.center, viewState.resolution, viewState.rotation, frameState.size, extent);\n        }\n        this.frameState_ = frameState;\n        this.renderer_.renderFrame(frameState);\n        if (frameState) {\n            if (frameState.animate) {\n                this.render();\n            }\n            Array.prototype.push.apply(this.postRenderFunctions_, frameState.postRenderFunctions);\n            if (previousFrameState) {\n                var moveStart = !this.previousExtent_ ||\n                    (!isEmpty(this.previousExtent_) &&\n                        !equals(frameState.extent, this.previousExtent_));\n                if (moveStart) {\n                    this.dispatchEvent(new MapEvent(MapEventType.MOVESTART, this, previousFrameState));\n                    this.previousExtent_ = createOrUpdateEmpty(this.previousExtent_);\n                }\n            }\n            var idle = this.previousExtent_ &&\n                !frameState.viewHints[ViewHint.ANIMATING] &&\n                !frameState.viewHints[ViewHint.INTERACTING] &&\n                !equals(frameState.extent, this.previousExtent_);\n            if (idle) {\n                this.dispatchEvent(new MapEvent(MapEventType.MOVEEND, this, frameState));\n                clone(frameState.extent, this.previousExtent_);\n            }\n        }\n        this.dispatchEvent(new MapEvent(MapEventType.POSTRENDER, this, frameState));\n        setTimeout(this.handlePostRender.bind(this), 0);\n    };\n    /**\n     * Sets the layergroup of this map.\n     * @param {LayerGroup} layerGroup A layer group containing the layers in this map.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.setLayerGroup = function (layerGroup) {\n        this.set(MapProperty.LAYERGROUP, layerGroup);\n    };\n    /**\n     * Set the size of this map.\n     * @param {import(\"./size.js\").Size|undefined} size The size in pixels of the map in the DOM.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.setSize = function (size) {\n        this.set(MapProperty.SIZE, size);\n    };\n    /**\n     * Set the target element to render this map into.\n     * @param {HTMLElement|string|undefined} target The Element or id of the Element\n     *     that the map is rendered in.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.setTarget = function (target) {\n        this.set(MapProperty.TARGET, target);\n    };\n    /**\n     * Set the view for this map.\n     * @param {View} view The view that controls this map.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.setView = function (view) {\n        this.set(MapProperty.VIEW, view);\n    };\n    /**\n     * @param {import(\"./Feature.js\").default} feature Feature.\n     */\n    PluggableMap.prototype.skipFeature = function (feature) {\n        this.skippedFeatureUids_[getUid(feature)] = true;\n        this.render();\n    };\n    /**\n     * Force a recalculation of the map viewport size.  This should be called when\n     * third-party code changes the size of the map viewport.\n     * @api\n     */\n    PluggableMap.prototype.updateSize = function () {\n        var targetElement = this.getTargetElement();\n        if (!targetElement) {\n            this.setSize(undefined);\n        }\n        else {\n            var computedStyle = getComputedStyle(targetElement);\n            this.setSize([\n                targetElement.offsetWidth -\n                    parseFloat(computedStyle['borderLeftWidth']) -\n                    parseFloat(computedStyle['paddingLeft']) -\n                    parseFloat(computedStyle['paddingRight']) -\n                    parseFloat(computedStyle['borderRightWidth']),\n                targetElement.offsetHeight -\n                    parseFloat(computedStyle['borderTopWidth']) -\n                    parseFloat(computedStyle['paddingTop']) -\n                    parseFloat(computedStyle['paddingBottom']) -\n                    parseFloat(computedStyle['borderBottomWidth'])\n            ]);\n        }\n    };\n    /**\n     * @param {import(\"./Feature.js\").default} feature Feature.\n     */\n    PluggableMap.prototype.unskipFeature = function (feature) {\n        delete this.skippedFeatureUids_[getUid(feature)];\n        this.render();\n    };\n    return PluggableMap;\n}(BaseObject));\n/**\n * @param {MapOptions} options Map options.\n * @return {MapOptionsInternal} Internal map options.\n */\nfunction createOptionsInternal(options) {\n    /**\n     * @type {HTMLElement|Document}\n     */\n    var keyboardEventTarget = null;\n    if (options.keyboardEventTarget !== undefined) {\n        keyboardEventTarget = typeof options.keyboardEventTarget === 'string' ?\n            document.getElementById(options.keyboardEventTarget) :\n            options.keyboardEventTarget;\n    }\n    /**\n     * @type {Object<string, *>}\n     */\n    var values = {};\n    var layerGroup = options.layers && typeof /** @type {?} */ (options.layers).getLayers === 'function' ?\n        /** @type {LayerGroup} */ (options.layers) : new LayerGroup({ layers: /** @type {Collection} */ (options.layers) });\n    values[MapProperty.LAYERGROUP] = layerGroup;\n    values[MapProperty.TARGET] = options.target;\n    values[MapProperty.VIEW] = options.view !== undefined ?\n        options.view : new View();\n    var controls;\n    if (options.controls !== undefined) {\n        if (Array.isArray(options.controls)) {\n            controls = new Collection(options.controls.slice());\n        }\n        else {\n            assert(typeof /** @type {?} */ (options.controls).getArray === 'function', 47); // Expected `controls` to be an array or an `import(\"./Collection.js\").Collection`\n            controls = /** @type {Collection} */ (options.controls);\n        }\n    }\n    var interactions;\n    if (options.interactions !== undefined) {\n        if (Array.isArray(options.interactions)) {\n            interactions = new Collection(options.interactions.slice());\n        }\n        else {\n            assert(typeof /** @type {?} */ (options.interactions).getArray === 'function', 48); // Expected `interactions` to be an array or an `import(\"./Collection.js\").Collection`\n            interactions = /** @type {Collection} */ (options.interactions);\n        }\n    }\n    var overlays;\n    if (options.overlays !== undefined) {\n        if (Array.isArray(options.overlays)) {\n            overlays = new Collection(options.overlays.slice());\n        }\n        else {\n            assert(typeof /** @type {?} */ (options.overlays).getArray === 'function', 49); // Expected `overlays` to be an array or an `import(\"./Collection.js\").Collection`\n            overlays = options.overlays;\n        }\n    }\n    else {\n        overlays = new Collection();\n    }\n    return {\n        controls: controls,\n        interactions: interactions,\n        keyboardEventTarget: keyboardEventTarget,\n        overlays: overlays,\n        values: values\n    };\n}\nexport default PluggableMap;\n/**\n * @param  {Array<import(\"./layer/Base.js\").default>} layers Layers.\n * @return {boolean} Layers have sources that are still loading.\n */\nfunction getLoading(layers) {\n    for (var i = 0, ii = layers.length; i < ii; ++i) {\n        var layer = layers[i];\n        if (typeof /** @type {?} */ (layer).getLayers === 'function') {\n            return getLoading(/** @type {LayerGroup} */ (layer).getLayers().getArray());\n        }\n        else {\n            var source = /** @type {import(\"./layer/Layer.js\").default} */ (layer).getSource();\n            if (source && source.loading) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\n//# sourceMappingURL=PluggableMap.js.map","/**\n * @module ol/size\n */\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array<number>} Size\n * @api\n */\n/**\n * Returns a buffered size.\n * @param {Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {Size=} opt_size Optional reusable size array.\n * @return {Size} The buffered size.\n */\nexport function buffer(size, num, opt_size) {\n    if (opt_size === undefined) {\n        opt_size = [0, 0];\n    }\n    opt_size[0] = size[0] + 2 * num;\n    opt_size[1] = size[1] + 2 * num;\n    return opt_size;\n}\n/**\n * Determines if a size has a positive area.\n * @param {Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n    return size[0] > 0 && size[1] > 0;\n}\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {Size} size Size.\n * @param {number} ratio Ratio.\n * @param {Size=} opt_size Optional reusable size array.\n * @return {Size} The scaled size.\n */\nexport function scale(size, ratio, opt_size) {\n    if (opt_size === undefined) {\n        opt_size = [0, 0];\n    }\n    opt_size[0] = (size[0] * ratio + 0.5) | 0;\n    opt_size[1] = (size[1] * ratio + 0.5) | 0;\n    return opt_size;\n}\n/**\n * Returns an `Size` array for the passed in number (meaning: square) or\n * `Size` array.\n * (meaning: non-square),\n * @param {number|Size} size Width and height.\n * @param {Size=} opt_size Optional reusable size array.\n * @return {Size} Size.\n * @api\n */\nexport function toSize(size, opt_size) {\n    if (Array.isArray(size)) {\n        return size;\n    }\n    else {\n        if (opt_size === undefined) {\n            opt_size = [size, size];\n        }\n        else {\n            opt_size[0] = opt_size[1] = /** @type {number} */ (size);\n        }\n        return opt_size;\n    }\n}\n//# sourceMappingURL=size.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/control/Control\n */\nimport { VOID } from '../functions.js';\nimport MapEventType from '../MapEventType.js';\nimport BaseObject from '../Object.js';\nimport { removeNode } from '../dom.js';\nimport { listen, unlistenByKey } from '../events.js';\n/**\n * @typedef {Object} Options\n * @property {HTMLElement} [element] The element is the control's\n * container element. This only needs to be specified if you're developing\n * a custom control.\n * @property {function(import(\"../MapEvent.js\").default)} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want\n * the control to be rendered outside of the map's viewport.\n */\n/**\n * @classdesc\n * A control is a visible widget with a DOM element in a fixed position on the\n * screen. They can involve user input (buttons), or be informational only;\n * the position is determined using CSS. By default these are placed in the\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\n * any outside DOM element.\n *\n * This is the base class for controls. You can use it for simple custom\n * controls by creating the element with listeners, creating an instance:\n * ```js\n * var myControl = new Control({element: myElement});\n * ```\n * and then adding this to the map.\n *\n * The main advantage of having this as a control rather than a simple separate\n * DOM element is that preventing propagation is handled for you. Controls\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\n *\n * You can also extend this base for your own control class. See\n * examples/custom-controls for an example of how to do this.\n *\n * @api\n */\nvar Control = /** @class */ (function (_super) {\n    __extends(Control, _super);\n    /**\n     * @param {Options} options Control options.\n     */\n    function Control(options) {\n        var _this = _super.call(this) || this;\n        /**\n         * @protected\n         * @type {HTMLElement}\n         */\n        _this.element = options.element ? options.element : null;\n        /**\n         * @private\n         * @type {HTMLElement}\n         */\n        _this.target_ = null;\n        /**\n         * @private\n         * @type {import(\"../PluggableMap.js\").default}\n         */\n        _this.map_ = null;\n        /**\n         * @protected\n         * @type {!Array<import(\"../events.js\").EventsKey>}\n         */\n        _this.listenerKeys = [];\n        /**\n         * @type {function(import(\"../MapEvent.js\").default): void}\n         */\n        _this.render = options.render ? options.render : VOID;\n        if (options.target) {\n            _this.setTarget(options.target);\n        }\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    Control.prototype.disposeInternal = function () {\n        removeNode(this.element);\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * Get the map associated with this control.\n     * @return {import(\"../PluggableMap.js\").default} Map.\n     * @api\n     */\n    Control.prototype.getMap = function () {\n        return this.map_;\n    };\n    /**\n     * Remove the control from its current map and attach it to the new map.\n     * Subclasses may set up event handlers to get notified about changes to\n     * the map here.\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     * @api\n     */\n    Control.prototype.setMap = function (map) {\n        if (this.map_) {\n            removeNode(this.element);\n        }\n        for (var i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\n            unlistenByKey(this.listenerKeys[i]);\n        }\n        this.listenerKeys.length = 0;\n        this.map_ = map;\n        if (this.map_) {\n            var target = this.target_ ?\n                this.target_ : map.getOverlayContainerStopEvent();\n            target.appendChild(this.element);\n            if (this.render !== VOID) {\n                this.listenerKeys.push(listen(map, MapEventType.POSTRENDER, this.render, this));\n            }\n            map.render();\n        }\n    };\n    /**\n     * This function is used to set a target element for the control. It has no\n     * effect if it is called after the control has been added to the map (i.e.\n     * after `setMap` is called on the control). If no `target` is set in the\n     * options passed to the control constructor and if `setTarget` is not called\n     * then the control is added to the map's overlay container.\n     * @param {HTMLElement|string} target Target.\n     * @api\n     */\n    Control.prototype.setTarget = function (target) {\n        this.target_ = typeof target === 'string' ?\n            document.getElementById(target) :\n            target;\n    };\n    return Control;\n}(BaseObject));\nexport default Control;\n//# sourceMappingURL=Control.js.map","/**\n * @module ol/css\n */\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_HIDDEN = 'ol-hidden';\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_SELECTABLE = 'ol-selectable';\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_UNSELECTABLE = 'ol-unselectable';\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_UNSUPPORTED = 'ol-unsupported';\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_CONTROL = 'ol-control';\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_COLLAPSED = 'ol-collapsed';\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} The CSS font property.\n * @return {Object<string>} The font families (or null if the input spec is invalid).\n */\nexport var getFontFamilies = (function () {\n    var style;\n    var cache = {};\n    return function (font) {\n        if (!style) {\n            style = document.createElement('div').style;\n        }\n        if (!(font in cache)) {\n            style.font = font;\n            var family = style.fontFamily;\n            style.font = '';\n            if (!family) {\n                return null;\n            }\n            cache[font] = family.split(/,\\s?/);\n        }\n        return cache[font];\n    };\n})();\n//# sourceMappingURL=css.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/Layer\n */\nimport { listen, unlistenByKey } from '../events.js';\nimport EventType from '../events/EventType.js';\nimport { getChangeEventType } from '../Object.js';\nimport BaseLayer from './Base.js';\nimport LayerProperty from './Property.js';\nimport { assign } from '../obj.js';\nimport RenderEventType from '../render/EventType.js';\nimport SourceState from '../source/State.js';\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {import(\"../source/Source.js\").default} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer#setSource layer.setSource(source)} after\n * construction.\n * @property {import(\"../PluggableMap.js\").default} [map] Map.\n */\n/**\n * @typedef {Object} State\n * @property {import(\"./Base.js\").default} layer\n * @property {number} opacity Opacity, the value is rounded to two digits to appear after the decimal point.\n * @property {SourceState} sourceState\n * @property {boolean} visible\n * @property {boolean} managed\n * @property {import(\"../extent.js\").Extent} [extent]\n * @property {number} zIndex\n * @property {number} maxResolution\n * @property {number} minResolution\n */\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with {@link module:ol/Map#addLayer}. Components\n * like {@link module:ol/interaction/Select~Select} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * {@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n *\n * @fires import(\"../render/Event.js\").RenderEvent#prerender\n * @fires import(\"../render/Event.js\").RenderEvent#postrender\n *\n * @template {import(\"../source/Source.js\").default} SourceType\n */\nvar Layer = /** @class */ (function (_super) {\n    __extends(Layer, _super);\n    /**\n     * @param {Options} options Layer options.\n     */\n    function Layer(options) {\n        var _this = this;\n        var baseOptions = assign({}, options);\n        delete baseOptions.source;\n        _this = _super.call(this, baseOptions) || this;\n        /**\n         * @private\n         * @type {?import(\"../events.js\").EventsKey}\n         */\n        _this.mapPrecomposeKey_ = null;\n        /**\n         * @private\n         * @type {?import(\"../events.js\").EventsKey}\n         */\n        _this.mapRenderKey_ = null;\n        /**\n         * @private\n         * @type {?import(\"../events.js\").EventsKey}\n         */\n        _this.sourceChangeKey_ = null;\n        /**\n         * @private\n         * @type {import(\"../renderer/Layer.js\").default}\n         */\n        _this.renderer_ = null;\n        if (options.map) {\n            _this.setMap(options.map);\n        }\n        listen(_this, getChangeEventType(LayerProperty.SOURCE), _this.handleSourcePropertyChange_, _this);\n        var source = options.source ? /** @type {SourceType} */ (options.source) : null;\n        _this.setSource(source);\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    Layer.prototype.getLayersArray = function (opt_array) {\n        var array = opt_array ? opt_array : [];\n        array.push(this);\n        return array;\n    };\n    /**\n     * @inheritDoc\n     */\n    Layer.prototype.getLayerStatesArray = function (opt_states) {\n        var states = opt_states ? opt_states : [];\n        states.push(this.getLayerState());\n        return states;\n    };\n    /**\n     * Get the layer source.\n     * @return {SourceType} The layer source (or `null` if not yet set).\n     * @observable\n     * @api\n     */\n    Layer.prototype.getSource = function () {\n        return /** @type {SourceType} */ (this.get(LayerProperty.SOURCE)) || null;\n    };\n    /**\n      * @inheritDoc\n      */\n    Layer.prototype.getSourceState = function () {\n        var source = this.getSource();\n        return !source ? SourceState.UNDEFINED : source.getState();\n    };\n    /**\n     * @private\n     */\n    Layer.prototype.handleSourceChange_ = function () {\n        this.changed();\n    };\n    /**\n     * @private\n     */\n    Layer.prototype.handleSourcePropertyChange_ = function () {\n        if (this.sourceChangeKey_) {\n            unlistenByKey(this.sourceChangeKey_);\n            this.sourceChangeKey_ = null;\n        }\n        var source = this.getSource();\n        if (source) {\n            this.sourceChangeKey_ = listen(source, EventType.CHANGE, this.handleSourceChange_, this);\n        }\n        this.changed();\n    };\n    /**\n     * In charge to manage the rendering of the layer. One layer type is\n     * bounded with one layer renderer.\n     * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @return {HTMLElement} The rendered element.\n     */\n    Layer.prototype.render = function (frameState) {\n        var layerRenderer = this.getRenderer();\n        var layerState = this.getLayerState();\n        if (layerRenderer.prepareFrame(frameState, layerState)) {\n            return layerRenderer.renderFrame(frameState, layerState);\n        }\n    };\n    /**\n     * Sets the layer to be rendered on top of other layers on a map. The map will\n     * not manage this layer in its layers collection, and the callback in\n     * {@link module:ol/Map#forEachLayerAtPixel} will receive `null` as layer. This\n     * is useful for temporary layers. To remove an unmanaged layer from the map,\n     * use `#setMap(null)`.\n     *\n     * To add the layer to a map and have it managed by the map, use\n     * {@link module:ol/Map#addLayer} instead.\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     * @api\n     */\n    Layer.prototype.setMap = function (map) {\n        if (this.mapPrecomposeKey_) {\n            unlistenByKey(this.mapPrecomposeKey_);\n            this.mapPrecomposeKey_ = null;\n        }\n        if (!map) {\n            this.changed();\n        }\n        if (this.mapRenderKey_) {\n            unlistenByKey(this.mapRenderKey_);\n            this.mapRenderKey_ = null;\n        }\n        if (map) {\n            this.mapPrecomposeKey_ = listen(map, RenderEventType.PRECOMPOSE, function (evt) {\n                var renderEvent = /** @type {import(\"../render/Event.js\").default} */ (evt);\n                var layerState = this.getLayerState();\n                layerState.managed = false;\n                if (this.getZIndex() === undefined) {\n                    layerState.zIndex = Infinity;\n                }\n                renderEvent.frameState.layerStatesArray.push(layerState);\n            }, this);\n            this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n            this.changed();\n        }\n    };\n    /**\n     * Set the layer source.\n     * @param {SourceType} source The layer source.\n     * @observable\n     * @api\n     */\n    Layer.prototype.setSource = function (source) {\n        this.set(LayerProperty.SOURCE, source);\n    };\n    /**\n     * Get the renderer for this layer.\n     * @return {import(\"../renderer/Layer.js\").default} The layer renderer.\n     */\n    Layer.prototype.getRenderer = function () {\n        if (!this.renderer_) {\n            this.renderer_ = this.createRenderer();\n        }\n        return this.renderer_;\n    };\n    /**\n     * Create a renderer for this layer.\n     * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n     * @protected\n     */\n    Layer.prototype.createRenderer = function () {\n        return null;\n    };\n    return Layer;\n}(BaseLayer));\n/**\n * Return `true` if the layer is visible, and if the passed resolution is\n * between the layer's minResolution and maxResolution. The comparison is\n * inclusive for `minResolution` and exclusive for `maxResolution`.\n * @param {State} layerState Layer state.\n * @param {number} resolution Resolution.\n * @return {boolean} The layer is visible at the given resolution.\n */\nexport function visibleAtResolution(layerState, resolution) {\n    return layerState.visible && resolution >= layerState.minResolution &&\n        resolution < layerState.maxResolution;\n}\nexport default Layer;\n//# sourceMappingURL=Layer.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/control/Attribution\n */\nimport { equals } from '../array.js';\nimport Control from './Control.js';\nimport { CLASS_CONTROL, CLASS_UNSELECTABLE, CLASS_COLLAPSED } from '../css.js';\nimport { removeChildren, replaceNode } from '../dom.js';\nimport { listen } from '../events.js';\nimport EventType from '../events/EventType.js';\nimport { visibleAtResolution } from '../layer/Layer.js';\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-attribution'] CSS class name.\n * @property {HTMLElement|string} [target] Specify a target if you\n * want the control to be rendered outside of the map's\n * viewport.\n * @property {boolean} [collapsible] Specify if attributions can\n * be collapsed. If not specified, sources control this behavior with their\n * `attributionsCollapsible` setting.\n * @property {boolean} [collapsed=true] Specify if attributions should\n * be collapsed at startup.\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\n * @property {string} [label='i'] Text label to use for the\n * collapsed attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [collapseLabel='»'] Text label to use\n * for the expanded attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {function(import(\"../MapEvent.js\").default)} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n */\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @api\n */\nvar Attribution = /** @class */ (function (_super) {\n    __extends(Attribution, _super);\n    /**\n     * @param {Options=} opt_options Attribution options.\n     */\n    function Attribution(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, {\n            element: document.createElement('div'),\n            render: options.render || render,\n            target: options.target\n        }) || this;\n        /**\n         * @private\n         * @type {HTMLElement}\n         */\n        _this.ulElement_ = document.createElement('ul');\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.collapsed_ = options.collapsed !== undefined ? options.collapsed : true;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.overrideCollapsible_ = options.collapsible !== undefined;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.collapsible_ = options.collapsible !== undefined ?\n            options.collapsible : true;\n        if (!_this.collapsible_) {\n            _this.collapsed_ = false;\n        }\n        var className = options.className !== undefined ? options.className : 'ol-attribution';\n        var tipLabel = options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n        var collapseLabel = options.collapseLabel !== undefined ? options.collapseLabel : '\\u00BB';\n        if (typeof collapseLabel === 'string') {\n            /**\n             * @private\n             * @type {HTMLElement}\n             */\n            _this.collapseLabel_ = document.createElement('span');\n            _this.collapseLabel_.textContent = collapseLabel;\n        }\n        else {\n            _this.collapseLabel_ = collapseLabel;\n        }\n        var label = options.label !== undefined ? options.label : 'i';\n        if (typeof label === 'string') {\n            /**\n             * @private\n             * @type {HTMLElement}\n             */\n            _this.label_ = document.createElement('span');\n            _this.label_.textContent = label;\n        }\n        else {\n            _this.label_ = label;\n        }\n        var activeLabel = (_this.collapsible_ && !_this.collapsed_) ?\n            _this.collapseLabel_ : _this.label_;\n        var button = document.createElement('button');\n        button.setAttribute('type', 'button');\n        button.title = tipLabel;\n        button.appendChild(activeLabel);\n        listen(button, EventType.CLICK, _this.handleClick_, _this);\n        var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL +\n            (_this.collapsed_ && _this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n            (_this.collapsible_ ? '' : ' ol-uncollapsible');\n        var element = _this.element;\n        element.className = cssClasses;\n        element.appendChild(_this.ulElement_);\n        element.appendChild(button);\n        /**\n         * A list of currently rendered resolutions.\n         * @type {Array<string>}\n         * @private\n         */\n        _this.renderedAttributions_ = [];\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.renderedVisible_ = true;\n        return _this;\n    }\n    /**\n     * Collect a list of visible attributions and set the collapsible state.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @return {Array<string>} Attributions.\n     * @private\n     */\n    Attribution.prototype.collectSourceAttributions_ = function (frameState) {\n        /**\n         * Used to determine if an attribution already exists.\n         * @type {!Object<string, boolean>}\n         */\n        var lookup = {};\n        /**\n         * A list of visible attributions.\n         * @type {Array<string>}\n         */\n        var visibleAttributions = [];\n        var layerStatesArray = frameState.layerStatesArray;\n        var resolution = frameState.viewState.resolution;\n        for (var i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n            var layerState = layerStatesArray[i];\n            if (!visibleAtResolution(layerState, resolution)) {\n                continue;\n            }\n            var source = /** @type {import(\"../layer/Layer.js\").default} */ (layerState.layer).getSource();\n            if (!source) {\n                continue;\n            }\n            var attributionGetter = source.getAttributions();\n            if (!attributionGetter) {\n                continue;\n            }\n            var attributions = attributionGetter(frameState);\n            if (!attributions) {\n                continue;\n            }\n            if (!this.overrideCollapsible_ && source.getAttributionsCollapsible() === false) {\n                this.setCollapsible(false);\n            }\n            if (Array.isArray(attributions)) {\n                for (var j = 0, jj = attributions.length; j < jj; ++j) {\n                    if (!(attributions[j] in lookup)) {\n                        visibleAttributions.push(attributions[j]);\n                        lookup[attributions[j]] = true;\n                    }\n                }\n            }\n            else {\n                if (!(attributions in lookup)) {\n                    visibleAttributions.push(attributions);\n                    lookup[attributions] = true;\n                }\n            }\n        }\n        return visibleAttributions;\n    };\n    /**\n     * @private\n     * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     */\n    Attribution.prototype.updateElement_ = function (frameState) {\n        if (!frameState) {\n            if (this.renderedVisible_) {\n                this.element.style.display = 'none';\n                this.renderedVisible_ = false;\n            }\n            return;\n        }\n        var attributions = this.collectSourceAttributions_(frameState);\n        var visible = attributions.length > 0;\n        if (this.renderedVisible_ != visible) {\n            this.element.style.display = visible ? '' : 'none';\n            this.renderedVisible_ = visible;\n        }\n        if (equals(attributions, this.renderedAttributions_)) {\n            return;\n        }\n        removeChildren(this.ulElement_);\n        // append the attributions\n        for (var i = 0, ii = attributions.length; i < ii; ++i) {\n            var element = document.createElement('li');\n            element.innerHTML = attributions[i];\n            this.ulElement_.appendChild(element);\n        }\n        this.renderedAttributions_ = attributions;\n    };\n    /**\n     * @param {MouseEvent} event The event to handle\n     * @private\n     */\n    Attribution.prototype.handleClick_ = function (event) {\n        event.preventDefault();\n        this.handleToggle_();\n    };\n    /**\n     * @private\n     */\n    Attribution.prototype.handleToggle_ = function () {\n        this.element.classList.toggle(CLASS_COLLAPSED);\n        if (this.collapsed_) {\n            replaceNode(this.collapseLabel_, this.label_);\n        }\n        else {\n            replaceNode(this.label_, this.collapseLabel_);\n        }\n        this.collapsed_ = !this.collapsed_;\n    };\n    /**\n     * Return `true` if the attribution is collapsible, `false` otherwise.\n     * @return {boolean} True if the widget is collapsible.\n     * @api\n     */\n    Attribution.prototype.getCollapsible = function () {\n        return this.collapsible_;\n    };\n    /**\n     * Set whether the attribution should be collapsible.\n     * @param {boolean} collapsible True if the widget is collapsible.\n     * @api\n     */\n    Attribution.prototype.setCollapsible = function (collapsible) {\n        if (this.collapsible_ === collapsible) {\n            return;\n        }\n        this.collapsible_ = collapsible;\n        this.element.classList.toggle('ol-uncollapsible');\n        if (!collapsible && this.collapsed_) {\n            this.handleToggle_();\n        }\n    };\n    /**\n     * Collapse or expand the attribution according to the passed parameter. Will\n     * not do anything if the attribution isn't collapsible or if the current\n     * collapsed state is already the one requested.\n     * @param {boolean} collapsed True if the widget is collapsed.\n     * @api\n     */\n    Attribution.prototype.setCollapsed = function (collapsed) {\n        if (!this.collapsible_ || this.collapsed_ === collapsed) {\n            return;\n        }\n        this.handleToggle_();\n    };\n    /**\n     * Return `true` when the attribution is currently collapsed or `false`\n     * otherwise.\n     * @return {boolean} True if the widget is collapsed.\n     * @api\n     */\n    Attribution.prototype.getCollapsed = function () {\n        return this.collapsed_;\n    };\n    return Attribution;\n}(Control));\n/**\n * Update the attribution element.\n * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n * @this {Attribution}\n * @api\n */\nexport function render(mapEvent) {\n    this.updateElement_(mapEvent.frameState);\n}\nexport default Attribution;\n//# sourceMappingURL=Attribution.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/control/Rotate\n */\nimport Control from './Control.js';\nimport { CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE } from '../css.js';\nimport { easeOut } from '../easing.js';\nimport { listen } from '../events.js';\nimport EventType from '../events/EventType.js';\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-rotate'] CSS class name.\n * @property {string|HTMLElement} [label='⇧'] Text label to use for the rotate button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\n * @property {function(import(\"../MapEvent.js\").default)} [render] Function called when the control should\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {function()} [resetNorth] Function called when the control is clicked.\n * This will override the default `resetNorth`.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n/**\n * @classdesc\n * A button control to reset rotation to 0.\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\n * selector is added to the button when the rotation is 0.\n *\n * @api\n */\nvar Rotate = /** @class */ (function (_super) {\n    __extends(Rotate, _super);\n    /**\n     * @param {Options=} opt_options Rotate options.\n     */\n    function Rotate(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, {\n            element: document.createElement('div'),\n            render: options.render || render,\n            target: options.target\n        }) || this;\n        var className = options.className !== undefined ? options.className : 'ol-rotate';\n        var label = options.label !== undefined ? options.label : '\\u21E7';\n        /**\n         * @type {HTMLElement}\n         * @private\n         */\n        _this.label_ = null;\n        if (typeof label === 'string') {\n            _this.label_ = document.createElement('span');\n            _this.label_.className = 'ol-compass';\n            _this.label_.textContent = label;\n        }\n        else {\n            _this.label_ = label;\n            _this.label_.classList.add('ol-compass');\n        }\n        var tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\n        var button = document.createElement('button');\n        button.className = className + '-reset';\n        button.setAttribute('type', 'button');\n        button.title = tipLabel;\n        button.appendChild(_this.label_);\n        listen(button, EventType.CLICK, _this.handleClick_, _this);\n        var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n        var element = _this.element;\n        element.className = cssClasses;\n        element.appendChild(button);\n        _this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        _this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.rotation_ = undefined;\n        if (_this.autoHide_) {\n            _this.element.classList.add(CLASS_HIDDEN);\n        }\n        return _this;\n    }\n    /**\n     * @param {MouseEvent} event The event to handle\n     * @private\n     */\n    Rotate.prototype.handleClick_ = function (event) {\n        event.preventDefault();\n        if (this.callResetNorth_ !== undefined) {\n            this.callResetNorth_();\n        }\n        else {\n            this.resetNorth_();\n        }\n    };\n    /**\n     * @private\n     */\n    Rotate.prototype.resetNorth_ = function () {\n        var map = this.getMap();\n        var view = map.getView();\n        if (!view) {\n            // the map does not have a view, so we can't act\n            // upon it\n            return;\n        }\n        if (view.getRotation() !== undefined) {\n            if (this.duration_ > 0) {\n                view.animate({\n                    rotation: 0,\n                    duration: this.duration_,\n                    easing: easeOut\n                });\n            }\n            else {\n                view.setRotation(0);\n            }\n        }\n    };\n    return Rotate;\n}(Control));\n/**\n * Update the rotate control element.\n * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n * @this {Rotate}\n * @api\n */\nexport function render(mapEvent) {\n    var frameState = mapEvent.frameState;\n    if (!frameState) {\n        return;\n    }\n    var rotation = frameState.viewState.rotation;\n    if (rotation != this.rotation_) {\n        var transform = 'rotate(' + rotation + 'rad)';\n        if (this.autoHide_) {\n            var contains = this.element.classList.contains(CLASS_HIDDEN);\n            if (!contains && rotation === 0) {\n                this.element.classList.add(CLASS_HIDDEN);\n            }\n            else if (contains && rotation !== 0) {\n                this.element.classList.remove(CLASS_HIDDEN);\n            }\n        }\n        this.label_.style.transform = transform;\n    }\n    this.rotation_ = rotation;\n}\nexport default Rotate;\n//# sourceMappingURL=Rotate.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/control/Zoom\n */\nimport { listen } from '../events.js';\nimport EventType from '../events/EventType.js';\nimport Control from './Control.js';\nimport { CLASS_CONTROL, CLASS_UNSELECTABLE } from '../css.js';\nimport { easeOut } from '../easing.js';\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {string} [className='ol-zoom'] CSS class name.\n * @property {string|HTMLElement} [zoomInLabel='+'] Text label to use for the zoom-in\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [zoomOutLabel='-'] Text label to use for the zoom-out button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\n * @property {number} [delta=1] The zoom delta applied on each click.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n/**\n * @classdesc\n * A control with 2 buttons, one for zoom in and one for zoom out.\n * This control is one of the default controls of a map. To style this control\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\n *\n * @api\n */\nvar Zoom = /** @class */ (function (_super) {\n    __extends(Zoom, _super);\n    /**\n     * @param {Options=} opt_options Zoom options.\n     */\n    function Zoom(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, {\n            element: document.createElement('div'),\n            target: options.target\n        }) || this;\n        var className = options.className !== undefined ? options.className : 'ol-zoom';\n        var delta = options.delta !== undefined ? options.delta : 1;\n        var zoomInLabel = options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\n        var zoomOutLabel = options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2212';\n        var zoomInTipLabel = options.zoomInTipLabel !== undefined ?\n            options.zoomInTipLabel : 'Zoom in';\n        var zoomOutTipLabel = options.zoomOutTipLabel !== undefined ?\n            options.zoomOutTipLabel : 'Zoom out';\n        var inElement = document.createElement('button');\n        inElement.className = className + '-in';\n        inElement.setAttribute('type', 'button');\n        inElement.title = zoomInTipLabel;\n        inElement.appendChild(typeof zoomInLabel === 'string' ? document.createTextNode(zoomInLabel) : zoomInLabel);\n        listen(inElement, EventType.CLICK, _this.handleClick_.bind(_this, delta));\n        var outElement = document.createElement('button');\n        outElement.className = className + '-out';\n        outElement.setAttribute('type', 'button');\n        outElement.title = zoomOutTipLabel;\n        outElement.appendChild(typeof zoomOutLabel === 'string' ? document.createTextNode(zoomOutLabel) : zoomOutLabel);\n        listen(outElement, EventType.CLICK, _this.handleClick_.bind(_this, -delta));\n        var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n        var element = _this.element;\n        element.className = cssClasses;\n        element.appendChild(inElement);\n        element.appendChild(outElement);\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\n        return _this;\n    }\n    /**\n     * @param {number} delta Zoom delta.\n     * @param {MouseEvent} event The event to handle\n     * @private\n     */\n    Zoom.prototype.handleClick_ = function (delta, event) {\n        event.preventDefault();\n        this.zoomByDelta_(delta);\n    };\n    /**\n     * @param {number} delta Zoom delta.\n     * @private\n     */\n    Zoom.prototype.zoomByDelta_ = function (delta) {\n        var map = this.getMap();\n        var view = map.getView();\n        if (!view) {\n            // the map does not have a view, so we can't act\n            // upon it\n            return;\n        }\n        var currentZoom = view.getZoom();\n        if (currentZoom !== undefined) {\n            var newZoom = view.getConstrainedZoom(currentZoom + delta);\n            if (this.duration_ > 0) {\n                if (view.getAnimating()) {\n                    view.cancelAnimations();\n                }\n                view.animate({\n                    zoom: newZoom,\n                    duration: this.duration_,\n                    easing: easeOut\n                });\n            }\n            else {\n                view.setZoom(newZoom);\n            }\n        }\n    };\n    return Zoom;\n}(Control));\nexport default Zoom;\n//# sourceMappingURL=Zoom.js.map","/**\n * @module ol/Kinetic\n */\n/**\n * @classdesc\n * Implementation of inertial deceleration for map movement.\n *\n * @api\n */\nvar Kinetic = /** @class */ (function () {\n    /**\n     * @param {number} decay Rate of decay (must be negative).\n     * @param {number} minVelocity Minimum velocity (pixels/millisecond).\n     * @param {number} delay Delay to consider to calculate the kinetic\n     *     initial values (milliseconds).\n     */\n    function Kinetic(decay, minVelocity, delay) {\n        /**\n         * @private\n         * @type {number}\n         */\n        this.decay_ = decay;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.minVelocity_ = minVelocity;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.delay_ = delay;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        this.points_ = [];\n        /**\n         * @private\n         * @type {number}\n         */\n        this.angle_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.initialVelocity_ = 0;\n    }\n    /**\n     * FIXME empty description for jsdoc\n     */\n    Kinetic.prototype.begin = function () {\n        this.points_.length = 0;\n        this.angle_ = 0;\n        this.initialVelocity_ = 0;\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     */\n    Kinetic.prototype.update = function (x, y) {\n        this.points_.push(x, y, Date.now());\n    };\n    /**\n     * @return {boolean} Whether we should do kinetic animation.\n     */\n    Kinetic.prototype.end = function () {\n        if (this.points_.length < 6) {\n            // at least 2 points are required (i.e. there must be at least 6 elements\n            // in the array)\n            return false;\n        }\n        var delay = Date.now() - this.delay_;\n        var lastIndex = this.points_.length - 3;\n        if (this.points_[lastIndex + 2] < delay) {\n            // the last tracked point is too old, which means that the user stopped\n            // panning before releasing the map\n            return false;\n        }\n        // get the first point which still falls into the delay time\n        var firstIndex = lastIndex - 3;\n        while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\n            firstIndex -= 3;\n        }\n        var duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\n        // we don't want a duration of 0 (divide by zero)\n        // we also make sure the user panned for a duration of at least one frame\n        // (1/60s) to compute sane displacement values\n        if (duration < 1000 / 60) {\n            return false;\n        }\n        var dx = this.points_[lastIndex] - this.points_[firstIndex];\n        var dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\n        this.angle_ = Math.atan2(dy, dx);\n        this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\n        return this.initialVelocity_ > this.minVelocity_;\n    };\n    /**\n     * @return {number} Total distance travelled (pixels).\n     */\n    Kinetic.prototype.getDistance = function () {\n        return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\n    };\n    /**\n     * @return {number} Angle of the kinetic panning animation (radians).\n     */\n    Kinetic.prototype.getAngle = function () {\n        return this.angle_;\n    };\n    return Kinetic;\n}());\nexport default Kinetic;\n//# sourceMappingURL=Kinetic.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/DoubleClickZoom\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport Interaction, { zoomByDelta } from './Interaction.js';\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [delta=1] The zoom delta applied on each double click.\n */\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n * @api\n */\nvar DoubleClickZoom = /** @class */ (function (_super) {\n    __extends(DoubleClickZoom, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function DoubleClickZoom(opt_options) {\n        var _this = _super.call(this, {\n            handleEvent: handleEvent\n        }) || this;\n        var options = opt_options ? opt_options : {};\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.delta_ = options.delta ? options.delta : 1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\n        return _this;\n    }\n    return DoubleClickZoom;\n}(Interaction));\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a\n * doubleclick) and eventually zooms the map.\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {DoubleClickZoom}\n */\nfunction handleEvent(mapBrowserEvent) {\n    var stopEvent = false;\n    if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\n        var browserEvent = /** @type {MouseEvent} */ (mapBrowserEvent.originalEvent);\n        var map = mapBrowserEvent.map;\n        var anchor = mapBrowserEvent.coordinate;\n        var delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n        var view = map.getView();\n        zoomByDelta(view, delta, anchor, this.duration_);\n        mapBrowserEvent.preventDefault();\n        stopEvent = true;\n    }\n    return !stopEvent;\n}\nexport default DoubleClickZoom;\n//# sourceMappingURL=DoubleClickZoom.js.map","/**\n * @module ol/events/condition\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport { assert } from '../asserts.js';\nimport { TRUE, FALSE } from '../functions.js';\nimport { WEBKIT, MAC } from '../has.js';\n/**\n * A function that takes an {@link module:ol/MapBrowserEvent} and returns a\n * `{boolean}`. If the condition is met, true should be returned.\n *\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default): boolean} Condition\n */\n/**\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\n * additionally the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt key is pressed.\n * @api\n */\nexport var altKeyOnly = function (mapBrowserEvent) {\n    var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n    return (originalEvent.altKey &&\n        !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n        !originalEvent.shiftKey);\n};\n/**\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\n * (e.g. when additionally the platform-modifier-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt and shift keys are pressed.\n * @api\n */\nexport var altShiftKeysOnly = function (mapBrowserEvent) {\n    var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n    return (originalEvent.altKey &&\n        !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n        originalEvent.shiftKey);\n};\n/**\n * Return `true` if the map has the focus. This condition requires a map target\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map has the focus.\n * @api\n */\nexport var focus = function (event) {\n    return event.target.getTargetElement() === document.activeElement;\n};\n/**\n * Return always true.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True.\n * @api\n */\nexport var always = TRUE;\n/**\n * Return `true` if the event is a `click` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `click` event.\n * @api\n */\nexport var click = function (mapBrowserEvent) {\n    return mapBrowserEvent.type == MapBrowserEventType.CLICK;\n};\n/**\n * Return `true` if the event has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} The result.\n */\nexport var mouseActionButton = function (mapBrowserEvent) {\n    var originalEvent = /** @type {MouseEvent} */ (mapBrowserEvent.originalEvent);\n    return originalEvent.button == 0 &&\n        !(WEBKIT && MAC && originalEvent.ctrlKey);\n};\n/**\n * Return always false.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} False.\n * @api\n */\nexport var never = FALSE;\n/**\n * Return `true` if the browser event is a `pointermove` event, `false`\n * otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the browser event is a `pointermove` event.\n * @api\n */\nexport var pointerMove = function (mapBrowserEvent) {\n    return mapBrowserEvent.type == 'pointermove';\n};\n/**\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `singleclick` event.\n * @api\n */\nexport var singleClick = function (mapBrowserEvent) {\n    return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\n};\n/**\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `dblclick` event.\n * @api\n */\nexport var doubleClick = function (mapBrowserEvent) {\n    return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\n};\n/**\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\n * pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if there no modifier keys are pressed.\n * @api\n */\nexport var noModifierKeys = function (mapBrowserEvent) {\n    var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n    return (!originalEvent.altKey &&\n        !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n        !originalEvent.shiftKey);\n};\n/**\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\n * the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @api\n */\nexport var platformModifierKeyOnly = function (mapBrowserEvent) {\n    var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n    return !originalEvent.altKey &&\n        (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\n        !originalEvent.shiftKey;\n};\n/**\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\n * additionally the alt-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the shift key is pressed.\n * @api\n */\nexport var shiftKeyOnly = function (mapBrowserEvent) {\n    var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n    return (!originalEvent.altKey &&\n        !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n        originalEvent.shiftKey);\n};\n/**\n * Return `true` if the target element is not editable, i.e. not a `<input>`-,\n * `<select>`- or `<textarea>`-element, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if the target element is not editable.\n * @api\n */\nexport var targetNotEditable = function (mapBrowserEvent) {\n    var target = mapBrowserEvent.originalEvent.target;\n    var tagName = /** @type {Element} */ (target).tagName;\n    return (tagName !== 'INPUT' &&\n        tagName !== 'SELECT' &&\n        tagName !== 'TEXTAREA');\n};\n/**\n * Return `true` if the event originates from a mouse device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a mouse device.\n * @api\n */\nexport var mouseOnly = function (mapBrowserEvent) {\n    var pointerEvent = /** @type {import(\"../MapBrowserPointerEvent\").default} */ (mapBrowserEvent).pointerEvent;\n    assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n    // see http://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n    return pointerEvent.pointerType == 'mouse';\n};\n/**\n * Return `true` if the event originates from a touchable device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a touchable device.\n * @api\n */\nexport var touchOnly = function (mapBrowserEvent) {\n    var pointerEvt = /** @type {import(\"../MapBrowserPointerEvent\").default} */ (mapBrowserEvent).pointerEvent;\n    assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n    // see http://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n    return pointerEvt.pointerType === 'touch';\n};\n/**\n * Return `true` if the event originates from a digital pen.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a digital pen.\n * @api\n */\nexport var penOnly = function (mapBrowserEvent) {\n    var pointerEvt = /** @type {import(\"../MapBrowserPointerEvent\").default} */ (mapBrowserEvent).pointerEvent;\n    assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n    // see http://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n    return pointerEvt.pointerType === 'pen';\n};\n/**\n * Return `true` if the event originates from a primary pointer in\n * contact with the surface or if the left mouse button is pressed.\n * See http://www.w3.org/TR/pointerevents/#button-states.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a primary pointer.\n * @api\n */\nexport var primaryAction = function (mapBrowserEvent) {\n    var pointerEvent = /** @type {import(\"../MapBrowserPointerEvent\").default} */ (mapBrowserEvent).pointerEvent;\n    assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n    return pointerEvent.isPrimary && pointerEvent.button === 0;\n};\n//# sourceMappingURL=condition.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/Pointer\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport Interaction from './Interaction.js';\nimport { getValues } from '../obj.js';\n/**\n * @typedef {Object} Options\n * @property {function(import(\"../MapBrowserPointerEvent.js\").default):boolean} [handleDownEvent]\n * Function handling \"down\" events. If the function returns `true` then a drag\n * sequence is started.\n * @property {function(import(\"../MapBrowserPointerEvent.js\").default)} [handleDragEvent]\n * Function handling \"drag\" events. This function is called on \"move\" events\n * during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. The function may return `false` to prevent the\n * propagation of the event to other interactions in the map's interactions\n * chain.\n * @property {function(import(\"../MapBrowserPointerEvent.js\").default)} [handleMoveEvent]\n * Function handling \"move\" events. This function is called on \"move\" events,\n * also during a drag sequence (so during a drag sequence both the\n * `handleDragEvent` function and this function are called).\n * @property {function(import(\"../MapBrowserPointerEvent.js\").default):boolean} [handleUpEvent]\n *  Function handling \"up\" events. If the function returns `false` then the\n * current drag sequence is stopped.\n * @property {function(boolean):boolean} [stopDown]\n * Should the down event be propagated to other interactions, or should be\n * stopped?\n */\n/**\n * @classdesc\n * Base class that calls user-defined functions on `down`, `move` and `up`\n * events. This class also manages \"drag sequences\".\n *\n * When the `handleDownEvent` user function returns `true` a drag sequence is\n * started. During a drag sequence the `handleDragEvent` user function is\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\n * user function is called and returns `false`.\n * @api\n */\nvar PointerInteraction = /** @class */ (function (_super) {\n    __extends(PointerInteraction, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function PointerInteraction(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)) || this;\n        if (options.handleDownEvent) {\n            _this.handleDownEvent = options.handleDownEvent;\n        }\n        if (options.handleDragEvent) {\n            _this.handleDragEvent = options.handleDragEvent;\n        }\n        if (options.handleMoveEvent) {\n            _this.handleMoveEvent = options.handleMoveEvent;\n        }\n        if (options.handleUpEvent) {\n            _this.handleUpEvent = options.handleUpEvent;\n        }\n        if (options.stopDown) {\n            _this.stopDown = options.stopDown;\n        }\n        /**\n         * @type {boolean}\n         * @protected\n         */\n        _this.handlingDownUpSequence = false;\n        /**\n         * @type {!Object<string, import(\"../pointer/PointerEvent.js\").default>}\n         * @private\n         */\n        _this.trackedPointers_ = {};\n        /**\n         * @type {Array<import(\"../pointer/PointerEvent.js\").default>}\n         * @protected\n         */\n        _this.targetPointers = [];\n        return _this;\n    }\n    /**\n     * Handle pointer down events.\n     * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     * @protected\n     */\n    PointerInteraction.prototype.handleDownEvent = function (mapBrowserEvent) {\n        return false;\n    };\n    /**\n     * Handle pointer drag events.\n     * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n     * @protected\n     */\n    PointerInteraction.prototype.handleDragEvent = function (mapBrowserEvent) { };\n    /**\n     * Handles the {@link module:ol/MapBrowserEvent map browser event} and may call into\n     * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n     * detected.\n     * @override\n     * @api\n     */\n    PointerInteraction.prototype.handleEvent = function (mapBrowserEvent) {\n        if (!( /** @type {import(\"../MapBrowserPointerEvent.js\").default} */(mapBrowserEvent).pointerEvent)) {\n            return true;\n        }\n        var stopEvent = false;\n        this.updateTrackedPointers_(mapBrowserEvent);\n        if (this.handlingDownUpSequence) {\n            if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n                this.handleDragEvent(mapBrowserEvent);\n            }\n            else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n                var handledUp = this.handleUpEvent(mapBrowserEvent);\n                this.handlingDownUpSequence = handledUp && this.targetPointers.length > 0;\n            }\n        }\n        else {\n            if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n                var handled = this.handleDownEvent(mapBrowserEvent);\n                if (handled) {\n                    mapBrowserEvent.preventDefault();\n                }\n                this.handlingDownUpSequence = handled;\n                stopEvent = this.stopDown(handled);\n            }\n            else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\n                this.handleMoveEvent(mapBrowserEvent);\n            }\n        }\n        return !stopEvent;\n    };\n    /**\n     * Handle pointer move events.\n     * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n     * @protected\n     */\n    PointerInteraction.prototype.handleMoveEvent = function (mapBrowserEvent) { };\n    /**\n     * Handle pointer up events.\n     * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     * @protected\n     */\n    PointerInteraction.prototype.handleUpEvent = function (mapBrowserEvent) {\n        return false;\n    };\n    /**\n     * This function is used to determine if \"down\" events should be propagated\n     * to other interactions or should be stopped.\n     * @param {boolean} handled Was the event handled by the interaction?\n     * @return {boolean} Should the `down` event be stopped?\n     */\n    PointerInteraction.prototype.stopDown = function (handled) {\n        return handled;\n    };\n    /**\n     * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n     * @private\n     */\n    PointerInteraction.prototype.updateTrackedPointers_ = function (mapBrowserEvent) {\n        if (isPointerDraggingEvent(mapBrowserEvent)) {\n            var event_1 = mapBrowserEvent.pointerEvent;\n            var id = event_1.pointerId.toString();\n            if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n                delete this.trackedPointers_[id];\n            }\n            else if (mapBrowserEvent.type ==\n                MapBrowserEventType.POINTERDOWN) {\n                this.trackedPointers_[id] = event_1;\n            }\n            else if (id in this.trackedPointers_) {\n                // update only when there was a pointerdown event for this pointer\n                this.trackedPointers_[id] = event_1;\n            }\n            this.targetPointers = getValues(this.trackedPointers_);\n        }\n    };\n    return PointerInteraction;\n}(Interaction));\n/**\n * @param {Array<import(\"../pointer/PointerEvent.js\").default>} pointerEvents List of events.\n * @return {import(\"../pixel.js\").Pixel} Centroid pixel.\n */\nexport function centroid(pointerEvents) {\n    var length = pointerEvents.length;\n    var clientX = 0;\n    var clientY = 0;\n    for (var i = 0; i < length; i++) {\n        clientX += pointerEvents[i].clientX;\n        clientY += pointerEvents[i].clientY;\n    }\n    return [clientX / length, clientY / length];\n}\n/**\n * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n * @return {boolean} Whether the event is a pointerdown, pointerdrag\n *     or pointerup event.\n */\nfunction isPointerDraggingEvent(mapBrowserEvent) {\n    var type = mapBrowserEvent.type;\n    return type === MapBrowserEventType.POINTERDOWN ||\n        type === MapBrowserEventType.POINTERDRAG ||\n        type === MapBrowserEventType.POINTERUP;\n}\nexport default PointerInteraction;\n//# sourceMappingURL=Pointer.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/DragPan\n */\nimport { scale as scaleCoordinate, rotate as rotateCoordinate } from '../coordinate.js';\nimport { easeOut } from '../easing.js';\nimport { noModifierKeys } from '../events/condition.js';\nimport { FALSE } from '../functions.js';\nimport PointerInteraction, { centroid as centroidFromPointers } from './Pointer.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~noModifierKeys}.\n * @property {import(\"../Kinetic.js\").default} [kinetic] Kinetic inertia to apply to the pan.\n */\n/**\n * @classdesc\n * Allows the user to pan the map by dragging the map.\n * @api\n */\nvar DragPan = /** @class */ (function (_super) {\n    __extends(DragPan, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function DragPan(opt_options) {\n        var _this = _super.call(this, {\n            stopDown: FALSE\n        }) || this;\n        var options = opt_options ? opt_options : {};\n        /**\n         * @private\n         * @type {import(\"../Kinetic.js\").default|undefined}\n         */\n        _this.kinetic_ = options.kinetic;\n        /**\n         * @type {import(\"../pixel.js\").Pixel}\n         */\n        _this.lastCentroid = null;\n        /**\n         * @type {number}\n         */\n        _this.lastPointersCount_;\n        /**\n         * @type {boolean}\n         */\n        _this.panning_ = false;\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.condition ? options.condition : noModifierKeys;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.noKinetic_ = false;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    DragPan.prototype.handleDragEvent = function (mapBrowserEvent) {\n        var targetPointers = this.targetPointers;\n        var centroid = centroidFromPointers(targetPointers);\n        if (targetPointers.length == this.lastPointersCount_) {\n            if (this.kinetic_) {\n                this.kinetic_.update(centroid[0], centroid[1]);\n            }\n            if (this.lastCentroid) {\n                var delta = [\n                    this.lastCentroid[0] - centroid[0],\n                    centroid[1] - this.lastCentroid[1]\n                ];\n                var map = mapBrowserEvent.map;\n                var view = map.getView();\n                scaleCoordinate(delta, view.getResolution());\n                rotateCoordinate(delta, view.getRotation());\n                view.adjustCenter(delta);\n            }\n        }\n        else if (this.kinetic_) {\n            // reset so we don't overestimate the kinetic energy after\n            // after one finger down, tiny drag, second finger down\n            this.kinetic_.begin();\n        }\n        this.lastCentroid = centroid;\n        this.lastPointersCount_ = targetPointers.length;\n    };\n    /**\n     * @inheritDoc\n     */\n    DragPan.prototype.handleUpEvent = function (mapBrowserEvent) {\n        var map = mapBrowserEvent.map;\n        var view = map.getView();\n        if (this.targetPointers.length === 0) {\n            if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\n                var distance = this.kinetic_.getDistance();\n                var angle = this.kinetic_.getAngle();\n                var center = /** @type {!import(\"../coordinate.js\").Coordinate} */ (view.getCenter());\n                var centerpx = map.getPixelFromCoordinate(center);\n                var dest = map.getCoordinateFromPixel([\n                    centerpx[0] - distance * Math.cos(angle),\n                    centerpx[1] - distance * Math.sin(angle)\n                ]);\n                view.animate({\n                    center: view.getConstrainedCenter(dest),\n                    duration: 500,\n                    easing: easeOut\n                });\n            }\n            if (this.panning_) {\n                this.panning_ = false;\n                view.endInteraction();\n            }\n            return false;\n        }\n        else {\n            if (this.kinetic_) {\n                // reset so we don't overestimate the kinetic energy after\n                // after one finger up, tiny drag, second finger up\n                this.kinetic_.begin();\n            }\n            this.lastCentroid = null;\n            return true;\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    DragPan.prototype.handleDownEvent = function (mapBrowserEvent) {\n        if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {\n            var map = mapBrowserEvent.map;\n            var view = map.getView();\n            this.lastCentroid = null;\n            // stop any current animation\n            if (view.getAnimating()) {\n                view.cancelAnimations();\n            }\n            if (!this.panning_) {\n                this.panning_ = true;\n                this.getMap().getView().beginInteraction();\n            }\n            if (this.kinetic_) {\n                this.kinetic_.begin();\n            }\n            // No kinetic as soon as more than one pointer on the screen is\n            // detected. This is to prevent nasty pans after pinch.\n            this.noKinetic_ = this.targetPointers.length > 1;\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    return DragPan;\n}(PointerInteraction));\nexport default DragPan;\n//# sourceMappingURL=DragPan.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/DragRotate\n */\nimport { disable } from '../rotationconstraint.js';\nimport { altShiftKeysOnly, mouseOnly, mouseActionButton } from '../events/condition.js';\nimport { FALSE } from '../functions.js';\nimport PointerInteraction from './Pointer.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~altShiftKeysOnly}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n */\n/**\n * @classdesc\n * Allows the user to rotate the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the alt and shift keys are held down.\n *\n * This interaction is only supported for mouse devices.\n * @api\n */\nvar DragRotate = /** @class */ (function (_super) {\n    __extends(DragRotate, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function DragRotate(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, {\n            stopDown: FALSE\n        }) || this;\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.lastAngle_ = undefined;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    DragRotate.prototype.handleDragEvent = function (mapBrowserEvent) {\n        if (!mouseOnly(mapBrowserEvent)) {\n            return;\n        }\n        var map = mapBrowserEvent.map;\n        var view = map.getView();\n        if (view.getConstraints().rotation === disable) {\n            return;\n        }\n        var size = map.getSize();\n        var offset = mapBrowserEvent.pixel;\n        var theta = Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\n        if (this.lastAngle_ !== undefined) {\n            var delta = theta - this.lastAngle_;\n            view.adjustRotation(-delta);\n        }\n        this.lastAngle_ = theta;\n    };\n    /**\n     * @inheritDoc\n     */\n    DragRotate.prototype.handleUpEvent = function (mapBrowserEvent) {\n        if (!mouseOnly(mapBrowserEvent)) {\n            return true;\n        }\n        var map = mapBrowserEvent.map;\n        var view = map.getView();\n        view.endInteraction(this.duration_);\n        return false;\n    };\n    /**\n     * @inheritDoc\n     */\n    DragRotate.prototype.handleDownEvent = function (mapBrowserEvent) {\n        if (!mouseOnly(mapBrowserEvent)) {\n            return false;\n        }\n        if (mouseActionButton(mapBrowserEvent) && this.condition_(mapBrowserEvent)) {\n            var map = mapBrowserEvent.map;\n            map.getView().beginInteraction();\n            this.lastAngle_ = undefined;\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    return DragRotate;\n}(PointerInteraction));\nexport default DragRotate;\n//# sourceMappingURL=DragRotate.js.map","/**\n * @module ol/render/Box\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport Disposable from '../Disposable.js';\nimport Polygon from '../geom/Polygon.js';\nvar RenderBox = /** @class */ (function (_super) {\n    __extends(RenderBox, _super);\n    /**\n     * @param {string} className CSS class name.\n     */\n    function RenderBox(className) {\n        var _this = _super.call(this) || this;\n        /**\n         * @type {import(\"../geom/Polygon.js\").default}\n         * @private\n         */\n        _this.geometry_ = null;\n        /**\n         * @type {HTMLDivElement}\n         * @private\n         */\n        _this.element_ = document.createElement('div');\n        _this.element_.style.position = 'absolute';\n        _this.element_.className = 'ol-box ' + className;\n        /**\n         * @private\n         * @type {import(\"../PluggableMap.js\").default}\n         */\n        _this.map_ = null;\n        /**\n         * @private\n         * @type {import(\"../pixel.js\").Pixel}\n         */\n        _this.startPixel_ = null;\n        /**\n         * @private\n         * @type {import(\"../pixel.js\").Pixel}\n         */\n        _this.endPixel_ = null;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    RenderBox.prototype.disposeInternal = function () {\n        this.setMap(null);\n    };\n    /**\n     * @private\n     */\n    RenderBox.prototype.render_ = function () {\n        var startPixel = this.startPixel_;\n        var endPixel = this.endPixel_;\n        var px = 'px';\n        var style = this.element_.style;\n        style.left = Math.min(startPixel[0], endPixel[0]) + px;\n        style.top = Math.min(startPixel[1], endPixel[1]) + px;\n        style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\n        style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\n    };\n    /**\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     */\n    RenderBox.prototype.setMap = function (map) {\n        if (this.map_) {\n            this.map_.getOverlayContainer().removeChild(this.element_);\n            var style = this.element_.style;\n            style.left = style.top = style.width = style.height = 'inherit';\n        }\n        this.map_ = map;\n        if (this.map_) {\n            this.map_.getOverlayContainer().appendChild(this.element_);\n        }\n    };\n    /**\n     * @param {import(\"../pixel.js\").Pixel} startPixel Start pixel.\n     * @param {import(\"../pixel.js\").Pixel} endPixel End pixel.\n     */\n    RenderBox.prototype.setPixels = function (startPixel, endPixel) {\n        this.startPixel_ = startPixel;\n        this.endPixel_ = endPixel;\n        this.createOrUpdateGeometry();\n        this.render_();\n    };\n    /**\n     * Creates or updates the cached geometry.\n     */\n    RenderBox.prototype.createOrUpdateGeometry = function () {\n        var startPixel = this.startPixel_;\n        var endPixel = this.endPixel_;\n        var pixels = [\n            startPixel,\n            [startPixel[0], endPixel[1]],\n            endPixel,\n            [endPixel[0], startPixel[1]]\n        ];\n        var coordinates = pixels.map(this.map_.getCoordinateFromPixel, this.map_);\n        // close the polygon\n        coordinates[4] = coordinates[0].slice();\n        if (!this.geometry_) {\n            this.geometry_ = new Polygon([coordinates]);\n        }\n        else {\n            this.geometry_.setCoordinates([coordinates]);\n        }\n    };\n    /**\n     * @return {import(\"../geom/Polygon.js\").default} Geometry.\n     */\n    RenderBox.prototype.getGeometry = function () {\n        return this.geometry_;\n    };\n    return RenderBox;\n}(Disposable));\nexport default RenderBox;\n//# sourceMappingURL=Box.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/DragBox\n */\n// FIXME draw drag box\nimport Event from '../events/Event.js';\nimport { always, mouseOnly, mouseActionButton } from '../events/condition.js';\nimport { VOID } from '../functions.js';\nimport PointerInteraction from './Pointer.js';\nimport RenderBox from '../render/Box.js';\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s and returns a `{boolean}`. If the condition is met,\n * true should be returned.\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default, import(\"../pixel.js\").Pixel, import(\"../pixel.js\").Pixel):boolean} EndCondition\n */\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link ol/events/condition~always}.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\n * `boxEndCondition` function.\n * @property {EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s to indicate whether a `boxend` event should be fired.\n * Default is `true` if the area of the box is bigger than the `minArea` option.\n * @property {function(this:DragBox, import(\"../MapBrowserEvent.js\").default)} [onBoxEnd] Code to execute just\n * before `boxend` is fired.\n */\n/**\n * @enum {string}\n */\nvar DragBoxEventType = {\n    /**\n     * Triggered upon drag box start.\n     * @event DragBoxEvent#boxstart\n     * @api\n     */\n    BOXSTART: 'boxstart',\n    /**\n     * Triggered on drag when box is active.\n     * @event DragBoxEvent#boxdrag\n     * @api\n     */\n    BOXDRAG: 'boxdrag',\n    /**\n     * Triggered upon drag box end.\n     * @event DragBoxEvent#boxend\n     * @api\n     */\n    BOXEND: 'boxend'\n};\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\n * this type.\n */\nvar DragBoxEvent = /** @class */ (function (_super) {\n    __extends(DragBoxEvent, _super);\n    /**\n     * @param {string} type The event type.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate The event coordinate.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Originating event.\n     */\n    function DragBoxEvent(type, coordinate, mapBrowserEvent) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The coordinate of the drag event.\n         * @const\n         * @type {import(\"../coordinate.js\").Coordinate}\n         * @api\n         */\n        _this.coordinate = coordinate;\n        /**\n         * @const\n         * @type {import(\"../MapBrowserEvent.js\").default}\n         * @api\n         */\n        _this.mapBrowserEvent = mapBrowserEvent;\n        return _this;\n    }\n    return DragBoxEvent;\n}(Event));\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the shift or other key is held down. This is used, for example,\n * for zooming to a specific area of the map\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\n * {@link module:ol/interaction/DragRotateAndZoom}).\n *\n * This interaction is only supported for mouse devices.\n *\n * @fires DragBoxEvent\n * @api\n */\nvar DragBox = /** @class */ (function (_super) {\n    __extends(DragBox, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function DragBox(opt_options) {\n        var _this = _super.call(this) || this;\n        var options = opt_options ? opt_options : {};\n        /**\n         * @type {import(\"../render/Box.js\").default}\n         * @private\n         */\n        _this.box_ = new RenderBox(options.className || 'ol-dragbox');\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.minArea_ = options.minArea !== undefined ? options.minArea : 64;\n        /**\n         * Function to execute just before `onboxend` is fired\n         * @type {function(this:DragBox, import(\"../MapBrowserEvent.js\").default): void}\n         * @private\n         */\n        _this.onBoxEnd_ = options.onBoxEnd ? options.onBoxEnd : VOID;\n        /**\n         * @type {import(\"../pixel.js\").Pixel}\n         * @private\n         */\n        _this.startPixel_ = null;\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.condition ? options.condition : always;\n        /**\n         * @private\n         * @type {EndCondition}\n         */\n        _this.boxEndCondition_ = options.boxEndCondition ?\n            options.boxEndCondition : _this.defaultBoxEndCondition;\n        return _this;\n    }\n    /**\n     * The default condition for determining whether the boxend event\n     * should fire.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent The originating MapBrowserEvent\n     *     leading to the box end.\n     * @param {import(\"../pixel.js\").Pixel} startPixel The starting pixel of the box.\n     * @param {import(\"../pixel.js\").Pixel} endPixel The end pixel of the box.\n     * @return {boolean} Whether or not the boxend condition should be fired.\n     */\n    DragBox.prototype.defaultBoxEndCondition = function (mapBrowserEvent, startPixel, endPixel) {\n        var width = endPixel[0] - startPixel[0];\n        var height = endPixel[1] - startPixel[1];\n        return width * width + height * height >= this.minArea_;\n    };\n    /**\n     * Returns geometry of last drawn box.\n     * @return {import(\"../geom/Polygon.js\").default} Geometry.\n     * @api\n     */\n    DragBox.prototype.getGeometry = function () {\n        return this.box_.getGeometry();\n    };\n    /**\n     * @inheritDoc\n     */\n    DragBox.prototype.handleDragEvent = function (mapBrowserEvent) {\n        if (!mouseOnly(mapBrowserEvent)) {\n            return;\n        }\n        this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\n        this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXDRAG, mapBrowserEvent.coordinate, mapBrowserEvent));\n    };\n    /**\n     * @inheritDoc\n     */\n    DragBox.prototype.handleUpEvent = function (mapBrowserEvent) {\n        if (!mouseOnly(mapBrowserEvent)) {\n            return true;\n        }\n        this.box_.setMap(null);\n        if (this.boxEndCondition_(mapBrowserEvent, this.startPixel_, mapBrowserEvent.pixel)) {\n            this.onBoxEnd_(mapBrowserEvent);\n            this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXEND, mapBrowserEvent.coordinate, mapBrowserEvent));\n        }\n        return false;\n    };\n    /**\n     * @inheritDoc\n     */\n    DragBox.prototype.handleDownEvent = function (mapBrowserEvent) {\n        if (!mouseOnly(mapBrowserEvent)) {\n            return false;\n        }\n        if (mouseActionButton(mapBrowserEvent) &&\n            this.condition_(mapBrowserEvent)) {\n            this.startPixel_ = mapBrowserEvent.pixel;\n            this.box_.setMap(mapBrowserEvent.map);\n            this.box_.setPixels(this.startPixel_, this.startPixel_);\n            this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXSTART, mapBrowserEvent.coordinate, mapBrowserEvent));\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    return DragBox;\n}(PointerInteraction));\nexport default DragBox;\n//# sourceMappingURL=DragBox.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/DragZoom\n */\nimport { easeOut } from '../easing.js';\nimport { shiftKeyOnly } from '../events/condition.js';\nimport { createOrUpdateFromCoordinates, getBottomLeft, getCenter, getTopRight, scaleFromCenter } from '../extent.js';\nimport DragBox from './DragBox.js';\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n */\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\nvar DragZoom = /** @class */ (function (_super) {\n    __extends(DragZoom, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function DragZoom(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        var condition = options.condition ? options.condition : shiftKeyOnly;\n        _this = _super.call(this, {\n            condition: condition,\n            className: options.className || 'ol-dragzoom',\n            onBoxEnd: onBoxEnd\n        }) || this;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 200;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.out_ = options.out !== undefined ? options.out : false;\n        return _this;\n    }\n    return DragZoom;\n}(DragBox));\n/**\n * @this {DragZoom}\n */\nfunction onBoxEnd() {\n    var map = this.getMap();\n    var view = /** @type {!import(\"../View.js\").default} */ (map.getView());\n    var size = /** @type {!import(\"../size.js\").Size} */ (map.getSize());\n    var extent = this.getGeometry().getExtent();\n    if (this.out_) {\n        var mapExtent = view.calculateExtent(size);\n        var boxPixelExtent = createOrUpdateFromCoordinates([\n            map.getPixelFromCoordinate(getBottomLeft(extent)),\n            map.getPixelFromCoordinate(getTopRight(extent))\n        ]);\n        var factor = view.getResolutionForExtent(boxPixelExtent, size);\n        scaleFromCenter(mapExtent, 1 / factor);\n        extent = mapExtent;\n    }\n    var resolution = view.getConstrainedResolution(view.getResolutionForExtent(extent, size));\n    var center = view.getConstrainedCenter(getCenter(extent), resolution);\n    view.animate({\n        resolution: resolution,\n        center: center,\n        duration: this.duration_,\n        easing: easeOut\n    });\n}\nexport default DragZoom;\n//# sourceMappingURL=DragZoom.js.map","/**\n * @module ol/events/KeyCode\n */\n/**\n * @enum {number}\n * @const\n */\nexport default {\n    LEFT: 37,\n    UP: 38,\n    RIGHT: 39,\n    DOWN: 40\n};\n//# sourceMappingURL=KeyCode.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/KeyboardPan\n */\nimport { rotate as rotateCoordinate } from '../coordinate.js';\nimport EventType from '../events/EventType.js';\nimport KeyCode from '../events/KeyCode.js';\nimport { noModifierKeys, targetNotEditable } from '../events/condition.js';\nimport Interaction, { pan } from './Interaction.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~noModifierKeys} and\n * {@link module:ol/events/condition~targetNotEditable}.\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\n * press.\n */\n/**\n * @classdesc\n * Allows the user to pan the map using keyboard arrows.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\n * @api\n */\nvar KeyboardPan = /** @class */ (function (_super) {\n    __extends(KeyboardPan, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function KeyboardPan(opt_options) {\n        var _this = _super.call(this, {\n            handleEvent: handleEvent\n        }) || this;\n        var options = opt_options || {};\n        /**\n         * @private\n         * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n         * @return {boolean} Combined condition result.\n         */\n        _this.defaultCondition_ = function (mapBrowserEvent) {\n            return noModifierKeys(mapBrowserEvent) &&\n                targetNotEditable(mapBrowserEvent);\n        };\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.condition !== undefined ?\n            options.condition : _this.defaultCondition_;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 100;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.pixelDelta_ = options.pixelDelta !== undefined ?\n            options.pixelDelta : 128;\n        return _this;\n    }\n    return KeyboardPan;\n}(Interaction));\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\n * `KeyEvent`, and decides the direction to pan to (if an arrow key was\n * pressed).\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {KeyboardPan}\n */\nfunction handleEvent(mapBrowserEvent) {\n    var stopEvent = false;\n    if (mapBrowserEvent.type == EventType.KEYDOWN) {\n        var keyEvent = /** @type {KeyboardEvent} */ (mapBrowserEvent.originalEvent);\n        var keyCode = keyEvent.keyCode;\n        if (this.condition_(mapBrowserEvent) &&\n            (keyCode == KeyCode.DOWN ||\n                keyCode == KeyCode.LEFT ||\n                keyCode == KeyCode.RIGHT ||\n                keyCode == KeyCode.UP)) {\n            var map = mapBrowserEvent.map;\n            var view = map.getView();\n            var mapUnitsDelta = view.getResolution() * this.pixelDelta_;\n            var deltaX = 0, deltaY = 0;\n            if (keyCode == KeyCode.DOWN) {\n                deltaY = -mapUnitsDelta;\n            }\n            else if (keyCode == KeyCode.LEFT) {\n                deltaX = -mapUnitsDelta;\n            }\n            else if (keyCode == KeyCode.RIGHT) {\n                deltaX = mapUnitsDelta;\n            }\n            else {\n                deltaY = mapUnitsDelta;\n            }\n            var delta = [deltaX, deltaY];\n            rotateCoordinate(delta, view.getRotation());\n            pan(view, delta, this.duration_);\n            mapBrowserEvent.preventDefault();\n            stopEvent = true;\n        }\n    }\n    return !stopEvent;\n}\nexport default KeyboardPan;\n//# sourceMappingURL=KeyboardPan.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/KeyboardZoom\n */\nimport EventType from '../events/EventType.js';\nimport { targetNotEditable } from '../events/condition.js';\nimport Interaction, { zoomByDelta } from './Interaction.js';\n/**\n * @typedef {Object} Options\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~targetNotEditable}.\n * @property {number} [delta=1] The zoom level delta on each key press.\n */\n/**\n * @classdesc\n * Allows the user to zoom the map using keyboard + and -.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardPan~KeyboardPan}.\n * @api\n */\nvar KeyboardZoom = /** @class */ (function (_super) {\n    __extends(KeyboardZoom, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function KeyboardZoom(opt_options) {\n        var _this = _super.call(this, {\n            handleEvent: handleEvent\n        }) || this;\n        var options = opt_options ? opt_options : {};\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.condition ? options.condition : targetNotEditable;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.delta_ = options.delta ? options.delta : 1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 100;\n        return _this;\n    }\n    return KeyboardZoom;\n}(Interaction));\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\n * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\n * key pressed was '+' or '-').\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {KeyboardZoom}\n */\nfunction handleEvent(mapBrowserEvent) {\n    var stopEvent = false;\n    if (mapBrowserEvent.type == EventType.KEYDOWN ||\n        mapBrowserEvent.type == EventType.KEYPRESS) {\n        var keyEvent = /** @type {KeyboardEvent} */ (mapBrowserEvent.originalEvent);\n        var charCode = keyEvent.charCode;\n        if (this.condition_(mapBrowserEvent) &&\n            (charCode == '+'.charCodeAt(0) || charCode == '-'.charCodeAt(0))) {\n            var map = mapBrowserEvent.map;\n            var delta = (charCode == '+'.charCodeAt(0)) ? this.delta_ : -this.delta_;\n            var view = map.getView();\n            zoomByDelta(view, delta, undefined, this.duration_);\n            mapBrowserEvent.preventDefault();\n            stopEvent = true;\n        }\n    }\n    return !stopEvent;\n}\nexport default KeyboardZoom;\n//# sourceMappingURL=KeyboardZoom.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/MouseWheelZoom\n */\nimport { always } from '../events/condition.js';\nimport EventType from '../events/EventType.js';\nimport { DEVICE_PIXEL_RATIO, FIREFOX, SAFARI } from '../has.js';\nimport Interaction, { zoomByDelta } from './Interaction.js';\nimport { clamp } from '../math.js';\n/**\n * @enum {string}\n */\nexport var Mode = {\n    TRACKPAD: 'trackpad',\n    WHEEL: 'wheel'\n};\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~always}.\n * @property {number} [maxDelta=1] Maximum mouse wheel delta.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\n * location as the anchor. When set to `false`, zooming in and out will zoom to\n * the center of the screen instead of zooming on the mouse's location.\n */\n/**\n * @classdesc\n * Allows the user to zoom the map by scrolling the mouse wheel.\n * @api\n */\nvar MouseWheelZoom = /** @class */ (function (_super) {\n    __extends(MouseWheelZoom, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function MouseWheelZoom(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)) || this;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.totalDelta_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.lastDelta_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDelta_ = options.maxDelta !== undefined ? options.maxDelta : 1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.useAnchor_ = options.useAnchor !== undefined ? options.useAnchor : true;\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.condition ? options.condition : always;\n        /**\n         * @private\n         * @type {?import(\"../coordinate.js\").Coordinate}\n         */\n        _this.lastAnchor_ = null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.startTime_ = undefined;\n        /**\n         * @private\n         * @type {?}\n         */\n        _this.timeoutId_;\n        /**\n         * @private\n         * @type {Mode|undefined}\n         */\n        _this.mode_ = undefined;\n        /**\n         * Trackpad events separated by this delay will be considered separate\n         * interactions.\n         * @type {number}\n         */\n        _this.trackpadEventGap_ = 400;\n        /**\n         * @type {?}\n         */\n        _this.trackpadTimeoutId_;\n        /**\n         * The number of delta values per zoom level\n         * @private\n         * @type {number}\n         */\n        _this.trackpadDeltaPerZoom_ = 300;\n        return _this;\n    }\n    /**\n     * @private\n     */\n    MouseWheelZoom.prototype.endInteraction_ = function () {\n        this.trackpadTimeoutId_ = undefined;\n        var view = this.getMap().getView();\n        view.endInteraction(undefined, Math.sign(this.lastDelta_), this.lastAnchor_);\n    };\n    /**\n     * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a mousewheel-event) and eventually\n     * zooms the map.\n     * @override\n     */\n    MouseWheelZoom.prototype.handleEvent = function (mapBrowserEvent) {\n        if (!this.condition_(mapBrowserEvent)) {\n            return true;\n        }\n        var type = mapBrowserEvent.type;\n        if (type !== EventType.WHEEL && type !== EventType.MOUSEWHEEL) {\n            return true;\n        }\n        mapBrowserEvent.preventDefault();\n        var map = mapBrowserEvent.map;\n        var wheelEvent = /** @type {WheelEvent} */ (mapBrowserEvent.originalEvent);\n        if (this.useAnchor_) {\n            this.lastAnchor_ = mapBrowserEvent.coordinate;\n        }\n        // Delta normalisation inspired by\n        // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\n        var delta;\n        if (mapBrowserEvent.type == EventType.WHEEL) {\n            delta = wheelEvent.deltaY;\n            if (FIREFOX &&\n                wheelEvent.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n                delta /= DEVICE_PIXEL_RATIO;\n            }\n            if (wheelEvent.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n                delta *= 40;\n            }\n        }\n        else if (mapBrowserEvent.type == EventType.MOUSEWHEEL) {\n            delta = -wheelEvent.wheelDeltaY;\n            if (SAFARI) {\n                delta /= 3;\n            }\n        }\n        if (delta === 0) {\n            return false;\n        }\n        else {\n            this.lastDelta_ = delta;\n        }\n        var now = Date.now();\n        if (this.startTime_ === undefined) {\n            this.startTime_ = now;\n        }\n        if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\n            this.mode_ = Math.abs(delta) < 4 ?\n                Mode.TRACKPAD :\n                Mode.WHEEL;\n        }\n        if (this.mode_ === Mode.TRACKPAD) {\n            var view = map.getView();\n            if (this.trackpadTimeoutId_) {\n                clearTimeout(this.trackpadTimeoutId_);\n            }\n            else {\n                view.beginInteraction();\n            }\n            this.trackpadTimeoutId_ = setTimeout(this.endInteraction_.bind(this), this.trackpadEventGap_);\n            view.adjustZoom(-delta / this.trackpadDeltaPerZoom_, this.lastAnchor_);\n            this.startTime_ = now;\n            return false;\n        }\n        this.totalDelta_ += delta;\n        var timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\n        clearTimeout(this.timeoutId_);\n        this.timeoutId_ = setTimeout(this.handleWheelZoom_.bind(this, map), timeLeft);\n        return false;\n    };\n    /**\n     * @private\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     */\n    MouseWheelZoom.prototype.handleWheelZoom_ = function (map) {\n        var view = map.getView();\n        if (view.getAnimating()) {\n            view.cancelAnimations();\n        }\n        var delta = clamp(this.totalDelta_, -this.maxDelta_, this.maxDelta_);\n        zoomByDelta(view, -delta, this.lastAnchor_, this.duration_);\n        this.mode_ = undefined;\n        this.totalDelta_ = 0;\n        this.lastAnchor_ = null;\n        this.startTime_ = undefined;\n        this.timeoutId_ = undefined;\n    };\n    /**\n     * Enable or disable using the mouse's location as an anchor when zooming\n     * @param {boolean} useAnchor true to zoom to the mouse's location, false\n     * to zoom to the center of the map\n     * @api\n     */\n    MouseWheelZoom.prototype.setMouseAnchor = function (useAnchor) {\n        this.useAnchor_ = useAnchor;\n        if (!useAnchor) {\n            this.lastAnchor_ = null;\n        }\n    };\n    return MouseWheelZoom;\n}(Interaction));\nexport default MouseWheelZoom;\n//# sourceMappingURL=MouseWheelZoom.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/PinchRotate\n */\nimport { FALSE } from '../functions.js';\nimport PointerInteraction, { centroid as centroidFromPointers } from './Pointer.js';\nimport { disable } from '../rotationconstraint.js';\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] The duration of the animation in\n * milliseconds.\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\n */\n/**\n * @classdesc\n * Allows the user to rotate the map by twisting with two fingers\n * on a touch screen.\n * @api\n */\nvar PinchRotate = /** @class */ (function (_super) {\n    __extends(PinchRotate, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function PinchRotate(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        var pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (options);\n        if (!pointerOptions.stopDown) {\n            pointerOptions.stopDown = FALSE;\n        }\n        _this = _super.call(this, pointerOptions) || this;\n        /**\n         * @private\n         * @type {import(\"../coordinate.js\").Coordinate}\n         */\n        _this.anchor_ = null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.lastAngle_ = undefined;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.rotating_ = false;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.rotationDelta_ = 0.0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    PinchRotate.prototype.handleDragEvent = function (mapBrowserEvent) {\n        var rotationDelta = 0.0;\n        var touch0 = this.targetPointers[0];\n        var touch1 = this.targetPointers[1];\n        // angle between touches\n        var angle = Math.atan2(touch1.clientY - touch0.clientY, touch1.clientX - touch0.clientX);\n        if (this.lastAngle_ !== undefined) {\n            var delta = angle - this.lastAngle_;\n            this.rotationDelta_ += delta;\n            if (!this.rotating_ &&\n                Math.abs(this.rotationDelta_) > this.threshold_) {\n                this.rotating_ = true;\n            }\n            rotationDelta = delta;\n        }\n        this.lastAngle_ = angle;\n        var map = mapBrowserEvent.map;\n        var view = map.getView();\n        if (view.getConstraints().rotation === disable) {\n            return;\n        }\n        // rotate anchor point.\n        // FIXME: should be the intersection point between the lines:\n        //     touch0,touch1 and previousTouch0,previousTouch1\n        var viewportPosition = map.getViewport().getBoundingClientRect();\n        var centroid = centroidFromPointers(this.targetPointers);\n        centroid[0] -= viewportPosition.left;\n        centroid[1] -= viewportPosition.top;\n        this.anchor_ = map.getCoordinateFromPixel(centroid);\n        // rotate\n        if (this.rotating_) {\n            map.render();\n            view.adjustRotation(rotationDelta, this.anchor_);\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    PinchRotate.prototype.handleUpEvent = function (mapBrowserEvent) {\n        if (this.targetPointers.length < 2) {\n            var map = mapBrowserEvent.map;\n            var view = map.getView();\n            view.endInteraction(this.duration_);\n            return false;\n        }\n        else {\n            return true;\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    PinchRotate.prototype.handleDownEvent = function (mapBrowserEvent) {\n        if (this.targetPointers.length >= 2) {\n            var map = mapBrowserEvent.map;\n            this.anchor_ = null;\n            this.lastAngle_ = undefined;\n            this.rotating_ = false;\n            this.rotationDelta_ = 0.0;\n            if (!this.handlingDownUpSequence) {\n                map.getView().beginInteraction();\n            }\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    return PinchRotate;\n}(PointerInteraction));\nexport default PinchRotate;\n//# sourceMappingURL=PinchRotate.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/PinchZoom\n */\nimport { FALSE } from '../functions.js';\nimport PointerInteraction, { centroid as centroidFromPointers } from './Pointer.js';\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n * @api\n */\nvar PinchZoom = /** @class */ (function (_super) {\n    __extends(PinchZoom, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function PinchZoom(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        var pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (options);\n        if (!pointerOptions.stopDown) {\n            pointerOptions.stopDown = FALSE;\n        }\n        _this = _super.call(this, pointerOptions) || this;\n        /**\n         * @private\n         * @type {import(\"../coordinate.js\").Coordinate}\n         */\n        _this.anchor_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 400;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.lastDistance_ = undefined;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.lastScaleDelta_ = 1;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    PinchZoom.prototype.handleDragEvent = function (mapBrowserEvent) {\n        var scaleDelta = 1.0;\n        var touch0 = this.targetPointers[0];\n        var touch1 = this.targetPointers[1];\n        var dx = touch0.clientX - touch1.clientX;\n        var dy = touch0.clientY - touch1.clientY;\n        // distance between touches\n        var distance = Math.sqrt(dx * dx + dy * dy);\n        if (this.lastDistance_ !== undefined) {\n            scaleDelta = this.lastDistance_ / distance;\n        }\n        this.lastDistance_ = distance;\n        var map = mapBrowserEvent.map;\n        var view = map.getView();\n        if (scaleDelta != 1.0) {\n            this.lastScaleDelta_ = scaleDelta;\n        }\n        // scale anchor point.\n        var viewportPosition = map.getViewport().getBoundingClientRect();\n        var centroid = centroidFromPointers(this.targetPointers);\n        centroid[0] -= viewportPosition.left;\n        centroid[1] -= viewportPosition.top;\n        this.anchor_ = map.getCoordinateFromPixel(centroid);\n        // scale, bypass the resolution constraint\n        map.render();\n        view.adjustResolution(scaleDelta, this.anchor_);\n    };\n    /**\n     * @inheritDoc\n     */\n    PinchZoom.prototype.handleUpEvent = function (mapBrowserEvent) {\n        if (this.targetPointers.length < 2) {\n            var map = mapBrowserEvent.map;\n            var view = map.getView();\n            var direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n            view.endInteraction(this.duration_, direction);\n            return false;\n        }\n        else {\n            return true;\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    PinchZoom.prototype.handleDownEvent = function (mapBrowserEvent) {\n        if (this.targetPointers.length >= 2) {\n            var map = mapBrowserEvent.map;\n            this.anchor_ = null;\n            this.lastDistance_ = undefined;\n            this.lastScaleDelta_ = 1;\n            if (!this.handlingDownUpSequence) {\n                map.getView().beginInteraction();\n            }\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    return PinchZoom;\n}(PointerInteraction));\nexport default PinchZoom;\n//# sourceMappingURL=PinchZoom.js.map","/**\n * @module ol/render/Event\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport Event from '../events/Event.js';\nvar RenderEvent = /** @class */ (function (_super) {\n    __extends(RenderEvent, _super);\n    /**\n     * @param {import(\"./EventType.js\").default} type Type.\n     * @param {import(\"../transform.js\").Transform=} opt_inversePixelTransform Transform for\n     *     CSS pixels to rendered pixels.\n     * @param {import(\"../PluggableMap.js\").FrameState=} opt_frameState Frame state.\n     * @param {?CanvasRenderingContext2D=} opt_context Context.\n     * @param {?import(\"../webgl/Helper.js\").default=} opt_glContext WebGL Context.\n     */\n    function RenderEvent(type, opt_inversePixelTransform, opt_frameState, opt_context, opt_glContext) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * Transform from CSS pixels (relative to the top-left corner of the map viewport)\n         * to rendered pixels on this event's `context`.\n         * @type {import(\"../transform.js\").Transform|undefined}\n         * @api\n         */\n        _this.inversePixelTransform = opt_inversePixelTransform;\n        /**\n         * An object representing the current render frame state.\n         * @type {import(\"../PluggableMap.js\").FrameState|undefined}\n         * @api\n         */\n        _this.frameState = opt_frameState;\n        /**\n         * Canvas context. Only available when a Canvas renderer is used, null\n         * otherwise.\n         * @type {CanvasRenderingContext2D|null|undefined}\n         * @api\n         */\n        _this.context = opt_context;\n        /**\n         * WebGL context. Only available when a WebGL renderer is used, null\n         * otherwise.\n         * @type {import(\"../webgl/Helper.js\").default|null|undefined}\n         * @api\n         */\n        _this.glContext = opt_glContext;\n        return _this;\n    }\n    return RenderEvent;\n}(Event));\nexport default RenderEvent;\n//# sourceMappingURL=Event.js.map","/**\n * @module ol/color\n */\nimport { assert } from './asserts.js';\nimport { clamp } from './math.js';\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array<number>} Color\n * @api\n */\n/**\n * This RegExp matches # followed by 3, 4, 6, or 8 hex digits.\n * @const\n * @type {RegExp}\n * @private\n */\nvar HEX_COLOR_RE_ = /^#([a-f0-9]{3}|[a-f0-9]{4}(?:[a-f0-9]{2}){0,2})$/i;\n/**\n * Regular expression for matching potential named color style strings.\n * @const\n * @type {RegExp}\n * @private\n */\nvar NAMED_COLOR_RE_ = /^([a-z]*)$/i;\n/**\n * Return the color as an rgba string.\n * @param {Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n    if (typeof color === 'string') {\n        return color;\n    }\n    else {\n        return toString(color);\n    }\n}\n/**\n * Return named color as an rgba string.\n * @param {string} color Named color.\n * @return {string} Rgb string.\n */\nfunction fromNamed(color) {\n    var el = document.createElement('div');\n    el.style.color = color;\n    if (el.style.color !== '') {\n        document.body.appendChild(el);\n        var rgb = getComputedStyle(el).color;\n        document.body.removeChild(el);\n        return rgb;\n    }\n    else {\n        return '';\n    }\n}\n/**\n * @param {string} s String.\n * @return {Color} Color.\n */\nexport var fromString = (function () {\n    // We maintain a small cache of parsed strings.  To provide cheap LRU-like\n    // semantics, whenever the cache grows too large we simply delete an\n    // arbitrary 25% of the entries.\n    /**\n     * @const\n     * @type {number}\n     */\n    var MAX_CACHE_SIZE = 1024;\n    /**\n     * @type {Object<string, Color>}\n     */\n    var cache = {};\n    /**\n     * @type {number}\n     */\n    var cacheSize = 0;\n    return (\n    /**\n     * @param {string} s String.\n     * @return {Color} Color.\n     */\n    function (s) {\n        var color;\n        if (cache.hasOwnProperty(s)) {\n            color = cache[s];\n        }\n        else {\n            if (cacheSize >= MAX_CACHE_SIZE) {\n                var i = 0;\n                for (var key in cache) {\n                    if ((i++ & 3) === 0) {\n                        delete cache[key];\n                        --cacheSize;\n                    }\n                }\n            }\n            color = fromStringInternal_(s);\n            cache[s] = color;\n            ++cacheSize;\n        }\n        return color;\n    });\n})();\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {Color|string} color Color.\n * @return {Color} Color.\n * @api\n */\nexport function asArray(color) {\n    if (Array.isArray(color)) {\n        return color;\n    }\n    else {\n        return fromString(color);\n    }\n}\n/**\n * @param {string} s String.\n * @private\n * @return {Color} Color.\n */\nfunction fromStringInternal_(s) {\n    var r, g, b, a, color;\n    if (NAMED_COLOR_RE_.exec(s)) {\n        s = fromNamed(s);\n    }\n    if (HEX_COLOR_RE_.exec(s)) { // hex\n        var n = s.length - 1; // number of hex digits\n        var d = // number of digits per channel\n         void 0; // number of digits per channel\n        if (n <= 4) {\n            d = 1;\n        }\n        else {\n            d = 2;\n        }\n        var hasAlpha = n === 4 || n === 8;\n        r = parseInt(s.substr(1 + 0 * d, d), 16);\n        g = parseInt(s.substr(1 + 1 * d, d), 16);\n        b = parseInt(s.substr(1 + 2 * d, d), 16);\n        if (hasAlpha) {\n            a = parseInt(s.substr(1 + 3 * d, d), 16);\n        }\n        else {\n            a = 255;\n        }\n        if (d == 1) {\n            r = (r << 4) + r;\n            g = (g << 4) + g;\n            b = (b << 4) + b;\n            if (hasAlpha) {\n                a = (a << 4) + a;\n            }\n        }\n        color = [r, g, b, a / 255];\n    }\n    else if (s.indexOf('rgba(') == 0) { // rgba()\n        color = s.slice(5, -1).split(',').map(Number);\n        normalize(color);\n    }\n    else if (s.indexOf('rgb(') == 0) { // rgb()\n        color = s.slice(4, -1).split(',').map(Number);\n        color.push(1);\n        normalize(color);\n    }\n    else {\n        assert(false, 14); // Invalid color\n    }\n    return color;\n}\n/**\n * TODO this function is only used in the test, we probably shouldn't export it\n * @param {Color} color Color.\n * @return {Color} Clamped color.\n */\nexport function normalize(color) {\n    color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\n    color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\n    color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\n    color[3] = clamp(color[3], 0, 1);\n    return color;\n}\n/**\n * @param {Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n    var r = color[0];\n    if (r != (r | 0)) {\n        r = (r + 0.5) | 0;\n    }\n    var g = color[1];\n    if (g != (g | 0)) {\n        g = (g + 0.5) | 0;\n    }\n    var b = color[2];\n    if (b != (b | 0)) {\n        b = (b + 0.5) | 0;\n    }\n    var a = color[3] === undefined ? 1 : color[3];\n    return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n//# sourceMappingURL=color.js.map","/**\n * @module ol/style/IconImageCache\n */\nimport { asString } from '../color.js';\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache~shared}.\n */\nvar IconImageCache = /** @class */ (function () {\n    function IconImageCache() {\n        /**\n        * @type {!Object<string, import(\"./IconImage.js\").default>}\n        * @private\n        */\n        this.cache_ = {};\n        /**\n        * @type {number}\n        * @private\n        */\n        this.cacheSize_ = 0;\n        /**\n        * @type {number}\n        * @private\n        */\n        this.maxCacheSize_ = 32;\n    }\n    /**\n    * FIXME empty description for jsdoc\n    */\n    IconImageCache.prototype.clear = function () {\n        this.cache_ = {};\n        this.cacheSize_ = 0;\n    };\n    /**\n     * @return {boolean} Can expire cache.\n     */\n    IconImageCache.prototype.canExpireCache = function () {\n        return this.cacheSize_ > this.maxCacheSize_;\n    };\n    /**\n    * FIXME empty description for jsdoc\n    */\n    IconImageCache.prototype.expire = function () {\n        if (this.canExpireCache()) {\n            var i = 0;\n            for (var key in this.cache_) {\n                var iconImage = this.cache_[key];\n                if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n                    delete this.cache_[key];\n                    --this.cacheSize_;\n                }\n            }\n        }\n    };\n    /**\n    * @param {string} src Src.\n    * @param {?string} crossOrigin Cross origin.\n    * @param {import(\"../color.js\").Color} color Color.\n    * @return {import(\"./IconImage.js\").default} Icon image.\n    */\n    IconImageCache.prototype.get = function (src, crossOrigin, color) {\n        var key = getKey(src, crossOrigin, color);\n        return key in this.cache_ ? this.cache_[key] : null;\n    };\n    /**\n    * @param {string} src Src.\n    * @param {?string} crossOrigin Cross origin.\n    * @param {import(\"../color.js\").Color} color Color.\n    * @param {import(\"./IconImage.js\").default} iconImage Icon image.\n    */\n    IconImageCache.prototype.set = function (src, crossOrigin, color, iconImage) {\n        var key = getKey(src, crossOrigin, color);\n        this.cache_[key] = iconImage;\n        ++this.cacheSize_;\n    };\n    /**\n    * Set the cache size of the icon cache. Default is `32`. Change this value when\n    * your map uses more than 32 different icon images and you are not caching icon\n    * styles on the application level.\n    * @param {number} maxCacheSize Cache max size.\n    * @api\n    */\n    IconImageCache.prototype.setSize = function (maxCacheSize) {\n        this.maxCacheSize_ = maxCacheSize;\n        this.expire();\n    };\n    return IconImageCache;\n}());\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {string} Cache key.\n */\nfunction getKey(src, crossOrigin, color) {\n    var colorString = color ? asString(color) : 'null';\n    return crossOrigin + ':' + src + ':' + colorString;\n}\nexport default IconImageCache;\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport var shared = new IconImageCache();\n//# sourceMappingURL=IconImageCache.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/Map\n */\nimport { abstract, getUid } from '../util.js';\nimport Disposable from '../Disposable.js';\nimport { listen, unlistenByKey } from '../events.js';\nimport EventType from '../events/EventType.js';\nimport { getWidth } from '../extent.js';\nimport { TRUE } from '../functions.js';\nimport { visibleAtResolution } from '../layer/Layer.js';\nimport { shared as iconImageCache } from '../style/IconImageCache.js';\nimport { compose as composeTransform, makeInverse } from '../transform.js';\n/**\n * @abstract\n */\nvar MapRenderer = /** @class */ (function (_super) {\n    __extends(MapRenderer, _super);\n    /**\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     */\n    function MapRenderer(map) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {import(\"../PluggableMap.js\").default}\n         */\n        _this.map_ = map;\n        /**\n         * @private\n         * @type {!Object<string, import(\"./Layer.js\").default>}\n         */\n        _this.layerRenderers_ = {};\n        /**\n         * @private\n         * @type {Object<string, import(\"../events.js\").EventsKey>}\n         */\n        _this.layerRendererListeners_ = {};\n        return _this;\n    }\n    /**\n     * @abstract\n     * @param {import(\"../render/EventType.js\").default} type Event type.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     */\n    MapRenderer.prototype.dispatchRenderEvent = function (type, frameState) {\n        abstract();\n    };\n    /**\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n     * @protected\n     */\n    MapRenderer.prototype.calculateMatrices2D = function (frameState) {\n        var viewState = frameState.viewState;\n        var coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n        var pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n        composeTransform(coordinateToPixelTransform, frameState.size[0] / 2, frameState.size[1] / 2, 1 / viewState.resolution, -1 / viewState.resolution, -viewState.rotation, -viewState.center[0], -viewState.center[1]);\n        makeInverse(pixelToCoordinateTransform, coordinateToPixelTransform);\n    };\n    /**\n     * Removes all layer renderers.\n     */\n    MapRenderer.prototype.removeLayerRenderers = function () {\n        for (var key in this.layerRenderers_) {\n            this.removeLayerRendererByKey_(key).dispose();\n        }\n    };\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @param {function(this: S, import(\"../Feature.js\").FeatureLike,\n     *     import(\"../layer/Layer.js\").default): T} callback Feature callback.\n     * @param {S} thisArg Value to use as `this` when executing `callback`.\n     * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n     *     function, only layers which are visible and for which this function\n     *     returns `true` will be tested for features.  By default, all visible\n     *     layers will be tested.\n     * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n     * @return {T|undefined} Callback result.\n     * @template S,T,U\n     */\n    MapRenderer.prototype.forEachFeatureAtCoordinate = function (coordinate, frameState, hitTolerance, callback, thisArg, layerFilter, thisArg2) {\n        var result;\n        var viewState = frameState.viewState;\n        var viewResolution = viewState.resolution;\n        /**\n         * @param {boolean} managed Managed layer.\n         * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n         * @param {import(\"../layer/Layer.js\").default} layer Layer.\n         * @return {?} Callback result.\n         */\n        function forEachFeatureAtCoordinate(managed, feature, layer) {\n            if (!(getUid(feature) in frameState.skippedFeatureUids && !managed)) {\n                return callback.call(thisArg, feature, managed ? layer : null);\n            }\n        }\n        var projection = viewState.projection;\n        var translatedCoordinate = coordinate;\n        if (projection.canWrapX()) {\n            var projectionExtent = projection.getExtent();\n            var worldWidth = getWidth(projectionExtent);\n            var x = coordinate[0];\n            if (x < projectionExtent[0] || x > projectionExtent[2]) {\n                var worldsAway = Math.ceil((projectionExtent[0] - x) / worldWidth);\n                translatedCoordinate = [x + worldWidth * worldsAway, coordinate[1]];\n            }\n        }\n        var layerStates = frameState.layerStatesArray;\n        var numLayers = layerStates.length;\n        var i;\n        for (i = numLayers - 1; i >= 0; --i) {\n            var layerState = layerStates[i];\n            var layer = /** @type {import(\"../layer/Layer.js\").default} */ (layerState.layer);\n            if (visibleAtResolution(layerState, viewResolution) && layerFilter.call(thisArg2, layer)) {\n                var layerRenderer = this.getLayerRenderer(layer);\n                var source = layer.getSource();\n                if (layerRenderer && source) {\n                    var callback_1 = forEachFeatureAtCoordinate.bind(null, layerState.managed);\n                    result = layerRenderer.forEachFeatureAtCoordinate(source.getWrapX() ? translatedCoordinate : coordinate, frameState, hitTolerance, callback_1);\n                }\n                if (result) {\n                    return result;\n                }\n            }\n        }\n        return undefined;\n    };\n    /**\n     * @abstract\n     * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @param {function(this: S, import(\"../layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n     *     callback.\n     * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n     *     function, only layers which are visible and for which this function\n     *     returns `true` will be tested for features.  By default, all visible\n     *     layers will be tested.\n     * @return {T|undefined} Callback result.\n     * @template S,T,U\n     */\n    MapRenderer.prototype.forEachLayerAtPixel = function (pixel, frameState, hitTolerance, callback, layerFilter) {\n        return abstract();\n    };\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n     *     function, only layers which are visible and for which this function\n     *     returns `true` will be tested for features.  By default, all visible\n     *     layers will be tested.\n     * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n     * @return {boolean} Is there a feature at the given coordinate?\n     * @template U\n     */\n    MapRenderer.prototype.hasFeatureAtCoordinate = function (coordinate, frameState, hitTolerance, layerFilter, thisArg) {\n        var hasFeature = this.forEachFeatureAtCoordinate(coordinate, frameState, hitTolerance, TRUE, this, layerFilter, thisArg);\n        return hasFeature !== undefined;\n    };\n    /**\n     * @param {import(\"../layer/Layer.js\").default} layer Layer.\n     * @protected\n     * @return {import(\"./Layer.js\").default} Layer renderer. May return null.\n     */\n    MapRenderer.prototype.getLayerRenderer = function (layer) {\n        var layerKey = getUid(layer);\n        if (layerKey in this.layerRenderers_) {\n            return this.layerRenderers_[layerKey];\n        }\n        var renderer = layer.getRenderer();\n        if (!renderer) {\n            return null;\n        }\n        this.layerRenderers_[layerKey] = renderer;\n        this.layerRendererListeners_[layerKey] = listen(renderer, EventType.CHANGE, this.handleLayerRendererChange_, this);\n        return renderer;\n    };\n    /**\n     * @protected\n     * @return {Object<string, import(\"./Layer.js\").default>} Layer renderers.\n     */\n    MapRenderer.prototype.getLayerRenderers = function () {\n        return this.layerRenderers_;\n    };\n    /**\n     * @return {import(\"../PluggableMap.js\").default} Map.\n     */\n    MapRenderer.prototype.getMap = function () {\n        return this.map_;\n    };\n    /**\n     * Handle changes in a layer renderer.\n     * @private\n     */\n    MapRenderer.prototype.handleLayerRendererChange_ = function () {\n        this.map_.render();\n    };\n    /**\n     * @param {string} layerKey Layer key.\n     * @return {import(\"./Layer.js\").default} Layer renderer.\n     * @private\n     */\n    MapRenderer.prototype.removeLayerRendererByKey_ = function (layerKey) {\n        var layerRenderer = this.layerRenderers_[layerKey];\n        delete this.layerRenderers_[layerKey];\n        unlistenByKey(this.layerRendererListeners_[layerKey]);\n        delete this.layerRendererListeners_[layerKey];\n        return layerRenderer;\n    };\n    /**\n     * Render.\n     * @abstract\n     * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     */\n    MapRenderer.prototype.renderFrame = function (frameState) {\n        abstract();\n    };\n    /**\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @protected\n     */\n    MapRenderer.prototype.scheduleExpireIconCache = function (frameState) {\n        if (iconImageCache.canExpireCache()) {\n            frameState.postRenderFunctions.push(expireIconCache);\n        }\n    };\n    /**\n     * @param {!import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @protected\n     */\n    MapRenderer.prototype.scheduleRemoveUnusedLayerRenderers = function (frameState) {\n        var layerStatesMap = getLayerStatesMap(frameState.layerStatesArray);\n        var _loop_1 = function (layerKey) {\n            if (!(layerKey in layerStatesMap)) {\n                frameState.postRenderFunctions.push(function () {\n                    this.removeLayerRendererByKey_(layerKey).dispose();\n                }.bind(this_1));\n            }\n        };\n        var this_1 = this;\n        for (var layerKey in this.layerRenderers_) {\n            _loop_1(layerKey);\n        }\n    };\n    return MapRenderer;\n}(Disposable));\n/**\n * @param {import(\"../PluggableMap.js\").default} map Map.\n * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n */\nfunction expireIconCache(map, frameState) {\n    iconImageCache.expire();\n}\n/**\n * @param {Array<import(\"../layer/Layer.js\").State>} layerStatesArray Layer states array.\n * @return {Object<string, import(\"../layer/Layer.js\").State>} States mapped by layer uid.\n */\nfunction getLayerStatesMap(layerStatesArray) {\n    return layerStatesArray.reduce(function (acc, state) {\n        acc[getUid(state.layer)] = state;\n        return acc;\n    }, {});\n}\nexport default MapRenderer;\n//# sourceMappingURL=Map.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/Composite\n */\nimport { CLASS_UNSELECTABLE } from '../css.js';\nimport { visibleAtResolution } from '../layer/Layer.js';\nimport RenderEvent from '../render/Event.js';\nimport RenderEventType from '../render/EventType.js';\nimport MapRenderer from './Map.js';\nimport SourceState from '../source/State.js';\nimport { replaceChildren } from '../dom.js';\n/**\n * @classdesc\n * Canvas map renderer.\n * @api\n */\nvar CompositeMapRenderer = /** @class */ (function (_super) {\n    __extends(CompositeMapRenderer, _super);\n    /**\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     */\n    function CompositeMapRenderer(map) {\n        var _this = _super.call(this, map) || this;\n        /**\n         * @private\n         * @type {HTMLDivElement}\n         */\n        _this.element_ = document.createElement('div');\n        var style = _this.element_.style;\n        style.position = 'absolute';\n        style.width = '100%';\n        style.height = '100%';\n        style.zIndex = '0';\n        _this.element_.className = CLASS_UNSELECTABLE + ' ol-layers';\n        var container = map.getViewport();\n        container.insertBefore(_this.element_, container.firstChild || null);\n        /**\n         * @private\n         * @type {Array<HTMLElement>}\n         */\n        _this.children_ = [];\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.renderedVisible_ = true;\n        return _this;\n    }\n    /**\n     * @param {import(\"../render/EventType.js\").default} type Event type.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     */\n    CompositeMapRenderer.prototype.dispatchRenderEvent = function (type, frameState) {\n        var map = this.getMap();\n        if (map.hasListener(type)) {\n            var event_1 = new RenderEvent(type, undefined, frameState);\n            map.dispatchEvent(event_1);\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    CompositeMapRenderer.prototype.renderFrame = function (frameState) {\n        if (!frameState) {\n            if (this.renderedVisible_) {\n                this.element_.style.display = 'none';\n                this.renderedVisible_ = false;\n            }\n            return;\n        }\n        this.calculateMatrices2D(frameState);\n        this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\n        var layerStatesArray = frameState.layerStatesArray;\n        var viewResolution = frameState.viewState.resolution;\n        this.children_.length = 0;\n        for (var i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n            var layerState = layerStatesArray[i];\n            if (!visibleAtResolution(layerState, viewResolution) || layerState.sourceState != SourceState.READY) {\n                continue;\n            }\n            var layer = layerState.layer;\n            var element = layer.render(frameState);\n            if (element) {\n                var zIndex = layerState.zIndex;\n                if (zIndex !== element.style.zIndex) {\n                    element.style.zIndex = zIndex;\n                }\n                this.children_.push(element);\n            }\n        }\n        replaceChildren(this.element_, this.children_);\n        this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\n        if (!this.renderedVisible_) {\n            this.element_.style.display = '';\n            this.renderedVisible_ = true;\n        }\n        this.scheduleRemoveUnusedLayerRenderers(frameState);\n        this.scheduleExpireIconCache(frameState);\n    };\n    /**\n     * @inheritDoc\n     */\n    CompositeMapRenderer.prototype.forEachLayerAtPixel = function (pixel, frameState, hitTolerance, callback, layerFilter) {\n        var viewState = frameState.viewState;\n        var viewResolution = viewState.resolution;\n        var layerStates = frameState.layerStatesArray;\n        var numLayers = layerStates.length;\n        for (var i = numLayers - 1; i >= 0; --i) {\n            var layerState = layerStates[i];\n            var layer = layerState.layer;\n            if (visibleAtResolution(layerState, viewResolution) && layerFilter(layer)) {\n                var layerRenderer = this.getLayerRenderer(layer);\n                if (!layerRenderer) {\n                    continue;\n                }\n                var data = layerRenderer.getDataAtPixel(pixel, frameState, hitTolerance);\n                if (data) {\n                    var result = callback(layer, data);\n                    if (result) {\n                        return result;\n                    }\n                }\n            }\n        }\n        return undefined;\n    };\n    return CompositeMapRenderer;\n}(MapRenderer));\nexport default CompositeMapRenderer;\n//# sourceMappingURL=Composite.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Map\n */\nimport PluggableMap from './PluggableMap.js';\nimport { defaults as defaultControls } from './control/util.js';\nimport { defaults as defaultInteractions } from './interaction.js';\nimport { assign } from './obj.js';\nimport CompositeMapRenderer from './renderer/Composite.js';\n/**\n * @classdesc\n * The map is the core component of OpenLayers. For a map to render, a view,\n * one or more layers, and a target container are needed:\n *\n *     import Map from 'ol/Map';\n *     import View from 'ol/View';\n *     import TileLayer from 'ol/layer/Tile';\n *     import OSM from 'ol/source/OSM';\n *\n *     var map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM()\n *         })\n *       ],\n *       target: 'map'\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~Group}\n * is a subclass of {@link module:ol/layer/Base}, so layers entered in the\n * options or added with `addLayer` can be groups, which can contain further\n * groups, and so on.\n *\n * @api\n */\nvar Map = /** @class */ (function (_super) {\n    __extends(Map, _super);\n    /**\n     * @param {import(\"./PluggableMap.js\").MapOptions} options Map options.\n     */\n    function Map(options) {\n        var _this = this;\n        options = assign({}, options);\n        if (!options.controls) {\n            options.controls = defaultControls();\n        }\n        if (!options.interactions) {\n            options.interactions = defaultInteractions();\n        }\n        _this = _super.call(this, options) || this;\n        return _this;\n    }\n    Map.prototype.createRenderer = function () {\n        return new CompositeMapRenderer(this);\n    };\n    return Map;\n}(PluggableMap));\nexport default Map;\n//# sourceMappingURL=Map.js.map","/**\n * @module ol/control/util\n */\nimport Collection from '../Collection.js';\nimport Attribution from './Attribution.js';\nimport Rotate from './Rotate.js';\nimport Zoom from './Zoom.js';\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [attribution=true] Include\n * {@link module:ol/control/Attribution~Attribution}.\n * @property {import(\"./Attribution.js\").Options} [attributionOptions]\n * Options for {@link module:ol/control/Attribution~Attribution}.\n * @property {boolean} [rotate=true] Include\n * {@link module:ol/control/Rotate~Rotate}.\n * @property {import(\"./Rotate.js\").Options} [rotateOptions] Options\n * for {@link module:ol/control/Rotate~Rotate}.\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\n * @property {import(\"./Zoom.js\").Options} [zoomOptions] Options for\n * {@link module:ol/control/Zoom~Zoom}.\n * @api\n */\n/**\n * Set of controls included in maps by default. Unless configured otherwise,\n * this returns a collection containing an instance of each of the following\n * controls:\n * * {@link module:ol/control/Zoom~Zoom}\n * * {@link module:ol/control/Rotate~Rotate}\n * * {@link module:ol/control/Attribution~Attribution}\n *\n * @param {DefaultsOptions=} opt_options\n * Defaults options.\n * @return {Collection<import(\"./Control.js\").default>}\n * Controls.\n * @function module:ol/control.defaults\n * @api\n */\nexport function defaults(opt_options) {\n    var options = opt_options ? opt_options : {};\n    var controls = new Collection();\n    var zoomControl = options.zoom !== undefined ? options.zoom : true;\n    if (zoomControl) {\n        controls.push(new Zoom(options.zoomOptions));\n    }\n    var rotateControl = options.rotate !== undefined ? options.rotate : true;\n    if (rotateControl) {\n        controls.push(new Rotate(options.rotateOptions));\n    }\n    var attributionControl = options.attribution !== undefined ?\n        options.attribution : true;\n    if (attributionControl) {\n        controls.push(new Attribution(options.attributionOptions));\n    }\n    return controls;\n}\n//# sourceMappingURL=util.js.map","/**\n * @module ol/interaction\n */\nimport Collection from './Collection.js';\nimport Kinetic from './Kinetic.js';\nimport DoubleClickZoom from './interaction/DoubleClickZoom.js';\nimport DragPan from './interaction/DragPan.js';\nimport DragRotate from './interaction/DragRotate.js';\nimport DragZoom from './interaction/DragZoom.js';\nimport KeyboardPan from './interaction/KeyboardPan.js';\nimport KeyboardZoom from './interaction/KeyboardZoom.js';\nimport MouseWheelZoom from './interaction/MouseWheelZoom.js';\nimport PinchRotate from './interaction/PinchRotate.js';\nimport PinchZoom from './interaction/PinchZoom.js';\nimport { focus } from './events/condition.js';\nexport { default as DoubleClickZoom } from './interaction/DoubleClickZoom.js';\nexport { default as DragAndDrop } from './interaction/DragAndDrop.js';\nexport { default as DragBox } from './interaction/DragBox.js';\nexport { default as DragPan } from './interaction/DragPan.js';\nexport { default as DragRotate } from './interaction/DragRotate.js';\nexport { default as DragRotateAndZoom } from './interaction/DragRotateAndZoom.js';\nexport { default as DragZoom } from './interaction/DragZoom.js';\nexport { default as Draw } from './interaction/Draw.js';\nexport { default as Extent } from './interaction/Extent.js';\nexport { default as Interaction } from './interaction/Interaction.js';\nexport { default as KeyboardPan } from './interaction/KeyboardPan.js';\nexport { default as KeyboardZoom } from './interaction/KeyboardZoom.js';\nexport { default as Modify } from './interaction/Modify.js';\nexport { default as MouseWheelZoom } from './interaction/MouseWheelZoom.js';\nexport { default as PinchRotate } from './interaction/PinchRotate.js';\nexport { default as PinchZoom } from './interaction/PinchZoom.js';\nexport { default as Pointer } from './interaction/Pointer.js';\nexport { default as Select } from './interaction/Select.js';\nexport { default as Snap } from './interaction/Snap.js';\nexport { default as Translate } from './interaction/Translate.js';\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\n * desired.\n * @property {boolean} [onFocusOnly=false] Interact only when the map has the\n * focus. This affects the `MouseWheelZoom` and `DragPan` interactions and is\n * useful when page scroll is desired for maps that do not have the browser's\n * focus.\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\n * desired.\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or double click zoom.\n * @property {number} [zoomDuration] Duration of the zoom animation in\n * milliseconds.\n */\n/**\n * Set of interactions included in maps by default. Specific interactions can be\n * excluded by setting the appropriate option to false in the constructor\n * options, but the order of the interactions is fixed.  If you want to specify\n * a different order for interactions, you will need to create your own\n * {@link module:ol/interaction/Interaction} instances and insert\n * them into a {@link module:ol/Collection} in the order you want\n * before creating your {@link module:ol/Map~Map} instance. Changing the order can\n * be of interest if the event propagation needs to be stopped at a point.\n * The default set of interactions, in sequence, is:\n * * {@link module:ol/interaction/DragRotate~DragRotate}\n * * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\n * * {@link module:ol/interaction/DragPan~DragPan}\n * * {@link module:ol/interaction/PinchRotate~PinchRotate}\n * * {@link module:ol/interaction/PinchZoom~PinchZoom}\n * * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\n * * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\n * * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\n * * {@link module:ol/interaction/DragZoom~DragZoom}\n *\n * @param {DefaultsOptions=} opt_options Defaults options.\n * @return {import(\"./Collection.js\").default<import(\"./interaction/Interaction.js\").default>}\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\n * constructor's `interactions` option.\n * @api\n */\nexport function defaults(opt_options) {\n    var options = opt_options ? opt_options : {};\n    var interactions = new Collection();\n    var kinetic = new Kinetic(-0.005, 0.05, 100);\n    var altShiftDragRotate = options.altShiftDragRotate !== undefined ?\n        options.altShiftDragRotate : true;\n    if (altShiftDragRotate) {\n        interactions.push(new DragRotate());\n    }\n    var doubleClickZoom = options.doubleClickZoom !== undefined ?\n        options.doubleClickZoom : true;\n    if (doubleClickZoom) {\n        interactions.push(new DoubleClickZoom({\n            delta: options.zoomDelta,\n            duration: options.zoomDuration\n        }));\n    }\n    var dragPan = options.dragPan !== undefined ? options.dragPan : true;\n    if (dragPan) {\n        interactions.push(new DragPan({\n            condition: options.onFocusOnly ? focus : undefined,\n            kinetic: kinetic\n        }));\n    }\n    var pinchRotate = options.pinchRotate !== undefined ? options.pinchRotate :\n        true;\n    if (pinchRotate) {\n        interactions.push(new PinchRotate());\n    }\n    var pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\n    if (pinchZoom) {\n        interactions.push(new PinchZoom({\n            duration: options.zoomDuration\n        }));\n    }\n    var keyboard = options.keyboard !== undefined ? options.keyboard : true;\n    if (keyboard) {\n        interactions.push(new KeyboardPan());\n        interactions.push(new KeyboardZoom({\n            delta: options.zoomDelta,\n            duration: options.zoomDuration\n        }));\n    }\n    var mouseWheelZoom = options.mouseWheelZoom !== undefined ?\n        options.mouseWheelZoom : true;\n    if (mouseWheelZoom) {\n        interactions.push(new MouseWheelZoom({\n            condition: options.onFocusOnly ? focus : undefined,\n            duration: options.zoomDuration\n        }));\n    }\n    var shiftDragZoom = options.shiftDragZoom !== undefined ?\n        options.shiftDragZoom : true;\n    if (shiftDragZoom) {\n        interactions.push(new DragZoom({\n            duration: options.zoomDuration\n        }));\n    }\n    return interactions;\n}\n//# sourceMappingURL=interaction.js.map","/**\n * @module ol/colorlike\n */\nimport { toString } from './color.js';\n/**\n * A type accepted by CanvasRenderingContext2D.fillStyle\n * or CanvasRenderingContext2D.strokeStyle.\n * Represents a color, pattern, or gradient. The origin for patterns and\n * gradients as fill style is an increment of 512 css pixels from map coordinate\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\n * must be a factor of two (2, 4, 8, ..., 512).\n *\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\n * @api\n */\n/**\n * @param {import(\"./color.js\").Color|ColorLike} color Color.\n * @return {ColorLike} The color as an {@link ol/colorlike~ColorLike}.\n * @api\n */\nexport function asColorLike(color) {\n    if (Array.isArray(color)) {\n        return toString(color);\n    }\n    else {\n        return color;\n    }\n}\n//# sourceMappingURL=colorlike.js.map","/**\n * @module ol/ImageState\n */\n/**\n * @enum {number}\n */\nexport default {\n    IDLE: 0,\n    LOADING: 1,\n    LOADED: 2,\n    ERROR: 3\n};\n//# sourceMappingURL=ImageState.js.map","/**\n * @module ol/structs/LRUCache\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { assert } from '../asserts.js';\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\n/**\n * @typedef {Object} Entry\n * @property {string} key_\n * @property {Object} newer\n * @property {Object} older\n * @property {*} value_\n */\n/**\n * @classdesc\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n *\n * @fires import(\"../events/Event.js\").Event\n * @template T\n */\nvar LRUCache = /** @class */ (function (_super) {\n    __extends(LRUCache, _super);\n    /**\n     * @param {number=} opt_highWaterMark High water mark.\n     */\n    function LRUCache(opt_highWaterMark) {\n        var _this = _super.call(this) || this;\n        /**\n         * @type {number}\n         */\n        _this.highWaterMark = opt_highWaterMark !== undefined ? opt_highWaterMark : 2048;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.count_ = 0;\n        /**\n         * @private\n         * @type {!Object<string, Entry>}\n         */\n        _this.entries_ = {};\n        /**\n         * @private\n         * @type {?Entry}\n         */\n        _this.oldest_ = null;\n        /**\n         * @private\n         * @type {?Entry}\n         */\n        _this.newest_ = null;\n        return _this;\n    }\n    /**\n     * @return {boolean} Can expire cache.\n     */\n    LRUCache.prototype.canExpireCache = function () {\n        return this.getCount() > this.highWaterMark;\n    };\n    /**\n     * FIXME empty description for jsdoc\n     */\n    LRUCache.prototype.clear = function () {\n        this.count_ = 0;\n        this.entries_ = {};\n        this.oldest_ = null;\n        this.newest_ = null;\n        this.dispatchEvent(EventType.CLEAR);\n    };\n    /**\n     * @param {string} key Key.\n     * @return {boolean} Contains key.\n     */\n    LRUCache.prototype.containsKey = function (key) {\n        return this.entries_.hasOwnProperty(key);\n    };\n    /**\n     * @param {function(T, string, LRUCache): ?} f The function\n     *     to call for every entry from the oldest to the newer. This function takes\n     *     3 arguments (the entry value, the entry key and the LRUCache object).\n     *     The return value is ignored.\n     */\n    LRUCache.prototype.forEach = function (f) {\n        var entry = this.oldest_;\n        while (entry) {\n            f(entry.value_, entry.key_, this);\n            entry = entry.newer;\n        }\n    };\n    /**\n     * @param {string} key Key.\n     * @param {*=} opt_options Options (reserverd for subclasses).\n     * @return {T} Value.\n     */\n    LRUCache.prototype.get = function (key, opt_options) {\n        var entry = this.entries_[key];\n        assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n        if (entry === this.newest_) {\n            return entry.value_;\n        }\n        else if (entry === this.oldest_) {\n            this.oldest_ = /** @type {Entry} */ (this.oldest_.newer);\n            this.oldest_.older = null;\n        }\n        else {\n            entry.newer.older = entry.older;\n            entry.older.newer = entry.newer;\n        }\n        entry.newer = null;\n        entry.older = this.newest_;\n        this.newest_.newer = entry;\n        this.newest_ = entry;\n        return entry.value_;\n    };\n    /**\n     * Remove an entry from the cache.\n     * @param {string} key The entry key.\n     * @return {T} The removed entry.\n     */\n    LRUCache.prototype.remove = function (key) {\n        var entry = this.entries_[key];\n        assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n        if (entry === this.newest_) {\n            this.newest_ = /** @type {Entry} */ (entry.older);\n            if (this.newest_) {\n                this.newest_.newer = null;\n            }\n        }\n        else if (entry === this.oldest_) {\n            this.oldest_ = /** @type {Entry} */ (entry.newer);\n            if (this.oldest_) {\n                this.oldest_.older = null;\n            }\n        }\n        else {\n            entry.newer.older = entry.older;\n            entry.older.newer = entry.newer;\n        }\n        delete this.entries_[key];\n        --this.count_;\n        return entry.value_;\n    };\n    /**\n     * @return {number} Count.\n     */\n    LRUCache.prototype.getCount = function () {\n        return this.count_;\n    };\n    /**\n     * @return {Array<string>} Keys.\n     */\n    LRUCache.prototype.getKeys = function () {\n        var keys = new Array(this.count_);\n        var i = 0;\n        var entry;\n        for (entry = this.newest_; entry; entry = entry.older) {\n            keys[i++] = entry.key_;\n        }\n        return keys;\n    };\n    /**\n     * @return {Array<T>} Values.\n     */\n    LRUCache.prototype.getValues = function () {\n        var values = new Array(this.count_);\n        var i = 0;\n        var entry;\n        for (entry = this.newest_; entry; entry = entry.older) {\n            values[i++] = entry.value_;\n        }\n        return values;\n    };\n    /**\n     * @return {T} Last value.\n     */\n    LRUCache.prototype.peekLast = function () {\n        return this.oldest_.value_;\n    };\n    /**\n     * @return {string} Last key.\n     */\n    LRUCache.prototype.peekLastKey = function () {\n        return this.oldest_.key_;\n    };\n    /**\n     * Get the key of the newest item in the cache.  Throws if the cache is empty.\n     * @return {string} The newest key.\n     */\n    LRUCache.prototype.peekFirstKey = function () {\n        return this.newest_.key_;\n    };\n    /**\n     * @return {T} value Value.\n     */\n    LRUCache.prototype.pop = function () {\n        var entry = this.oldest_;\n        delete this.entries_[entry.key_];\n        if (entry.newer) {\n            entry.newer.older = null;\n        }\n        this.oldest_ = /** @type {Entry} */ (entry.newer);\n        if (!this.oldest_) {\n            this.newest_ = null;\n        }\n        --this.count_;\n        return entry.value_;\n    };\n    /**\n     * @param {string} key Key.\n     * @param {T} value Value.\n     */\n    LRUCache.prototype.replace = function (key, value) {\n        this.get(key); // update `newest_`\n        this.entries_[key].value_ = value;\n    };\n    /**\n     * @param {string} key Key.\n     * @param {T} value Value.\n     */\n    LRUCache.prototype.set = function (key, value) {\n        assert(!(key in this.entries_), 16); // Tried to set a value for a key that is used already\n        var entry = {\n            key_: key,\n            newer: null,\n            older: this.newest_,\n            value_: value\n        };\n        if (!this.newest_) {\n            this.oldest_ = entry;\n        }\n        else {\n            this.newest_.newer = entry;\n        }\n        this.newest_ = entry;\n        this.entries_[key] = entry;\n        ++this.count_;\n    };\n    /**\n     * Set a maximum number of entries for the cache.\n     * @param {number} size Cache size.\n     * @api\n     */\n    LRUCache.prototype.setSize = function (size) {\n        this.highWaterMark = size;\n    };\n    return LRUCache;\n}(EventTarget));\nexport default LRUCache;\n//# sourceMappingURL=LRUCache.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { getUid } from '../../util.js';\nimport LRUCache from '../../structs/LRUCache.js';\n/**\n * @module ol/render/canvas/LabelCache\n */\n/**\n * @classdesc\n * Cache of pre-rendered labels.\n * @fires import(\"../events/Event.js\").Event\n */\nvar LabelCache = /** @class */ (function (_super) {\n    __extends(LabelCache, _super);\n    /**\n     * @inheritDoc\n     */\n    function LabelCache(opt_highWaterMark) {\n        var _this = _super.call(this, opt_highWaterMark) || this;\n        _this.consumers = {};\n        return _this;\n    }\n    LabelCache.prototype.clear = function () {\n        _super.prototype.clear.call(this);\n        this.consumers = {};\n    };\n    /**\n     * @override\n     * @param {string} key Label key.\n     * @param {import(\"./Executor.js\").default} consumer Label consumer.\n     * @return {HTMLCanvasElement} Label.\n     */\n    LabelCache.prototype.get = function (key, consumer) {\n        var canvas = _super.prototype.get.call(this, key);\n        var consumerId = getUid(consumer);\n        if (!(consumerId in this.consumers)) {\n            this.consumers[consumerId] = {};\n        }\n        this.consumers[consumerId][key] = true;\n        return canvas;\n    };\n    LabelCache.prototype.prune = function () {\n        outer: while (this.canExpireCache()) {\n            var key = this.peekLastKey();\n            for (var consumerId in this.consumers) {\n                if (key in this.consumers[consumerId]) {\n                    break outer;\n                }\n            }\n            var canvas = this.pop();\n            canvas.width = canvas.height = 0;\n            for (var consumerId in this.consumers) {\n                delete this.consumers[consumerId][key];\n            }\n        }\n    };\n    /**\n     * @param {import(\"./Executor.js\").default} consumer Label consumer.\n     */\n    LabelCache.prototype.release = function (consumer) {\n        delete this.consumers[getUid(consumer)];\n    };\n    return LabelCache;\n}(LRUCache));\nexport default LabelCache;\n//# sourceMappingURL=LabelCache.js.map","/**\n * @module ol/render/canvas\n */\nimport { getFontFamilies } from '../css.js';\nimport { createCanvasContext2D } from '../dom.js';\nimport { clear } from '../obj.js';\nimport { create as createTransform } from '../transform.js';\nimport LabelCache from './canvas/LabelCache.js';\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle\n */\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle]\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle]\n * @property {string} [currentLineCap]\n * @property {Array<number>} currentLineDash\n * @property {number} [currentLineDashOffset]\n * @property {string} [currentLineJoin]\n * @property {number} [currentLineWidth]\n * @property {number} [currentMiterLimit]\n * @property {number} [lastStroke]\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle]\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle]\n * @property {string} [lineCap]\n * @property {Array<number>} lineDash\n * @property {number} [lineDashOffset]\n * @property {string} [lineJoin]\n * @property {number} [lineWidth]\n * @property {number} [miterLimit]\n */\n/**\n * @typedef {Object} StrokeState\n * @property {string} lineCap\n * @property {Array<number>} lineDash\n * @property {number} lineDashOffset\n * @property {string} lineJoin\n * @property {number} lineWidth\n * @property {number} miterLimit\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle\n */\n/**\n * @typedef {Object} TextState\n * @property {string} font\n * @property {string} [textAlign]\n * @property {string} textBaseline\n * @property {string} [placement]\n * @property {number} [maxAngle]\n * @property {boolean} [overflow]\n * @property {import(\"../style/Fill.js\").default} [backgroundFill]\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke]\n * @property {number} [scale]\n * @property {Array<number>} [padding]\n */\n/**\n * Container for decluttered replay instructions that need to be rendered or\n * omitted together, i.e. when styles render both an image and text, or for the\n * characters that form text along lines. The basic elements of this array are\n * `[minX, minY, maxX, maxY, count]`, where the first four entries are the\n * rendered extent of the group in pixel space. `count` is the number of styles\n * in the group, i.e. 2 when an image and a text are grouped, or 1 otherwise.\n * In addition to these four elements, declutter instruction arrays (i.e. the\n * arguments to {@link module:ol/render/canvas~drawImage} are appended to the array.\n * @typedef {Array<*>} DeclutterGroup\n */\n/**\n * @const\n * @type {string}\n */\nexport var defaultFont = '10px sans-serif';\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport var defaultFillStyle = '#000';\n/**\n * @const\n * @type {string}\n */\nexport var defaultLineCap = 'round';\n/**\n * @const\n * @type {Array<number>}\n */\nexport var defaultLineDash = [];\n/**\n * @const\n * @type {number}\n */\nexport var defaultLineDashOffset = 0;\n/**\n * @const\n * @type {string}\n */\nexport var defaultLineJoin = 'round';\n/**\n * @const\n * @type {number}\n */\nexport var defaultMiterLimit = 10;\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport var defaultStrokeStyle = '#000';\n/**\n * @const\n * @type {string}\n */\nexport var defaultTextAlign = 'center';\n/**\n * @const\n * @type {string}\n */\nexport var defaultTextBaseline = 'middle';\n/**\n * @const\n * @type {Array<number>}\n */\nexport var defaultPadding = [0, 0, 0, 0];\n/**\n * @const\n * @type {number}\n */\nexport var defaultLineWidth = 1;\n/**\n * The label cache for text rendering. To change the default cache size of 2048\n * entries, use {@link module:ol/structs/LRUCache#setSize}.\n * @type {LabelCache}\n * @api\n */\nexport var labelCache = new LabelCache();\n/**\n * @type {!Object<string, number>}\n */\nexport var checkedFonts = {};\n/**\n * @type {CanvasRenderingContext2D}\n */\nvar measureContext = null;\n/**\n * @type {!Object<string, number>}\n */\nexport var textHeights = {};\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport var checkFont = (function () {\n    var retries = 60;\n    var checked = checkedFonts;\n    var size = '32px ';\n    var referenceFonts = ['monospace', 'serif'];\n    var len = referenceFonts.length;\n    var text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n    var interval, referenceWidth;\n    function isAvailable(font) {\n        var context = getMeasureContext();\n        // Check weight ranges according to\n        // https://developer.mozilla.org/en-US/docs/Web/CSS/font-weight#Fallback_weights\n        for (var weight = 100; weight <= 700; weight += 300) {\n            var fontWeight = weight + ' ';\n            var available = true;\n            for (var i = 0; i < len; ++i) {\n                var referenceFont = referenceFonts[i];\n                context.font = fontWeight + size + referenceFont;\n                referenceWidth = context.measureText(text).width;\n                if (font != referenceFont) {\n                    context.font = fontWeight + size + font + ',' + referenceFont;\n                    var width = context.measureText(text).width;\n                    // If width and referenceWidth are the same, then the fallback was used\n                    // instead of the font we wanted, so the font is not available.\n                    available = available && width != referenceWidth;\n                }\n            }\n            if (available) {\n                // Consider font available when it is available in one weight range.\n                //FIXME With this we miss rare corner cases, so we should consider\n                //FIXME checking availability for each requested weight range.\n                return true;\n            }\n        }\n        return false;\n    }\n    function check() {\n        var done = true;\n        for (var font in checked) {\n            if (checked[font] < retries) {\n                if (isAvailable(font)) {\n                    checked[font] = retries;\n                    clear(textHeights);\n                    // Make sure that loaded fonts are picked up by Safari\n                    measureContext = null;\n                    labelCache.clear();\n                }\n                else {\n                    ++checked[font];\n                    done = false;\n                }\n            }\n        }\n        if (done) {\n            clearInterval(interval);\n            interval = undefined;\n        }\n    }\n    return function (fontSpec) {\n        var fontFamilies = getFontFamilies(fontSpec);\n        if (!fontFamilies) {\n            return;\n        }\n        for (var i = 0, ii = fontFamilies.length; i < ii; ++i) {\n            var fontFamily = fontFamilies[i];\n            if (!(fontFamily in checked)) {\n                checked[fontFamily] = retries;\n                if (!isAvailable(fontFamily)) {\n                    checked[fontFamily] = 0;\n                    if (interval === undefined) {\n                        interval = setInterval(check, 32);\n                    }\n                }\n            }\n        }\n    };\n})();\n/**\n * @return {CanvasRenderingContext2D} Measure context.\n */\nfunction getMeasureContext() {\n    if (!measureContext) {\n        measureContext = createCanvasContext2D(1, 1);\n    }\n    return measureContext;\n}\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport var measureTextHeight = (function () {\n    var div;\n    var heights = textHeights;\n    return function (font) {\n        var height = heights[font];\n        if (height == undefined) {\n            if (!div) {\n                div = document.createElement('div');\n                div.innerHTML = 'M';\n                div.style.margin = div.style.padding = '0 !important';\n                div.style.position = 'absolute !important';\n                div.style.left = '-99999px !important';\n            }\n            div.style.font = font;\n            document.body.appendChild(div);\n            height = heights[font] = div.offsetHeight;\n            document.body.removeChild(div);\n        }\n        return height;\n    };\n})();\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n    var measureContext = getMeasureContext();\n    if (font != measureContext.font) {\n        measureContext.font = font;\n    }\n    return measureContext.measureText(text).width;\n}\n/**\n * Measure text width using a cache.\n * @param {string} font The font.\n * @param {string} text The text to measure.\n * @param {Object<string, number>} cache A lookup of cached widths by text.\n * @returns {number} The text width.\n */\nexport function measureAndCacheTextWidth(font, text, cache) {\n    if (text in cache) {\n        return cache[text];\n    }\n    var width = cache[text] = measureTextWidth(font, text);\n    return width;\n}\n/**\n * @param {string} font Font to use for measuring.\n * @param {Array<string>} lines Lines to measure.\n * @param {Array<number>} widths Array will be populated with the widths of\n * each line.\n * @return {number} Width of the whole text.\n */\nexport function measureTextWidths(font, lines, widths) {\n    var numLines = lines.length;\n    var width = 0;\n    for (var i = 0; i < numLines; ++i) {\n        var currentWidth = measureTextWidth(font, lines[i]);\n        width = Math.max(width, currentWidth);\n        widths.push(currentWidth);\n    }\n    return width;\n}\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n    if (rotation !== 0) {\n        context.translate(offsetX, offsetY);\n        context.rotate(rotation);\n        context.translate(-offsetX, -offsetY);\n    }\n}\nexport var resetTransform = createTransform();\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} image Image.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} scale Scale.\n */\nexport function drawImage(context, transform, opacity, image, originX, originY, w, h, x, y, scale) {\n    var alpha;\n    if (opacity != 1) {\n        alpha = context.globalAlpha;\n        context.globalAlpha = alpha * opacity;\n    }\n    if (transform) {\n        context.setTransform.apply(context, transform);\n    }\n    context.drawImage(image, originX, originY, w, h, x, y, w * scale, h * scale);\n    if (alpha) {\n        context.globalAlpha = alpha;\n    }\n    if (transform) {\n        context.setTransform.apply(context, resetTransform);\n    }\n}\n//# sourceMappingURL=canvas.js.map","/**\n * @module ol/style/Image\n */\nimport { abstract } from '../util.js';\n/**\n * @typedef {Object} Options\n * @property {number} opacity\n * @property {boolean} rotateWithView\n * @property {number} rotation\n * @property {number} scale\n */\n/**\n * @classdesc\n * A base class used for creating subclasses and not instantiated in\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\n * {@link module:ol/style/RegularShape~RegularShape}.\n * @abstract\n * @api\n */\nvar ImageStyle = /** @class */ (function () {\n    /**\n     * @param {Options} options Options.\n     */\n    function ImageStyle(options) {\n        /**\n         * @private\n         * @type {number}\n         */\n        this.opacity_ = options.opacity;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this.rotateWithView_ = options.rotateWithView;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.rotation_ = options.rotation;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.scale_ = options.scale;\n    }\n    /**\n     * Clones the style.\n     * @return {ImageStyle} The cloned style.\n     * @api\n     */\n    ImageStyle.prototype.clone = function () {\n        return new ImageStyle({\n            opacity: this.getOpacity(),\n            scale: this.getScale(),\n            rotation: this.getRotation(),\n            rotateWithView: this.getRotateWithView()\n        });\n    };\n    /**\n     * Get the symbolizer opacity.\n     * @return {number} Opacity.\n     * @api\n     */\n    ImageStyle.prototype.getOpacity = function () {\n        return this.opacity_;\n    };\n    /**\n     * Determine whether the symbolizer rotates with the map.\n     * @return {boolean} Rotate with map.\n     * @api\n     */\n    ImageStyle.prototype.getRotateWithView = function () {\n        return this.rotateWithView_;\n    };\n    /**\n     * Get the symoblizer rotation.\n     * @return {number} Rotation.\n     * @api\n     */\n    ImageStyle.prototype.getRotation = function () {\n        return this.rotation_;\n    };\n    /**\n     * Get the symbolizer scale.\n     * @return {number} Scale.\n     * @api\n     */\n    ImageStyle.prototype.getScale = function () {\n        return this.scale_;\n    };\n    /**\n     * Get the anchor point in pixels. The anchor determines the center point for the\n     * symbolizer.\n     * @abstract\n     * @return {Array<number>} Anchor.\n     */\n    ImageStyle.prototype.getAnchor = function () {\n        return abstract();\n    };\n    /**\n     * Get the image element for the symbolizer.\n     * @abstract\n     * @param {number} pixelRatio Pixel ratio.\n     * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n     */\n    ImageStyle.prototype.getImage = function (pixelRatio) {\n        return abstract();\n    };\n    /**\n     * @abstract\n     * @param {number} pixelRatio Pixel ratio.\n     * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n     */\n    ImageStyle.prototype.getHitDetectionImage = function (pixelRatio) {\n        return abstract();\n    };\n    /**\n     * @abstract\n     * @return {import(\"../ImageState.js\").default} Image state.\n     */\n    ImageStyle.prototype.getImageState = function () {\n        return abstract();\n    };\n    /**\n     * @abstract\n     * @return {import(\"../size.js\").Size} Image size.\n     */\n    ImageStyle.prototype.getImageSize = function () {\n        return abstract();\n    };\n    /**\n     * @abstract\n     * @return {import(\"../size.js\").Size} Size of the hit-detection image.\n     */\n    ImageStyle.prototype.getHitDetectionImageSize = function () {\n        return abstract();\n    };\n    /**\n     * Get the origin of the symbolizer.\n     * @abstract\n     * @return {Array<number>} Origin.\n     */\n    ImageStyle.prototype.getOrigin = function () {\n        return abstract();\n    };\n    /**\n     * Get the size of the symbolizer (in pixels).\n     * @abstract\n     * @return {import(\"../size.js\").Size} Size.\n     */\n    ImageStyle.prototype.getSize = function () {\n        return abstract();\n    };\n    /**\n     * Set the opacity.\n     *\n     * @param {number} opacity Opacity.\n     * @api\n     */\n    ImageStyle.prototype.setOpacity = function (opacity) {\n        this.opacity_ = opacity;\n    };\n    /**\n     * Set whether to rotate the style with the view.\n     *\n     * @param {boolean} rotateWithView Rotate with map.\n     * @api\n     */\n    ImageStyle.prototype.setRotateWithView = function (rotateWithView) {\n        this.rotateWithView_ = rotateWithView;\n    };\n    /**\n     * Set the rotation.\n     *\n     * @param {number} rotation Rotation.\n     * @api\n     */\n    ImageStyle.prototype.setRotation = function (rotation) {\n        this.rotation_ = rotation;\n    };\n    /**\n     * Set the scale.\n     *\n     * @param {number} scale Scale.\n     * @api\n     */\n    ImageStyle.prototype.setScale = function (scale) {\n        this.scale_ = scale;\n    };\n    /**\n     * @abstract\n     * @param {function(this: T, import(\"../events/Event.js\").default): void} listener Listener function.\n     * @param {T} thisArg Value to use as `this` when executing `listener`.\n     * @return {import(\"../events.js\").EventsKey|undefined} Listener key.\n     * @template T\n     */\n    ImageStyle.prototype.listenImageChange = function (listener, thisArg) {\n        return abstract();\n    };\n    /**\n     * Load not yet loaded URI.\n     * @abstract\n     */\n    ImageStyle.prototype.load = function () {\n        abstract();\n    };\n    /**\n     * @abstract\n     * @param {function(this: T, import(\"../events/Event.js\").default): void} listener Listener function.\n     * @param {T} thisArg Value to use as `this` when executing `listener`.\n     * @template T\n     */\n    ImageStyle.prototype.unlistenImageChange = function (listener, thisArg) {\n        abstract();\n    };\n    return ImageStyle;\n}());\nexport default ImageStyle;\n//# sourceMappingURL=Image.js.map","/**\n * @module ol/style/RegularShape\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { asColorLike } from '../colorlike.js';\nimport { createCanvasContext2D } from '../dom.js';\nimport ImageState from '../ImageState.js';\nimport { defaultStrokeStyle, defaultFillStyle, defaultLineCap, defaultLineWidth, defaultLineJoin, defaultMiterLimit } from '../render/canvas.js';\nimport ImageStyle from './Image.js';\n/**\n * Specify radius for regular polygons, or radius1 and radius2 for stars.\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} points Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {number} [radius] Radius of a regular polygon.\n * @property {number} [radius1] Outer radius of a star.\n * @property {number} [radius2] Inner radius of a star.\n * @property {number} [angle=0] Shape's angle in radians. A value of 0 will have one of the shape's point facing up.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view.\n */\n/**\n * @typedef {Object} RenderOptions\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle]\n * @property {number} strokeWidth\n * @property {number} size\n * @property {string} lineCap\n * @property {Array<number>} lineDash\n * @property {number} lineDashOffset\n * @property {string} lineJoin\n * @property {number} miterLimit\n */\n/**\n * @classdesc\n * Set regular shape style for vector features. The resulting shape will be\n * a regular polygon when `radius` is provided, or a star when `radius1` and\n * `radius2` are provided.\n * @api\n */\nvar RegularShape = /** @class */ (function (_super) {\n    __extends(RegularShape, _super);\n    /**\n     * @param {Options} options Options.\n     */\n    function RegularShape(options) {\n        var _this = this;\n        /**\n         * @type {boolean}\n         */\n        var rotateWithView = options.rotateWithView !== undefined ?\n            options.rotateWithView : false;\n        _this = _super.call(this, {\n            opacity: 1,\n            rotateWithView: rotateWithView,\n            rotation: options.rotation !== undefined ? options.rotation : 0,\n            scale: 1\n        }) || this;\n        /**\n         * @private\n         * @type {HTMLCanvasElement}\n         */\n        _this.canvas_ = null;\n        /**\n         * @private\n         * @type {HTMLCanvasElement}\n         */\n        _this.hitDetectionCanvas_ = null;\n        /**\n         * @private\n         * @type {import(\"./Fill.js\").default}\n         */\n        _this.fill_ = options.fill !== undefined ? options.fill : null;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.origin_ = [0, 0];\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.points_ = options.points;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.radius_ = /** @type {number} */ (options.radius !== undefined ?\n            options.radius : options.radius1);\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.radius2_ = options.radius2;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.angle_ = options.angle !== undefined ? options.angle : 0;\n        /**\n         * @private\n         * @type {import(\"./Stroke.js\").default}\n         */\n        _this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.anchor_ = null;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        _this.size_ = null;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        _this.imageSize_ = null;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        _this.hitDetectionImageSize_ = null;\n        _this.render_();\n        return _this;\n    }\n    /**\n     * Clones the style.\n     * @return {RegularShape} The cloned style.\n     * @api\n     */\n    RegularShape.prototype.clone = function () {\n        var style = new RegularShape({\n            fill: this.getFill() ? this.getFill().clone() : undefined,\n            points: this.getPoints(),\n            radius: this.getRadius(),\n            radius2: this.getRadius2(),\n            angle: this.getAngle(),\n            stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n            rotation: this.getRotation(),\n            rotateWithView: this.getRotateWithView()\n        });\n        style.setOpacity(this.getOpacity());\n        style.setScale(this.getScale());\n        return style;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    RegularShape.prototype.getAnchor = function () {\n        return this.anchor_;\n    };\n    /**\n     * Get the angle used in generating the shape.\n     * @return {number} Shape's rotation in radians.\n     * @api\n     */\n    RegularShape.prototype.getAngle = function () {\n        return this.angle_;\n    };\n    /**\n     * Get the fill style for the shape.\n     * @return {import(\"./Fill.js\").default} Fill style.\n     * @api\n     */\n    RegularShape.prototype.getFill = function () {\n        return this.fill_;\n    };\n    /**\n     * @inheritDoc\n     */\n    RegularShape.prototype.getHitDetectionImage = function (pixelRatio) {\n        return this.hitDetectionCanvas_;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    RegularShape.prototype.getImage = function (pixelRatio) {\n        return this.canvas_;\n    };\n    /**\n     * @inheritDoc\n     */\n    RegularShape.prototype.getImageSize = function () {\n        return this.imageSize_;\n    };\n    /**\n     * @inheritDoc\n     */\n    RegularShape.prototype.getHitDetectionImageSize = function () {\n        return this.hitDetectionImageSize_;\n    };\n    /**\n     * @inheritDoc\n     */\n    RegularShape.prototype.getImageState = function () {\n        return ImageState.LOADED;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    RegularShape.prototype.getOrigin = function () {\n        return this.origin_;\n    };\n    /**\n     * Get the number of points for generating the shape.\n     * @return {number} Number of points for stars and regular polygons.\n     * @api\n     */\n    RegularShape.prototype.getPoints = function () {\n        return this.points_;\n    };\n    /**\n     * Get the (primary) radius for the shape.\n     * @return {number} Radius.\n     * @api\n     */\n    RegularShape.prototype.getRadius = function () {\n        return this.radius_;\n    };\n    /**\n     * Get the secondary radius for the shape.\n     * @return {number|undefined} Radius2.\n     * @api\n     */\n    RegularShape.prototype.getRadius2 = function () {\n        return this.radius2_;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    RegularShape.prototype.getSize = function () {\n        return this.size_;\n    };\n    /**\n     * Get the stroke style for the shape.\n     * @return {import(\"./Stroke.js\").default} Stroke style.\n     * @api\n     */\n    RegularShape.prototype.getStroke = function () {\n        return this.stroke_;\n    };\n    /**\n     * @inheritDoc\n     */\n    RegularShape.prototype.listenImageChange = function (listener, thisArg) {\n        return undefined;\n    };\n    /**\n     * @inheritDoc\n     */\n    RegularShape.prototype.load = function () { };\n    /**\n     * @inheritDoc\n     */\n    RegularShape.prototype.unlistenImageChange = function (listener, thisArg) { };\n    /**\n     * @protected\n     */\n    RegularShape.prototype.render_ = function () {\n        var lineCap = '';\n        var lineJoin = '';\n        var miterLimit = 0;\n        var lineDash = null;\n        var lineDashOffset = 0;\n        var strokeStyle;\n        var strokeWidth = 0;\n        if (this.stroke_) {\n            strokeStyle = this.stroke_.getColor();\n            if (strokeStyle === null) {\n                strokeStyle = defaultStrokeStyle;\n            }\n            strokeStyle = asColorLike(strokeStyle);\n            strokeWidth = this.stroke_.getWidth();\n            if (strokeWidth === undefined) {\n                strokeWidth = defaultLineWidth;\n            }\n            lineDash = this.stroke_.getLineDash();\n            lineDashOffset = this.stroke_.getLineDashOffset();\n            lineJoin = this.stroke_.getLineJoin();\n            if (lineJoin === undefined) {\n                lineJoin = defaultLineJoin;\n            }\n            lineCap = this.stroke_.getLineCap();\n            if (lineCap === undefined) {\n                lineCap = defaultLineCap;\n            }\n            miterLimit = this.stroke_.getMiterLimit();\n            if (miterLimit === undefined) {\n                miterLimit = defaultMiterLimit;\n            }\n        }\n        var size = 2 * (this.radius_ + strokeWidth) + 1;\n        /** @type {RenderOptions} */\n        var renderOptions = {\n            strokeStyle: strokeStyle,\n            strokeWidth: strokeWidth,\n            size: size,\n            lineCap: lineCap,\n            lineDash: lineDash,\n            lineDashOffset: lineDashOffset,\n            lineJoin: lineJoin,\n            miterLimit: miterLimit\n        };\n        var context = createCanvasContext2D(size, size);\n        this.canvas_ = context.canvas;\n        // canvas.width and height are rounded to the closest integer\n        size = this.canvas_.width;\n        var imageSize = size;\n        this.draw_(renderOptions, context, 0, 0);\n        this.createHitDetectionCanvas_(renderOptions);\n        this.anchor_ = [size / 2, size / 2];\n        this.size_ = [size, size];\n        this.imageSize_ = [imageSize, imageSize];\n    };\n    /**\n     * @private\n     * @param {RenderOptions} renderOptions Render options.\n     * @param {CanvasRenderingContext2D} context The rendering context.\n     * @param {number} x The origin for the symbol (x).\n     * @param {number} y The origin for the symbol (y).\n     */\n    RegularShape.prototype.draw_ = function (renderOptions, context, x, y) {\n        var i, angle0, radiusC;\n        // reset transform\n        context.setTransform(1, 0, 0, 1, 0, 0);\n        // then move to (x, y)\n        context.translate(x, y);\n        context.beginPath();\n        var points = this.points_;\n        if (points === Infinity) {\n            context.arc(renderOptions.size / 2, renderOptions.size / 2, this.radius_, 0, 2 * Math.PI, true);\n        }\n        else {\n            var radius2 = (this.radius2_ !== undefined) ? this.radius2_\n                : this.radius_;\n            if (radius2 !== this.radius_) {\n                points = 2 * points;\n            }\n            for (i = 0; i <= points; i++) {\n                angle0 = i * 2 * Math.PI / points - Math.PI / 2 + this.angle_;\n                radiusC = i % 2 === 0 ? this.radius_ : radius2;\n                context.lineTo(renderOptions.size / 2 + radiusC * Math.cos(angle0), renderOptions.size / 2 + radiusC * Math.sin(angle0));\n            }\n        }\n        if (this.fill_) {\n            var color = this.fill_.getColor();\n            if (color === null) {\n                color = defaultFillStyle;\n            }\n            context.fillStyle = asColorLike(color);\n            context.fill();\n        }\n        if (this.stroke_) {\n            context.strokeStyle = renderOptions.strokeStyle;\n            context.lineWidth = renderOptions.strokeWidth;\n            if (context.setLineDash && renderOptions.lineDash) {\n                context.setLineDash(renderOptions.lineDash);\n                context.lineDashOffset = renderOptions.lineDashOffset;\n            }\n            context.lineCap = /** @type {CanvasLineCap} */ (renderOptions.lineCap);\n            context.lineJoin = /** @type {CanvasLineJoin} */ (renderOptions.lineJoin);\n            context.miterLimit = renderOptions.miterLimit;\n            context.stroke();\n        }\n        context.closePath();\n    };\n    /**\n     * @private\n     * @param {RenderOptions} renderOptions Render options.\n     */\n    RegularShape.prototype.createHitDetectionCanvas_ = function (renderOptions) {\n        this.hitDetectionImageSize_ = [renderOptions.size, renderOptions.size];\n        if (this.fill_) {\n            this.hitDetectionCanvas_ = this.canvas_;\n            return;\n        }\n        // if no fill style is set, create an extra hit-detection image with a\n        // default fill style\n        var context = createCanvasContext2D(renderOptions.size, renderOptions.size);\n        this.hitDetectionCanvas_ = context.canvas;\n        this.drawHitDetectionCanvas_(renderOptions, context, 0, 0);\n    };\n    /**\n     * @private\n     * @param {RenderOptions} renderOptions Render options.\n     * @param {CanvasRenderingContext2D} context The context.\n     * @param {number} x The origin for the symbol (x).\n     * @param {number} y The origin for the symbol (y).\n     */\n    RegularShape.prototype.drawHitDetectionCanvas_ = function (renderOptions, context, x, y) {\n        // reset transform\n        context.setTransform(1, 0, 0, 1, 0, 0);\n        // then move to (x, y)\n        context.translate(x, y);\n        context.beginPath();\n        var points = this.points_;\n        if (points === Infinity) {\n            context.arc(renderOptions.size / 2, renderOptions.size / 2, this.radius_, 0, 2 * Math.PI, true);\n        }\n        else {\n            var radius2 = (this.radius2_ !== undefined) ? this.radius2_\n                : this.radius_;\n            if (radius2 !== this.radius_) {\n                points = 2 * points;\n            }\n            var i = void 0, radiusC = void 0, angle0 = void 0;\n            for (i = 0; i <= points; i++) {\n                angle0 = i * 2 * Math.PI / points - Math.PI / 2 + this.angle_;\n                radiusC = i % 2 === 0 ? this.radius_ : radius2;\n                context.lineTo(renderOptions.size / 2 + radiusC * Math.cos(angle0), renderOptions.size / 2 + radiusC * Math.sin(angle0));\n            }\n        }\n        context.fillStyle = defaultFillStyle;\n        context.fill();\n        if (this.stroke_) {\n            context.strokeStyle = renderOptions.strokeStyle;\n            context.lineWidth = renderOptions.strokeWidth;\n            if (renderOptions.lineDash) {\n                context.setLineDash(renderOptions.lineDash);\n                context.lineDashOffset = renderOptions.lineDashOffset;\n            }\n            context.stroke();\n        }\n        context.closePath();\n    };\n    return RegularShape;\n}(ImageStyle));\nexport default RegularShape;\n//# sourceMappingURL=RegularShape.js.map","/**\n * @module ol/style/Circle\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport RegularShape from './RegularShape.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} radius Circle radius.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n */\n/**\n * @classdesc\n * Set circle style for vector features.\n * @api\n */\nvar CircleStyle = /** @class */ (function (_super) {\n    __extends(CircleStyle, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function CircleStyle(opt_options) {\n        var _this = this;\n        var options = opt_options || /** @type {Options} */ ({});\n        _this = _super.call(this, {\n            points: Infinity,\n            fill: options.fill,\n            radius: options.radius,\n            stroke: options.stroke\n        }) || this;\n        return _this;\n    }\n    /**\n    * Clones the style.\n    * @return {CircleStyle} The cloned style.\n    * @override\n    * @api\n    */\n    CircleStyle.prototype.clone = function () {\n        var style = new CircleStyle({\n            fill: this.getFill() ? this.getFill().clone() : undefined,\n            stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n            radius: this.getRadius()\n        });\n        style.setOpacity(this.getOpacity());\n        style.setScale(this.getScale());\n        return style;\n    };\n    /**\n    * Set the circle radius.\n    *\n    * @param {number} radius Circle radius.\n    * @api\n    */\n    CircleStyle.prototype.setRadius = function (radius) {\n        this.radius_ = radius;\n    };\n    return CircleStyle;\n}(RegularShape));\nexport default CircleStyle;\n//# sourceMappingURL=Circle.js.map","/**\n * @module ol/style/Fill\n */\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color=null] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n */\n/**\n * @classdesc\n * Set fill style for vector features.\n * @api\n */\nvar Fill = /** @class */ (function () {\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function Fill(opt_options) {\n        var options = opt_options || {};\n        /**\n         * @private\n         * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n         */\n        this.color_ = options.color !== undefined ? options.color : null;\n    }\n    /**\n     * Clones the style. The color is not cloned if it is an {@link module:ol/colorlike~ColorLike}.\n     * @return {Fill} The cloned style.\n     * @api\n     */\n    Fill.prototype.clone = function () {\n        var color = this.getColor();\n        return new Fill({\n            color: Array.isArray(color) ? color.slice() : color || undefined\n        });\n    };\n    /**\n     * Get the fill color.\n     * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n     * @api\n     */\n    Fill.prototype.getColor = function () {\n        return this.color_;\n    };\n    /**\n     * Set the color.\n     *\n     * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n     * @api\n     */\n    Fill.prototype.setColor = function (color) {\n        this.color_ = color;\n    };\n    return Fill;\n}());\nexport default Fill;\n//# sourceMappingURL=Fill.js.map","/**\n * @module ol/style/Stroke\n */\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n * @property {string} [lineCap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {string} [lineJoin='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [lineDash] Line dash pattern. Default is `undefined` (no dash).\n * Please note that Internet Explorer 10 and lower do not support the `setLineDash` method on\n * the `CanvasRenderingContext2D` and therefore this option will have no visual effect in these browsers.\n * @property {number} [lineDashOffset=0] Line dash offset.\n * @property {number} [miterLimit=10] Miter limit.\n * @property {number} [width] Width.\n */\n/**\n * @classdesc\n * Set stroke style for vector features.\n * Note that the defaults given are the Canvas defaults, which will be used if\n * option is not defined. The `get` functions return whatever was entered in\n * the options; they will not return the default.\n * @api\n */\nvar Stroke = /** @class */ (function () {\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function Stroke(opt_options) {\n        var options = opt_options || {};\n        /**\n         * @private\n         * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n         */\n        this.color_ = options.color !== undefined ? options.color : null;\n        /**\n         * @private\n         * @type {string|undefined}\n         */\n        this.lineCap_ = options.lineCap;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        this.lineDash_ = options.lineDash !== undefined ? options.lineDash : null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.lineDashOffset_ = options.lineDashOffset;\n        /**\n         * @private\n         * @type {string|undefined}\n         */\n        this.lineJoin_ = options.lineJoin;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.miterLimit_ = options.miterLimit;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.width_ = options.width;\n    }\n    /**\n     * Clones the style.\n     * @return {Stroke} The cloned style.\n     * @api\n     */\n    Stroke.prototype.clone = function () {\n        var color = this.getColor();\n        return new Stroke({\n            color: Array.isArray(color) ? color.slice() : color || undefined,\n            lineCap: this.getLineCap(),\n            lineDash: this.getLineDash() ? this.getLineDash().slice() : undefined,\n            lineDashOffset: this.getLineDashOffset(),\n            lineJoin: this.getLineJoin(),\n            miterLimit: this.getMiterLimit(),\n            width: this.getWidth()\n        });\n    };\n    /**\n     * Get the stroke color.\n     * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n     * @api\n     */\n    Stroke.prototype.getColor = function () {\n        return this.color_;\n    };\n    /**\n     * Get the line cap type for the stroke.\n     * @return {string|undefined} Line cap.\n     * @api\n     */\n    Stroke.prototype.getLineCap = function () {\n        return this.lineCap_;\n    };\n    /**\n     * Get the line dash style for the stroke.\n     * @return {Array<number>} Line dash.\n     * @api\n     */\n    Stroke.prototype.getLineDash = function () {\n        return this.lineDash_;\n    };\n    /**\n     * Get the line dash offset for the stroke.\n     * @return {number|undefined} Line dash offset.\n     * @api\n     */\n    Stroke.prototype.getLineDashOffset = function () {\n        return this.lineDashOffset_;\n    };\n    /**\n     * Get the line join type for the stroke.\n     * @return {string|undefined} Line join.\n     * @api\n     */\n    Stroke.prototype.getLineJoin = function () {\n        return this.lineJoin_;\n    };\n    /**\n     * Get the miter limit for the stroke.\n     * @return {number|undefined} Miter limit.\n     * @api\n     */\n    Stroke.prototype.getMiterLimit = function () {\n        return this.miterLimit_;\n    };\n    /**\n     * Get the stroke width.\n     * @return {number|undefined} Width.\n     * @api\n     */\n    Stroke.prototype.getWidth = function () {\n        return this.width_;\n    };\n    /**\n     * Set the color.\n     *\n     * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n     * @api\n     */\n    Stroke.prototype.setColor = function (color) {\n        this.color_ = color;\n    };\n    /**\n     * Set the line cap.\n     *\n     * @param {string|undefined} lineCap Line cap.\n     * @api\n     */\n    Stroke.prototype.setLineCap = function (lineCap) {\n        this.lineCap_ = lineCap;\n    };\n    /**\n     * Set the line dash.\n     *\n     * Please note that Internet Explorer 10 and lower [do not support][mdn] the\n     * `setLineDash` method on the `CanvasRenderingContext2D` and therefore this\n     * property will have no visual effect in these browsers.\n     *\n     * [mdn]: https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/setLineDash#Browser_compatibility\n     *\n     * @param {Array<number>} lineDash Line dash.\n     * @api\n     */\n    Stroke.prototype.setLineDash = function (lineDash) {\n        this.lineDash_ = lineDash;\n    };\n    /**\n     * Set the line dash offset.\n     *\n     * @param {number|undefined} lineDashOffset Line dash offset.\n     * @api\n     */\n    Stroke.prototype.setLineDashOffset = function (lineDashOffset) {\n        this.lineDashOffset_ = lineDashOffset;\n    };\n    /**\n     * Set the line join.\n     *\n     * @param {string|undefined} lineJoin Line join.\n     * @api\n     */\n    Stroke.prototype.setLineJoin = function (lineJoin) {\n        this.lineJoin_ = lineJoin;\n    };\n    /**\n     * Set the miter limit.\n     *\n     * @param {number|undefined} miterLimit Miter limit.\n     * @api\n     */\n    Stroke.prototype.setMiterLimit = function (miterLimit) {\n        this.miterLimit_ = miterLimit;\n    };\n    /**\n     * Set the width.\n     *\n     * @param {number|undefined} width Width.\n     * @api\n     */\n    Stroke.prototype.setWidth = function (width) {\n        this.width_ = width;\n    };\n    return Stroke;\n}());\nexport default Stroke;\n//# sourceMappingURL=Stroke.js.map","/**\n * @module ol/style/Style\n */\n/**\n * Feature styles.\n *\n * If no style is defined, the following default style is used:\n * ```js\n *  import {Fill, Stroke, Circle, Style} from 'ol/style';\n *\n *  var fill = new Fill({\n *    color: 'rgba(255,255,255,0.4)'\n *  });\n *  var stroke = new Stroke({\n *    color: '#3399CC',\n *    width: 1.25\n *  });\n *  var styles = [\n *    new Style({\n *      image: new Circle({\n *        fill: fill,\n *        stroke: stroke,\n *        radius: 5\n *      }),\n *      fill: fill,\n *      stroke: stroke\n *    })\n *  ];\n * ```\n *\n * A separate editing style has the following defaults:\n * ```js\n *  import {Fill, Stroke, Circle, Style} from 'ol/style';\n *  import GeometryType from 'ol/geom/GeometryType';\n *\n *  var white = [255, 255, 255, 1];\n *  var blue = [0, 153, 255, 1];\n *  var width = 3;\n *  styles[GeometryType.POLYGON] = [\n *    new Style({\n *      fill: new Fill({\n *        color: [255, 255, 255, 0.5]\n *      })\n *    })\n *  ];\n *  styles[GeometryType.MULTI_POLYGON] =\n *      styles[GeometryType.POLYGON];\n *  styles[GeometryType.LINE_STRING] = [\n *    new Style({\n *      stroke: new Stroke({\n *        color: white,\n *        width: width + 2\n *      })\n *    }),\n *    new Style({\n *      stroke: new Stroke({\n *        color: blue,\n *        width: width\n *      })\n *    })\n *  ];\n *  styles[GeometryType.MULTI_LINE_STRING] =\n *      styles[GeometryType.LINE_STRING];\n *  styles[GeometryType.POINT] = [\n *    new Style({\n *      image: new Circle({\n *        radius: width * 2,\n *        fill: new Fill({\n *          color: blue\n *        }),\n *        stroke: new Stroke({\n *          color: white,\n *          width: width / 2\n *        })\n *      }),\n *      zIndex: Infinity\n *    })\n *  ];\n *  styles[GeometryType.MULTI_POINT] =\n *      styles[GeometryType.POINT];\n *  styles[GeometryType.GEOMETRY_COLLECTION] =\n *      styles[GeometryType.POLYGON].concat(\n *          styles[GeometryType.LINE_STRING],\n *          styles[GeometryType.POINT]\n *      );\n * ```\n */\nimport { assert } from '../asserts.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport CircleStyle from './Circle.js';\nimport Fill from './Fill.js';\nimport Stroke from './Stroke.js';\n/**\n * A function that takes an {@link module:ol/Feature} and a `{number}`\n * representing the view's resolution. The function should return a\n * {@link module:ol/style/Style} or an array of them. This way e.g. a\n * vector layer can be styled.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike, number):(Style|Array<Style>)} StyleFunction\n */\n/**\n * A {@link Style}, an array of {@link Style}, or a {@link StyleFunction}.\n * @typedef {Style|Array<Style>|StyleFunction} StyleLike\n */\n/**\n * A function that takes an {@link module:ol/Feature} as argument and returns an\n * {@link module:ol/geom/Geometry} that will be rendered and styled for the feature.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike):\n *     (import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined)} GeometryFunction\n */\n/**\n * Custom renderer function. Takes two arguments:\n *\n * 1. The pixel coordinates of the geometry in GeoJSON notation.\n * 2. The {@link module:ol/render~State} of the layer renderer.\n *\n * @typedef {function((import(\"../coordinate.js\").Coordinate|Array<import(\"../coordinate.js\").Coordinate>|Array<Array<import(\"../coordinate.js\").Coordinate>>),import(\"../render.js\").State): void}\n * RenderFunction\n */\n/**\n * @typedef {Object} Options\n * @property {string|import(\"../geom/Geometry.js\").default|GeometryFunction} [geometry] Feature property or geometry\n * or function returning a geometry to render for this style.\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {import(\"./Image.js\").default} [image] Image style.\n * @property {RenderFunction} [renderer] Custom renderer. When configured, `fill`, `stroke` and `image` will be\n * ignored, and the provided function will be called with each render frame for each geometry.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Text.js\").default} [text] Text style.\n * @property {number} [zIndex] Z index.\n */\n/**\n * @classdesc\n * Container for vector feature rendering styles. Any changes made to the style\n * or its children through `set*()` methods will not take effect until the\n * feature or layer that uses the style is re-rendered.\n * @api\n */\nvar Style = /** @class */ (function () {\n    /**\n     * @param {Options=} opt_options Style options.\n     */\n    function Style(opt_options) {\n        var options = opt_options || {};\n        /**\n         * @private\n         * @type {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n         */\n        this.geometry_ = null;\n        /**\n         * @private\n         * @type {!GeometryFunction}\n         */\n        this.geometryFunction_ = defaultGeometryFunction;\n        if (options.geometry !== undefined) {\n            this.setGeometry(options.geometry);\n        }\n        /**\n         * @private\n         * @type {import(\"./Fill.js\").default}\n         */\n        this.fill_ = options.fill !== undefined ? options.fill : null;\n        /**\n           * @private\n           * @type {import(\"./Image.js\").default}\n           */\n        this.image_ = options.image !== undefined ? options.image : null;\n        /**\n         * @private\n         * @type {RenderFunction|null}\n         */\n        this.renderer_ = options.renderer !== undefined ? options.renderer : null;\n        /**\n         * @private\n         * @type {import(\"./Stroke.js\").default}\n         */\n        this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n        /**\n         * @private\n         * @type {import(\"./Text.js\").default}\n         */\n        this.text_ = options.text !== undefined ? options.text : null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.zIndex_ = options.zIndex;\n    }\n    /**\n     * Clones the style.\n     * @return {Style} The cloned style.\n     * @api\n     */\n    Style.prototype.clone = function () {\n        var geometry = this.getGeometry();\n        if (geometry && typeof geometry === 'object') {\n            geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (geometry).clone();\n        }\n        return new Style({\n            geometry: geometry,\n            fill: this.getFill() ? this.getFill().clone() : undefined,\n            image: this.getImage() ? this.getImage().clone() : undefined,\n            stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n            text: this.getText() ? this.getText().clone() : undefined,\n            zIndex: this.getZIndex()\n        });\n    };\n    /**\n     * Get the custom renderer function that was configured with\n     * {@link #setRenderer} or the `renderer` constructor option.\n     * @return {RenderFunction|null} Custom renderer function.\n     * @api\n     */\n    Style.prototype.getRenderer = function () {\n        return this.renderer_;\n    };\n    /**\n     * Sets a custom renderer function for this style. When set, `fill`, `stroke`\n     * and `image` options of the style will be ignored.\n     * @param {RenderFunction|null} renderer Custom renderer function.\n     * @api\n     */\n    Style.prototype.setRenderer = function (renderer) {\n        this.renderer_ = renderer;\n    };\n    /**\n     * Get the geometry to be rendered.\n     * @return {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n     * Feature property or geometry or function that returns the geometry that will\n     * be rendered with this style.\n     * @api\n     */\n    Style.prototype.getGeometry = function () {\n        return this.geometry_;\n    };\n    /**\n     * Get the function used to generate a geometry for rendering.\n     * @return {!GeometryFunction} Function that is called with a feature\n     * and returns the geometry to render instead of the feature's geometry.\n     * @api\n     */\n    Style.prototype.getGeometryFunction = function () {\n        return this.geometryFunction_;\n    };\n    /**\n     * Get the fill style.\n     * @return {import(\"./Fill.js\").default} Fill style.\n     * @api\n     */\n    Style.prototype.getFill = function () {\n        return this.fill_;\n    };\n    /**\n     * Set the fill style.\n     * @param {import(\"./Fill.js\").default} fill Fill style.\n     * @api\n     */\n    Style.prototype.setFill = function (fill) {\n        this.fill_ = fill;\n    };\n    /**\n     * Get the image style.\n     * @return {import(\"./Image.js\").default} Image style.\n     * @api\n     */\n    Style.prototype.getImage = function () {\n        return this.image_;\n    };\n    /**\n     * Set the image style.\n     * @param {import(\"./Image.js\").default} image Image style.\n     * @api\n     */\n    Style.prototype.setImage = function (image) {\n        this.image_ = image;\n    };\n    /**\n     * Get the stroke style.\n     * @return {import(\"./Stroke.js\").default} Stroke style.\n     * @api\n     */\n    Style.prototype.getStroke = function () {\n        return this.stroke_;\n    };\n    /**\n     * Set the stroke style.\n     * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n     * @api\n     */\n    Style.prototype.setStroke = function (stroke) {\n        this.stroke_ = stroke;\n    };\n    /**\n     * Get the text style.\n     * @return {import(\"./Text.js\").default} Text style.\n     * @api\n     */\n    Style.prototype.getText = function () {\n        return this.text_;\n    };\n    /**\n     * Set the text style.\n     * @param {import(\"./Text.js\").default} text Text style.\n     * @api\n     */\n    Style.prototype.setText = function (text) {\n        this.text_ = text;\n    };\n    /**\n     * Get the z-index for the style.\n     * @return {number|undefined} ZIndex.\n     * @api\n     */\n    Style.prototype.getZIndex = function () {\n        return this.zIndex_;\n    };\n    /**\n     * Set a geometry that is rendered instead of the feature's geometry.\n     *\n     * @param {string|import(\"../geom/Geometry.js\").default|GeometryFunction} geometry\n     *     Feature property or geometry or function returning a geometry to render\n     *     for this style.\n     * @api\n     */\n    Style.prototype.setGeometry = function (geometry) {\n        if (typeof geometry === 'function') {\n            this.geometryFunction_ = geometry;\n        }\n        else if (typeof geometry === 'string') {\n            this.geometryFunction_ = function (feature) {\n                return (\n                /** @type {import(\"../geom/Geometry.js\").default} */ (feature.get(geometry)));\n            };\n        }\n        else if (!geometry) {\n            this.geometryFunction_ = defaultGeometryFunction;\n        }\n        else if (geometry !== undefined) {\n            this.geometryFunction_ = function () {\n                return (\n                /** @type {import(\"../geom/Geometry.js\").default} */ (geometry));\n            };\n        }\n        this.geometry_ = geometry;\n    };\n    /**\n     * Set the z-index.\n     *\n     * @param {number|undefined} zIndex ZIndex.\n     * @api\n     */\n    Style.prototype.setZIndex = function (zIndex) {\n        this.zIndex_ = zIndex;\n    };\n    return Style;\n}());\n/**\n * Convert the provided object into a style function.  Functions passed through\n * unchanged.  Arrays of Style or single style objects wrapped in a\n * new style function.\n * @param {StyleFunction|Array<Style>|Style} obj\n *     A style function, a single style, or an array of styles.\n * @return {StyleFunction} A style function.\n */\nexport function toFunction(obj) {\n    var styleFunction;\n    if (typeof obj === 'function') {\n        styleFunction = obj;\n    }\n    else {\n        /**\n         * @type {Array<Style>}\n         */\n        var styles_1;\n        if (Array.isArray(obj)) {\n            styles_1 = obj;\n        }\n        else {\n            assert(typeof /** @type {?} */ (obj).getZIndex === 'function', 41); // Expected an `Style` or an array of `Style`\n            var style = /** @type {Style} */ (obj);\n            styles_1 = [style];\n        }\n        styleFunction = function () {\n            return styles_1;\n        };\n    }\n    return styleFunction;\n}\n/**\n * @type {Array<Style>}\n */\nvar defaultStyles = null;\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array<Style>} Style.\n */\nexport function createDefaultStyle(feature, resolution) {\n    // We don't use an immediately-invoked function\n    // and a closure so we don't get an error at script evaluation time in\n    // browsers that do not support Canvas. (import(\"./Circle.js\").CircleStyle does\n    // canvas.getContext('2d') at construction time, which will cause an.error\n    // in such browsers.)\n    if (!defaultStyles) {\n        var fill = new Fill({\n            color: 'rgba(255,255,255,0.4)'\n        });\n        var stroke = new Stroke({\n            color: '#3399CC',\n            width: 1.25\n        });\n        defaultStyles = [\n            new Style({\n                image: new CircleStyle({\n                    fill: fill,\n                    stroke: stroke,\n                    radius: 5\n                }),\n                fill: fill,\n                stroke: stroke\n            })\n        ];\n    }\n    return defaultStyles;\n}\n/**\n * Default styles for editing features.\n * @return {Object<import(\"../geom/GeometryType.js\").default, Array<Style>>} Styles\n */\nexport function createEditingStyle() {\n    /** @type {Object<import(\"../geom/GeometryType.js\").default, Array<Style>>} */\n    var styles = {};\n    var white = [255, 255, 255, 1];\n    var blue = [0, 153, 255, 1];\n    var width = 3;\n    styles[GeometryType.POLYGON] = [\n        new Style({\n            fill: new Fill({\n                color: [255, 255, 255, 0.5]\n            })\n        })\n    ];\n    styles[GeometryType.MULTI_POLYGON] =\n        styles[GeometryType.POLYGON];\n    styles[GeometryType.LINE_STRING] = [\n        new Style({\n            stroke: new Stroke({\n                color: white,\n                width: width + 2\n            })\n        }),\n        new Style({\n            stroke: new Stroke({\n                color: blue,\n                width: width\n            })\n        })\n    ];\n    styles[GeometryType.MULTI_LINE_STRING] =\n        styles[GeometryType.LINE_STRING];\n    styles[GeometryType.CIRCLE] =\n        styles[GeometryType.POLYGON].concat(styles[GeometryType.LINE_STRING]);\n    styles[GeometryType.POINT] = [\n        new Style({\n            image: new CircleStyle({\n                radius: width * 2,\n                fill: new Fill({\n                    color: blue\n                }),\n                stroke: new Stroke({\n                    color: white,\n                    width: width / 2\n                })\n            }),\n            zIndex: Infinity\n        })\n    ];\n    styles[GeometryType.MULTI_POINT] =\n        styles[GeometryType.POINT];\n    styles[GeometryType.GEOMETRY_COLLECTION] =\n        styles[GeometryType.POLYGON].concat(styles[GeometryType.LINE_STRING], styles[GeometryType.POINT]);\n    return styles;\n}\n/**\n * Function that is called with a feature and returns its default geometry.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature to get the geometry for.\n * @return {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined} Geometry to render.\n */\nfunction defaultGeometryFunction(feature) {\n    return feature.getGeometry();\n}\nexport default Style;\n//# sourceMappingURL=Style.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/BaseVector\n */\nimport Layer from './Layer.js';\nimport { assign } from '../obj.js';\nimport { createDefaultStyle, toFunction as toStyleFunction } from '../style/Style.js';\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {import(\"../source/Vector.js\").default} [source] Source.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {boolean} [declutter=false] Declutter images and text. Decluttering is applied to all\n * image and text styles, and the priority is defined by the z-index of the style. Lower z-index\n * means higher priority.\n * @property {import(\"../style/Style.js\").StyleLike} [style] Layer style. See\n * {@link module:ol/style} for default style which will be used if this is not defined.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will\n * be recreated during animations. This means that no vectors will be shown clipped, but the\n * setting will have a performance impact for large amounts of vector data. When set to `false`,\n * batches will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will\n * be recreated during interactions. See also `updateWhileAnimating`.\n */\n/**\n * @enum {string}\n * @private\n */\nvar Property = {\n    RENDER_ORDER: 'renderOrder'\n};\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @extends {Layer<VectorSourceType>}\n * @api\n */\nvar BaseVectorLayer = /** @class */ (function (_super) {\n    __extends(BaseVectorLayer, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function BaseVectorLayer(opt_options) {\n        var _this = this;\n        var options = opt_options ?\n            opt_options : /** @type {Options} */ ({});\n        var baseOptions = assign({}, options);\n        delete baseOptions.style;\n        delete baseOptions.renderBuffer;\n        delete baseOptions.updateWhileAnimating;\n        delete baseOptions.updateWhileInteracting;\n        _this = _super.call(this, baseOptions) || this;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.declutter_ = options.declutter !== undefined ? options.declutter : false;\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.renderBuffer_ = options.renderBuffer !== undefined ?\n            options.renderBuffer : 100;\n        /**\n         * User provided style.\n         * @type {import(\"../style/Style.js\").StyleLike}\n         * @private\n         */\n        _this.style_ = null;\n        /**\n         * Style function for use within the library.\n         * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n         * @private\n         */\n        _this.styleFunction_ = undefined;\n        _this.setStyle(options.style);\n        /**\n         * @type {boolean}\n         * @private\n         */\n        _this.updateWhileAnimating_ = options.updateWhileAnimating !== undefined ?\n            options.updateWhileAnimating : false;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        _this.updateWhileInteracting_ = options.updateWhileInteracting !== undefined ?\n            options.updateWhileInteracting : false;\n        return _this;\n    }\n    /**\n     * @return {boolean} Declutter.\n     */\n    BaseVectorLayer.prototype.getDeclutter = function () {\n        return this.declutter_;\n    };\n    /**\n     * @return {number|undefined} Render buffer.\n     */\n    BaseVectorLayer.prototype.getRenderBuffer = function () {\n        return this.renderBuffer_;\n    };\n    /**\n     * @return {function(import(\"../Feature.js\").default, import(\"../Feature.js\").default): number|null|undefined} Render\n     *     order.\n     */\n    BaseVectorLayer.prototype.getRenderOrder = function () {\n        return (\n        /** @type {import(\"../render.js\").OrderFunction|null|undefined} */ (this.get(Property.RENDER_ORDER)));\n    };\n    /**\n     * Get the style for features.  This returns whatever was passed to the `style`\n     * option at construction or to the `setStyle` method.\n     * @return {import(\"../style/Style.js\").StyleLike}\n     *     Layer style.\n     * @api\n     */\n    BaseVectorLayer.prototype.getStyle = function () {\n        return this.style_;\n    };\n    /**\n     * Get the style function.\n     * @return {import(\"../style/Style.js\").StyleFunction|undefined} Layer style function.\n     * @api\n     */\n    BaseVectorLayer.prototype.getStyleFunction = function () {\n        return this.styleFunction_;\n    };\n    /**\n     * @return {boolean} Whether the rendered layer should be updated while\n     *     animating.\n     */\n    BaseVectorLayer.prototype.getUpdateWhileAnimating = function () {\n        return this.updateWhileAnimating_;\n    };\n    /**\n     * @return {boolean} Whether the rendered layer should be updated while\n     *     interacting.\n     */\n    BaseVectorLayer.prototype.getUpdateWhileInteracting = function () {\n        return this.updateWhileInteracting_;\n    };\n    /**\n     * @param {import(\"../render.js\").OrderFunction|null|undefined} renderOrder\n     *     Render order.\n     */\n    BaseVectorLayer.prototype.setRenderOrder = function (renderOrder) {\n        this.set(Property.RENDER_ORDER, renderOrder);\n    };\n    /**\n     * Set the style for features.  This can be a single style object, an array\n     * of styles, or a function that takes a feature and resolution and returns\n     * an array of styles. If it is `undefined` the default style is used. If\n     * it is `null` the layer has no style (a `null` style), so only features\n     * that have their own styles will be rendered in the layer. See\n     * {@link module:ol/style} for information on the default style.\n     * @param {import(\"../style/Style.js\").default|Array<import(\"../style/Style.js\").default>|import(\"../style/Style.js\").StyleFunction|null|undefined} style Layer style.\n     * @api\n     */\n    BaseVectorLayer.prototype.setStyle = function (style) {\n        this.style_ = style !== undefined ? style : createDefaultStyle;\n        this.styleFunction_ = style === null ?\n            undefined : toStyleFunction(this.style_);\n        this.changed();\n    };\n    return BaseVectorLayer;\n}(Layer));\nexport default BaseVectorLayer;\n//# sourceMappingURL=BaseVector.js.map","/**\n * @module ol/render/VectorContext\n */\n/**\n * @classdesc\n * Context for drawing geometries.  A vector context is available on render\n * events and does not need to be constructed directly.\n * @api\n */\nvar VectorContext = /** @class */ (function () {\n    function VectorContext() {\n    }\n    /**\n     * Render a geometry with a custom renderer.\n     *\n     * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {Function} renderer Renderer.\n     */\n    VectorContext.prototype.drawCustom = function (geometry, feature, renderer) { };\n    /**\n     * Render a geometry.\n     *\n     * @param {import(\"../geom/Geometry.js\").default} geometry The geometry to render.\n     */\n    VectorContext.prototype.drawGeometry = function (geometry) { };\n    /**\n     * Set the rendering style.\n     *\n     * @param {import(\"../style/Style.js\").default} style The rendering style.\n     */\n    VectorContext.prototype.setStyle = function (style) { };\n    /**\n     * @param {import(\"../geom/Circle.js\").default} circleGeometry Circle geometry.\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     */\n    VectorContext.prototype.drawCircle = function (circleGeometry, feature) { };\n    /**\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     * @param {import(\"../style/Style.js\").default} style Style.\n     */\n    VectorContext.prototype.drawFeature = function (feature, style) { };\n    /**\n     * @param {import(\"../geom/GeometryCollection.js\").default} geometryCollectionGeometry Geometry collection.\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     */\n    VectorContext.prototype.drawGeometryCollection = function (geometryCollectionGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/LineString.js\").default|import(\"./Feature.js\").default} lineStringGeometry Line string geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawLineString = function (lineStringGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/MultiLineString.js\").default|import(\"./Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawMultiLineString = function (multiLineStringGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/MultiPoint.js\").default|import(\"./Feature.js\").default} multiPointGeometry MultiPoint geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawMultiPoint = function (multiPointGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawMultiPolygon = function (multiPolygonGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/Point.js\").default|import(\"./Feature.js\").default} pointGeometry Point geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawPoint = function (pointGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/Polygon.js\").default|import(\"./Feature.js\").default} polygonGeometry Polygon geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawPolygon = function (polygonGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/Geometry.js\").default|import(\"./Feature.js\").default} geometry Geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawText = function (geometry, feature) { };\n    /**\n     * @param {import(\"../style/Fill.js\").default} fillStyle Fill style.\n     * @param {import(\"../style/Stroke.js\").default} strokeStyle Stroke style.\n     */\n    VectorContext.prototype.setFillStrokeStyle = function (fillStyle, strokeStyle) { };\n    /**\n     * @param {import(\"../style/Image.js\").default} imageStyle Image style.\n     * @param {import(\"./canvas.js\").DeclutterGroup=} opt_declutterGroup Declutter.\n     */\n    VectorContext.prototype.setImageStyle = function (imageStyle, opt_declutterGroup) { };\n    /**\n     * @param {import(\"../style/Text.js\").default} textStyle Text style.\n     * @param {import(\"./canvas.js\").DeclutterGroup=} opt_declutterGroup Declutter.\n     */\n    VectorContext.prototype.setTextStyle = function (textStyle, opt_declutterGroup) { };\n    return VectorContext;\n}());\nexport default VectorContext;\n//# sourceMappingURL=VectorContext.js.map","/**\n * @module ol/render/canvas/Instruction\n */\n/**\n * @enum {number}\n */\nvar Instruction = {\n    BEGIN_GEOMETRY: 0,\n    BEGIN_PATH: 1,\n    CIRCLE: 2,\n    CLOSE_PATH: 3,\n    CUSTOM: 4,\n    DRAW_CHARS: 5,\n    DRAW_IMAGE: 6,\n    END_GEOMETRY: 7,\n    FILL: 8,\n    MOVE_TO_LINE_TO: 9,\n    SET_FILL_STYLE: 10,\n    SET_STROKE_STYLE: 11,\n    STROKE: 12\n};\n/**\n * @type {Array<Instruction>}\n */\nexport var fillInstruction = [Instruction.FILL];\n/**\n * @type {Array<Instruction>}\n */\nexport var strokeInstruction = [Instruction.STROKE];\n/**\n * @type {Array<Instruction>}\n */\nexport var beginPathInstruction = [Instruction.BEGIN_PATH];\n/**\n * @type {Array<Instruction>}\n */\nexport var closePathInstruction = [Instruction.CLOSE_PATH];\nexport default Instruction;\n//# sourceMappingURL=Instruction.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/render/canvas/Builder\n */\nimport { equals, reverseSubArray } from '../../array.js';\nimport { asColorLike } from '../../colorlike.js';\nimport { buffer, clone, coordinateRelationship } from '../../extent.js';\nimport Relationship from '../../extent/Relationship.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport { inflateCoordinates, inflateCoordinatesArray, inflateMultiCoordinatesArray } from '../../geom/flat/inflate.js';\nimport VectorContext from '../VectorContext.js';\nimport { defaultFillStyle, defaultStrokeStyle, defaultMiterLimit, defaultLineWidth, defaultLineJoin, defaultLineDashOffset, defaultLineDash, defaultLineCap } from '../canvas.js';\nimport CanvasInstruction from './Instruction.js';\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, import(\"../canvas.js\").TextState>} [textStates] The text states (decluttering).\n * @property {!Object<string, import(\"../canvas.js\").FillState>} [fillStates] The fill states (decluttering).\n * @property {!Object<string, import(\"../canvas.js\").StrokeState>} [strokeStates] The stroke states (decluttering).\n */\nvar CanvasBuilder = /** @class */ (function (_super) {\n    __extends(CanvasBuilder, _super);\n    /**\n     * @param {number} tolerance Tolerance.\n     * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     */\n    function CanvasBuilder(tolerance, maxExtent, resolution, pixelRatio) {\n        var _this = _super.call(this) || this;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.tolerance = tolerance;\n        /**\n         * @protected\n         * @const\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        _this.maxExtent = maxExtent;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.pixelRatio = pixelRatio;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.maxLineWidth = 0;\n        /**\n         * @protected\n         * @const\n         * @type {number}\n         */\n        _this.resolution = resolution;\n        /**\n         * @private\n         * @type {Array<*>}\n         */\n        _this.beginGeometryInstruction1_ = null;\n        /**\n         * @private\n         * @type {Array<*>}\n         */\n        _this.beginGeometryInstruction2_ = null;\n        /**\n         * @private\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        _this.bufferedMaxExtent_ = null;\n        /**\n         * @protected\n         * @type {Array<*>}\n         */\n        _this.instructions = [];\n        /**\n         * @protected\n         * @type {Array<number>}\n         */\n        _this.coordinates = [];\n        /**\n         * @private\n         * @type {import(\"../../coordinate.js\").Coordinate}\n         */\n        _this.tmpCoordinate_ = [];\n        /**\n         * @protected\n         * @type {Array<*>}\n         */\n        _this.hitDetectionInstructions = [];\n        /**\n         * @protected\n         * @type {import(\"../canvas.js\").FillStrokeState}\n         */\n        _this.state = /** @type {import(\"../canvas.js\").FillStrokeState} */ ({});\n        return _this;\n    }\n    /**\n     * @protected\n     * @param {Array<number>} dashArray Dash array.\n     * @return {Array<number>} Dash array with pixel ratio applied\n     */\n    CanvasBuilder.prototype.applyPixelRatio = function (dashArray) {\n        var pixelRatio = this.pixelRatio;\n        return pixelRatio == 1 ? dashArray : dashArray.map(function (dash) {\n            return dash * pixelRatio;\n        });\n    };\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {number} end End.\n     * @param {number} stride Stride.\n     * @param {boolean} closed Last input coordinate equals first.\n     * @param {boolean} skipFirst Skip first coordinate.\n     * @protected\n     * @return {number} My end.\n     */\n    CanvasBuilder.prototype.appendFlatCoordinates = function (flatCoordinates, offset, end, stride, closed, skipFirst) {\n        var myEnd = this.coordinates.length;\n        var extent = this.getBufferedMaxExtent();\n        if (skipFirst) {\n            offset += stride;\n        }\n        var lastXCoord = flatCoordinates[offset];\n        var lastYCoord = flatCoordinates[offset + 1];\n        var nextCoord = this.tmpCoordinate_;\n        var skipped = true;\n        var i, lastRel, nextRel;\n        for (i = offset + stride; i < end; i += stride) {\n            nextCoord[0] = flatCoordinates[i];\n            nextCoord[1] = flatCoordinates[i + 1];\n            nextRel = coordinateRelationship(extent, nextCoord);\n            if (nextRel !== lastRel) {\n                if (skipped) {\n                    this.coordinates[myEnd++] = lastXCoord;\n                    this.coordinates[myEnd++] = lastYCoord;\n                }\n                this.coordinates[myEnd++] = nextCoord[0];\n                this.coordinates[myEnd++] = nextCoord[1];\n                skipped = false;\n            }\n            else if (nextRel === Relationship.INTERSECTING) {\n                this.coordinates[myEnd++] = nextCoord[0];\n                this.coordinates[myEnd++] = nextCoord[1];\n                skipped = false;\n            }\n            else {\n                skipped = true;\n            }\n            lastXCoord = nextCoord[0];\n            lastYCoord = nextCoord[1];\n            lastRel = nextRel;\n        }\n        // Last coordinate equals first or only one point to append:\n        if ((closed && skipped) || i === offset + stride) {\n            this.coordinates[myEnd++] = lastXCoord;\n            this.coordinates[myEnd++] = lastYCoord;\n        }\n        return myEnd;\n    };\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {Array<number>} ends Ends.\n     * @param {number} stride Stride.\n     * @param {Array<number>} builderEnds Builder ends.\n     * @return {number} Offset.\n     */\n    CanvasBuilder.prototype.drawCustomCoordinates_ = function (flatCoordinates, offset, ends, stride, builderEnds) {\n        for (var i = 0, ii = ends.length; i < ii; ++i) {\n            var end = ends[i];\n            var builderEnd = this.appendFlatCoordinates(flatCoordinates, offset, end, stride, false, false);\n            builderEnds.push(builderEnd);\n            offset = end;\n        }\n        return offset;\n    };\n    /**\n     * @inheritDoc.\n     */\n    CanvasBuilder.prototype.drawCustom = function (geometry, feature, renderer) {\n        this.beginGeometry(feature);\n        var type = geometry.getType();\n        var stride = geometry.getStride();\n        var builderBegin = this.coordinates.length;\n        var flatCoordinates, builderEnd, builderEnds, builderEndss;\n        var offset;\n        if (type == GeometryType.MULTI_POLYGON) {\n            geometry = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry);\n            flatCoordinates = geometry.getOrientedFlatCoordinates();\n            builderEndss = [];\n            var endss = geometry.getEndss();\n            offset = 0;\n            for (var i = 0, ii = endss.length; i < ii; ++i) {\n                var myEnds = [];\n                offset = this.drawCustomCoordinates_(flatCoordinates, offset, endss[i], stride, myEnds);\n                builderEndss.push(myEnds);\n            }\n            this.instructions.push([CanvasInstruction.CUSTOM,\n                builderBegin, builderEndss, geometry, renderer, inflateMultiCoordinatesArray]);\n        }\n        else if (type == GeometryType.POLYGON || type == GeometryType.MULTI_LINE_STRING) {\n            builderEnds = [];\n            flatCoordinates = (type == GeometryType.POLYGON) ?\n                /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry).getOrientedFlatCoordinates() :\n                geometry.getFlatCoordinates();\n            offset = this.drawCustomCoordinates_(flatCoordinates, 0, \n            /** @type {import(\"../../geom/Polygon.js\").default|import(\"../../geom/MultiLineString.js\").default} */ (geometry).getEnds(), stride, builderEnds);\n            this.instructions.push([CanvasInstruction.CUSTOM,\n                builderBegin, builderEnds, geometry, renderer, inflateCoordinatesArray]);\n        }\n        else if (type == GeometryType.LINE_STRING || type == GeometryType.MULTI_POINT) {\n            flatCoordinates = geometry.getFlatCoordinates();\n            builderEnd = this.appendFlatCoordinates(flatCoordinates, 0, flatCoordinates.length, stride, false, false);\n            this.instructions.push([CanvasInstruction.CUSTOM,\n                builderBegin, builderEnd, geometry, renderer, inflateCoordinates]);\n        }\n        else if (type == GeometryType.POINT) {\n            flatCoordinates = geometry.getFlatCoordinates();\n            this.coordinates.push(flatCoordinates[0], flatCoordinates[1]);\n            builderEnd = this.coordinates.length;\n            this.instructions.push([CanvasInstruction.CUSTOM,\n                builderBegin, builderEnd, geometry, renderer]);\n        }\n        this.endGeometry(feature);\n    };\n    /**\n     * @protected\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     */\n    CanvasBuilder.prototype.beginGeometry = function (feature) {\n        this.beginGeometryInstruction1_ = [CanvasInstruction.BEGIN_GEOMETRY, feature, 0];\n        this.instructions.push(this.beginGeometryInstruction1_);\n        this.beginGeometryInstruction2_ = [CanvasInstruction.BEGIN_GEOMETRY, feature, 0];\n        this.hitDetectionInstructions.push(this.beginGeometryInstruction2_);\n    };\n    /**\n     * @return {SerializableInstructions} the serializable instructions.\n     */\n    CanvasBuilder.prototype.finish = function () {\n        return {\n            instructions: this.instructions,\n            hitDetectionInstructions: this.hitDetectionInstructions,\n            coordinates: this.coordinates\n        };\n    };\n    /**\n     * Reverse the hit detection instructions.\n     */\n    CanvasBuilder.prototype.reverseHitDetectionInstructions = function () {\n        var hitDetectionInstructions = this.hitDetectionInstructions;\n        // step 1 - reverse array\n        hitDetectionInstructions.reverse();\n        // step 2 - reverse instructions within geometry blocks\n        var i;\n        var n = hitDetectionInstructions.length;\n        var instruction;\n        var type;\n        var begin = -1;\n        for (i = 0; i < n; ++i) {\n            instruction = hitDetectionInstructions[i];\n            type = /** @type {CanvasInstruction} */ (instruction[0]);\n            if (type == CanvasInstruction.END_GEOMETRY) {\n                begin = i;\n            }\n            else if (type == CanvasInstruction.BEGIN_GEOMETRY) {\n                instruction[2] = i;\n                reverseSubArray(this.hitDetectionInstructions, begin, i);\n                begin = -1;\n            }\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasBuilder.prototype.setFillStrokeStyle = function (fillStyle, strokeStyle) {\n        var state = this.state;\n        if (fillStyle) {\n            var fillStyleColor = fillStyle.getColor();\n            state.fillStyle = asColorLike(fillStyleColor ?\n                fillStyleColor : defaultFillStyle);\n        }\n        else {\n            state.fillStyle = undefined;\n        }\n        if (strokeStyle) {\n            var strokeStyleColor = strokeStyle.getColor();\n            state.strokeStyle = asColorLike(strokeStyleColor ?\n                strokeStyleColor : defaultStrokeStyle);\n            var strokeStyleLineCap = strokeStyle.getLineCap();\n            state.lineCap = strokeStyleLineCap !== undefined ?\n                strokeStyleLineCap : defaultLineCap;\n            var strokeStyleLineDash = strokeStyle.getLineDash();\n            state.lineDash = strokeStyleLineDash ?\n                strokeStyleLineDash.slice() : defaultLineDash;\n            var strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n            state.lineDashOffset = strokeStyleLineDashOffset ?\n                strokeStyleLineDashOffset : defaultLineDashOffset;\n            var strokeStyleLineJoin = strokeStyle.getLineJoin();\n            state.lineJoin = strokeStyleLineJoin !== undefined ?\n                strokeStyleLineJoin : defaultLineJoin;\n            var strokeStyleWidth = strokeStyle.getWidth();\n            state.lineWidth = strokeStyleWidth !== undefined ?\n                strokeStyleWidth : defaultLineWidth;\n            var strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n            state.miterLimit = strokeStyleMiterLimit !== undefined ?\n                strokeStyleMiterLimit : defaultMiterLimit;\n            if (state.lineWidth > this.maxLineWidth) {\n                this.maxLineWidth = state.lineWidth;\n                // invalidate the buffered max extent cache\n                this.bufferedMaxExtent_ = null;\n            }\n        }\n        else {\n            state.strokeStyle = undefined;\n            state.lineCap = undefined;\n            state.lineDash = null;\n            state.lineDashOffset = undefined;\n            state.lineJoin = undefined;\n            state.lineWidth = undefined;\n            state.miterLimit = undefined;\n        }\n    };\n    /**\n     * @param {import(\"../canvas.js\").FillStrokeState} state State.\n     * @return {Array<*>} Fill instruction.\n     */\n    CanvasBuilder.prototype.createFill = function (state) {\n        var fillStyle = state.fillStyle;\n        /** @type {Array<*>} */\n        var fillInstruction = [CanvasInstruction.SET_FILL_STYLE, fillStyle];\n        if (typeof fillStyle !== 'string') {\n            // Fill is a pattern or gradient - align it!\n            fillInstruction.push(true);\n        }\n        return fillInstruction;\n    };\n    /**\n     * @param {import(\"../canvas.js\").FillStrokeState} state State.\n     */\n    CanvasBuilder.prototype.applyStroke = function (state) {\n        this.instructions.push(this.createStroke(state));\n    };\n    /**\n     * @param {import(\"../canvas.js\").FillStrokeState} state State.\n     * @return {Array<*>} Stroke instruction.\n     */\n    CanvasBuilder.prototype.createStroke = function (state) {\n        return [\n            CanvasInstruction.SET_STROKE_STYLE,\n            state.strokeStyle, state.lineWidth * this.pixelRatio, state.lineCap,\n            state.lineJoin, state.miterLimit,\n            this.applyPixelRatio(state.lineDash), state.lineDashOffset * this.pixelRatio\n        ];\n    };\n    /**\n     * @param {import(\"../canvas.js\").FillStrokeState} state State.\n     * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState):Array<*>} createFill Create fill.\n     */\n    CanvasBuilder.prototype.updateFillStyle = function (state, createFill) {\n        var fillStyle = state.fillStyle;\n        if (typeof fillStyle !== 'string' || state.currentFillStyle != fillStyle) {\n            if (fillStyle !== undefined) {\n                this.instructions.push(createFill.call(this, state));\n            }\n            state.currentFillStyle = fillStyle;\n        }\n    };\n    /**\n     * @param {import(\"../canvas.js\").FillStrokeState} state State.\n     * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState): void} applyStroke Apply stroke.\n     */\n    CanvasBuilder.prototype.updateStrokeStyle = function (state, applyStroke) {\n        var strokeStyle = state.strokeStyle;\n        var lineCap = state.lineCap;\n        var lineDash = state.lineDash;\n        var lineDashOffset = state.lineDashOffset;\n        var lineJoin = state.lineJoin;\n        var lineWidth = state.lineWidth;\n        var miterLimit = state.miterLimit;\n        if (state.currentStrokeStyle != strokeStyle ||\n            state.currentLineCap != lineCap ||\n            (lineDash != state.currentLineDash && !equals(state.currentLineDash, lineDash)) ||\n            state.currentLineDashOffset != lineDashOffset ||\n            state.currentLineJoin != lineJoin ||\n            state.currentLineWidth != lineWidth ||\n            state.currentMiterLimit != miterLimit) {\n            if (strokeStyle !== undefined) {\n                applyStroke.call(this, state);\n            }\n            state.currentStrokeStyle = strokeStyle;\n            state.currentLineCap = lineCap;\n            state.currentLineDash = lineDash;\n            state.currentLineDashOffset = lineDashOffset;\n            state.currentLineJoin = lineJoin;\n            state.currentLineWidth = lineWidth;\n            state.currentMiterLimit = miterLimit;\n        }\n    };\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     */\n    CanvasBuilder.prototype.endGeometry = function (feature) {\n        this.beginGeometryInstruction1_[2] = this.instructions.length;\n        this.beginGeometryInstruction1_ = null;\n        this.beginGeometryInstruction2_[2] = this.hitDetectionInstructions.length;\n        this.beginGeometryInstruction2_ = null;\n        var endGeometryInstruction = [CanvasInstruction.END_GEOMETRY, feature];\n        this.instructions.push(endGeometryInstruction);\n        this.hitDetectionInstructions.push(endGeometryInstruction);\n    };\n    /**\n     * Get the buffered rendering extent.  Rendering will be clipped to the extent\n     * provided to the constructor.  To account for symbolizers that may intersect\n     * this extent, we calculate a buffered extent (e.g. based on stroke width).\n     * @return {import(\"../../extent.js\").Extent} The buffered rendering extent.\n     * @protected\n     */\n    CanvasBuilder.prototype.getBufferedMaxExtent = function () {\n        if (!this.bufferedMaxExtent_) {\n            this.bufferedMaxExtent_ = clone(this.maxExtent);\n            if (this.maxLineWidth > 0) {\n                var width = this.resolution * (this.maxLineWidth + 1) / 2;\n                buffer(this.bufferedMaxExtent_, width, this.bufferedMaxExtent_);\n            }\n        }\n        return this.bufferedMaxExtent_;\n    };\n    return CanvasBuilder;\n}(VectorContext));\nexport default CanvasBuilder;\n//# sourceMappingURL=Builder.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/render/canvas/ImageBuilder\n */\nimport CanvasInstruction from './Instruction.js';\nimport CanvasBuilder from './Builder.js';\nvar CanvasImageBuilder = /** @class */ (function (_super) {\n    __extends(CanvasImageBuilder, _super);\n    /**\n     * @param {number} tolerance Tolerance.\n     * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     */\n    function CanvasImageBuilder(tolerance, maxExtent, resolution, pixelRatio) {\n        var _this = _super.call(this, tolerance, maxExtent, resolution, pixelRatio) || this;\n        /**\n         * @private\n         * @type {import(\"../canvas.js\").DeclutterGroup}\n         */\n        _this.declutterGroup_ = null;\n        /**\n         * @private\n         * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n         */\n        _this.hitDetectionImage_ = null;\n        /**\n         * @private\n         * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n         */\n        _this.image_ = null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.anchorX_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.anchorY_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.height_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.opacity_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.originX_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.originY_ = undefined;\n        /**\n         * @private\n         * @type {boolean|undefined}\n         */\n        _this.rotateWithView_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.rotation_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.scale_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.width_ = undefined;\n        return _this;\n    }\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {number} end End.\n     * @param {number} stride Stride.\n     * @private\n     * @return {number} My end.\n     */\n    CanvasImageBuilder.prototype.drawCoordinates_ = function (flatCoordinates, offset, end, stride) {\n        return this.appendFlatCoordinates(flatCoordinates, offset, end, stride, false, false);\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasImageBuilder.prototype.drawPoint = function (pointGeometry, feature) {\n        if (!this.image_) {\n            return;\n        }\n        this.beginGeometry(feature);\n        var flatCoordinates = pointGeometry.getFlatCoordinates();\n        var stride = pointGeometry.getStride();\n        var myBegin = this.coordinates.length;\n        var myEnd = this.drawCoordinates_(flatCoordinates, 0, flatCoordinates.length, stride);\n        this.instructions.push([\n            CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.image_,\n            // Remaining arguments to DRAW_IMAGE are in alphabetical order\n            this.anchorX_, this.anchorY_, this.declutterGroup_, this.height_, this.opacity_,\n            this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\n            this.scale_ * this.pixelRatio, this.width_\n        ]);\n        this.hitDetectionInstructions.push([\n            CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.hitDetectionImage_,\n            // Remaining arguments to DRAW_IMAGE are in alphabetical order\n            this.anchorX_, this.anchorY_, this.declutterGroup_, this.height_, this.opacity_,\n            this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\n            this.scale_, this.width_\n        ]);\n        this.endGeometry(feature);\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasImageBuilder.prototype.drawMultiPoint = function (multiPointGeometry, feature) {\n        if (!this.image_) {\n            return;\n        }\n        this.beginGeometry(feature);\n        var flatCoordinates = multiPointGeometry.getFlatCoordinates();\n        var stride = multiPointGeometry.getStride();\n        var myBegin = this.coordinates.length;\n        var myEnd = this.drawCoordinates_(flatCoordinates, 0, flatCoordinates.length, stride);\n        this.instructions.push([\n            CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.image_,\n            // Remaining arguments to DRAW_IMAGE are in alphabetical order\n            this.anchorX_, this.anchorY_, this.declutterGroup_, this.height_, this.opacity_,\n            this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\n            this.scale_ * this.pixelRatio, this.width_\n        ]);\n        this.hitDetectionInstructions.push([\n            CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.hitDetectionImage_,\n            // Remaining arguments to DRAW_IMAGE are in alphabetical order\n            this.anchorX_, this.anchorY_, this.declutterGroup_, this.height_, this.opacity_,\n            this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\n            this.scale_, this.width_\n        ]);\n        this.endGeometry(feature);\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasImageBuilder.prototype.finish = function () {\n        this.reverseHitDetectionInstructions();\n        // FIXME this doesn't really protect us against further calls to draw*Geometry\n        this.anchorX_ = undefined;\n        this.anchorY_ = undefined;\n        this.hitDetectionImage_ = null;\n        this.image_ = null;\n        this.height_ = undefined;\n        this.scale_ = undefined;\n        this.opacity_ = undefined;\n        this.originX_ = undefined;\n        this.originY_ = undefined;\n        this.rotateWithView_ = undefined;\n        this.rotation_ = undefined;\n        this.width_ = undefined;\n        return _super.prototype.finish.call(this);\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasImageBuilder.prototype.setImageStyle = function (imageStyle, declutterGroup) {\n        var anchor = imageStyle.getAnchor();\n        var size = imageStyle.getSize();\n        var hitDetectionImage = imageStyle.getHitDetectionImage(1);\n        var image = imageStyle.getImage(1);\n        var origin = imageStyle.getOrigin();\n        this.anchorX_ = anchor[0];\n        this.anchorY_ = anchor[1];\n        this.declutterGroup_ = /** @type {import(\"../canvas.js\").DeclutterGroup} */ (declutterGroup);\n        this.hitDetectionImage_ = hitDetectionImage;\n        this.image_ = image;\n        this.height_ = size[1];\n        this.opacity_ = imageStyle.getOpacity();\n        this.originX_ = origin[0];\n        this.originY_ = origin[1];\n        this.rotateWithView_ = imageStyle.getRotateWithView();\n        this.rotation_ = imageStyle.getRotation();\n        this.scale_ = imageStyle.getScale();\n        this.width_ = size[0];\n    };\n    return CanvasImageBuilder;\n}(CanvasBuilder));\nexport default CanvasImageBuilder;\n//# sourceMappingURL=ImageBuilder.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/render/canvas/LineStringBuilder\n */\nimport CanvasInstruction, { strokeInstruction, beginPathInstruction } from './Instruction.js';\nimport CanvasBuilder from './Builder.js';\nvar CanvasLineStringBuilder = /** @class */ (function (_super) {\n    __extends(CanvasLineStringBuilder, _super);\n    /**\n     * @param {number} tolerance Tolerance.\n     * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     */\n    function CanvasLineStringBuilder(tolerance, maxExtent, resolution, pixelRatio) {\n        return _super.call(this, tolerance, maxExtent, resolution, pixelRatio) || this;\n    }\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {number} end End.\n     * @param {number} stride Stride.\n     * @private\n     * @return {number} end.\n     */\n    CanvasLineStringBuilder.prototype.drawFlatCoordinates_ = function (flatCoordinates, offset, end, stride) {\n        var myBegin = this.coordinates.length;\n        var myEnd = this.appendFlatCoordinates(flatCoordinates, offset, end, stride, false, false);\n        var moveToLineToInstruction = [CanvasInstruction.MOVE_TO_LINE_TO, myBegin, myEnd];\n        this.instructions.push(moveToLineToInstruction);\n        this.hitDetectionInstructions.push(moveToLineToInstruction);\n        return end;\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasLineStringBuilder.prototype.drawLineString = function (lineStringGeometry, feature) {\n        var state = this.state;\n        var strokeStyle = state.strokeStyle;\n        var lineWidth = state.lineWidth;\n        if (strokeStyle === undefined || lineWidth === undefined) {\n            return;\n        }\n        this.updateStrokeStyle(state, this.applyStroke);\n        this.beginGeometry(feature);\n        this.hitDetectionInstructions.push([\n            CanvasInstruction.SET_STROKE_STYLE,\n            state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n            state.miterLimit, state.lineDash, state.lineDashOffset\n        ], beginPathInstruction);\n        var flatCoordinates = lineStringGeometry.getFlatCoordinates();\n        var stride = lineStringGeometry.getStride();\n        this.drawFlatCoordinates_(flatCoordinates, 0, flatCoordinates.length, stride);\n        this.hitDetectionInstructions.push(strokeInstruction);\n        this.endGeometry(feature);\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasLineStringBuilder.prototype.drawMultiLineString = function (multiLineStringGeometry, feature) {\n        var state = this.state;\n        var strokeStyle = state.strokeStyle;\n        var lineWidth = state.lineWidth;\n        if (strokeStyle === undefined || lineWidth === undefined) {\n            return;\n        }\n        this.updateStrokeStyle(state, this.applyStroke);\n        this.beginGeometry(feature);\n        this.hitDetectionInstructions.push([\n            CanvasInstruction.SET_STROKE_STYLE,\n            state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n            state.miterLimit, state.lineDash, state.lineDashOffset\n        ], beginPathInstruction);\n        var ends = multiLineStringGeometry.getEnds();\n        var flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n        var stride = multiLineStringGeometry.getStride();\n        var offset = 0;\n        for (var i = 0, ii = ends.length; i < ii; ++i) {\n            offset = this.drawFlatCoordinates_(flatCoordinates, offset, ends[i], stride);\n        }\n        this.hitDetectionInstructions.push(strokeInstruction);\n        this.endGeometry(feature);\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasLineStringBuilder.prototype.finish = function () {\n        var state = this.state;\n        if (state.lastStroke != undefined && state.lastStroke != this.coordinates.length) {\n            this.instructions.push(strokeInstruction);\n        }\n        this.reverseHitDetectionInstructions();\n        this.state = null;\n        return _super.prototype.finish.call(this);\n    };\n    /**\n     * @inheritDoc.\n     */\n    CanvasLineStringBuilder.prototype.applyStroke = function (state) {\n        if (state.lastStroke != undefined && state.lastStroke != this.coordinates.length) {\n            this.instructions.push(strokeInstruction);\n            state.lastStroke = this.coordinates.length;\n        }\n        state.lastStroke = 0;\n        _super.prototype.applyStroke.call(this, state);\n        this.instructions.push(beginPathInstruction);\n    };\n    return CanvasLineStringBuilder;\n}(CanvasBuilder));\nexport default CanvasLineStringBuilder;\n//# sourceMappingURL=LineStringBuilder.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/render/canvas/PolygonBuilder\n */\nimport { snap } from '../../geom/flat/simplify.js';\nimport { defaultFillStyle } from '../canvas.js';\nimport CanvasInstruction, { fillInstruction, strokeInstruction, beginPathInstruction, closePathInstruction } from './Instruction.js';\nimport CanvasBuilder from './Builder.js';\nvar CanvasPolygonBuilder = /** @class */ (function (_super) {\n    __extends(CanvasPolygonBuilder, _super);\n    /**\n     * @param {number} tolerance Tolerance.\n     * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     */\n    function CanvasPolygonBuilder(tolerance, maxExtent, resolution, pixelRatio) {\n        return _super.call(this, tolerance, maxExtent, resolution, pixelRatio) || this;\n    }\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {Array<number>} ends Ends.\n     * @param {number} stride Stride.\n     * @private\n     * @return {number} End.\n     */\n    CanvasPolygonBuilder.prototype.drawFlatCoordinatess_ = function (flatCoordinates, offset, ends, stride) {\n        var state = this.state;\n        var fill = state.fillStyle !== undefined;\n        var stroke = state.strokeStyle != undefined;\n        var numEnds = ends.length;\n        this.instructions.push(beginPathInstruction);\n        this.hitDetectionInstructions.push(beginPathInstruction);\n        for (var i = 0; i < numEnds; ++i) {\n            var end = ends[i];\n            var myBegin = this.coordinates.length;\n            var myEnd = this.appendFlatCoordinates(flatCoordinates, offset, end, stride, true, !stroke);\n            var moveToLineToInstruction = [CanvasInstruction.MOVE_TO_LINE_TO, myBegin, myEnd];\n            this.instructions.push(moveToLineToInstruction);\n            this.hitDetectionInstructions.push(moveToLineToInstruction);\n            if (stroke) {\n                // Performance optimization: only call closePath() when we have a stroke.\n                // Otherwise the ring is closed already (see appendFlatCoordinates above).\n                this.instructions.push(closePathInstruction);\n                this.hitDetectionInstructions.push(closePathInstruction);\n            }\n            offset = end;\n        }\n        if (fill) {\n            this.instructions.push(fillInstruction);\n            this.hitDetectionInstructions.push(fillInstruction);\n        }\n        if (stroke) {\n            this.instructions.push(strokeInstruction);\n            this.hitDetectionInstructions.push(strokeInstruction);\n        }\n        return offset;\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasPolygonBuilder.prototype.drawCircle = function (circleGeometry, feature) {\n        var state = this.state;\n        var fillStyle = state.fillStyle;\n        var strokeStyle = state.strokeStyle;\n        if (fillStyle === undefined && strokeStyle === undefined) {\n            return;\n        }\n        this.setFillStrokeStyles_();\n        this.beginGeometry(feature);\n        if (state.fillStyle !== undefined) {\n            this.hitDetectionInstructions.push([\n                CanvasInstruction.SET_FILL_STYLE,\n                defaultFillStyle\n            ]);\n        }\n        if (state.strokeStyle !== undefined) {\n            this.hitDetectionInstructions.push([\n                CanvasInstruction.SET_STROKE_STYLE,\n                state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n                state.miterLimit, state.lineDash, state.lineDashOffset\n            ]);\n        }\n        var flatCoordinates = circleGeometry.getFlatCoordinates();\n        var stride = circleGeometry.getStride();\n        var myBegin = this.coordinates.length;\n        this.appendFlatCoordinates(flatCoordinates, 0, flatCoordinates.length, stride, false, false);\n        var circleInstruction = [CanvasInstruction.CIRCLE, myBegin];\n        this.instructions.push(beginPathInstruction, circleInstruction);\n        this.hitDetectionInstructions.push(beginPathInstruction, circleInstruction);\n        this.hitDetectionInstructions.push(fillInstruction);\n        if (state.fillStyle !== undefined) {\n            this.instructions.push(fillInstruction);\n        }\n        if (state.strokeStyle !== undefined) {\n            this.instructions.push(strokeInstruction);\n            this.hitDetectionInstructions.push(strokeInstruction);\n        }\n        this.endGeometry(feature);\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasPolygonBuilder.prototype.drawPolygon = function (polygonGeometry, feature) {\n        var state = this.state;\n        var fillStyle = state.fillStyle;\n        var strokeStyle = state.strokeStyle;\n        if (fillStyle === undefined && strokeStyle === undefined) {\n            return;\n        }\n        this.setFillStrokeStyles_();\n        this.beginGeometry(feature);\n        if (state.fillStyle !== undefined) {\n            this.hitDetectionInstructions.push([\n                CanvasInstruction.SET_FILL_STYLE,\n                defaultFillStyle\n            ]);\n        }\n        if (state.strokeStyle !== undefined) {\n            this.hitDetectionInstructions.push([\n                CanvasInstruction.SET_STROKE_STYLE,\n                state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n                state.miterLimit, state.lineDash, state.lineDashOffset\n            ]);\n        }\n        var ends = polygonGeometry.getEnds();\n        var flatCoordinates = polygonGeometry.getOrientedFlatCoordinates();\n        var stride = polygonGeometry.getStride();\n        this.drawFlatCoordinatess_(flatCoordinates, 0, ends, stride);\n        this.endGeometry(feature);\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasPolygonBuilder.prototype.drawMultiPolygon = function (multiPolygonGeometry, feature) {\n        var state = this.state;\n        var fillStyle = state.fillStyle;\n        var strokeStyle = state.strokeStyle;\n        if (fillStyle === undefined && strokeStyle === undefined) {\n            return;\n        }\n        this.setFillStrokeStyles_();\n        this.beginGeometry(feature);\n        if (state.fillStyle !== undefined) {\n            this.hitDetectionInstructions.push([\n                CanvasInstruction.SET_FILL_STYLE,\n                defaultFillStyle\n            ]);\n        }\n        if (state.strokeStyle !== undefined) {\n            this.hitDetectionInstructions.push([\n                CanvasInstruction.SET_STROKE_STYLE,\n                state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n                state.miterLimit, state.lineDash, state.lineDashOffset\n            ]);\n        }\n        var endss = multiPolygonGeometry.getEndss();\n        var flatCoordinates = multiPolygonGeometry.getOrientedFlatCoordinates();\n        var stride = multiPolygonGeometry.getStride();\n        var offset = 0;\n        for (var i = 0, ii = endss.length; i < ii; ++i) {\n            offset = this.drawFlatCoordinatess_(flatCoordinates, offset, endss[i], stride);\n        }\n        this.endGeometry(feature);\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasPolygonBuilder.prototype.finish = function () {\n        this.reverseHitDetectionInstructions();\n        this.state = null;\n        // We want to preserve topology when drawing polygons.  Polygons are\n        // simplified using quantization and point elimination. However, we might\n        // have received a mix of quantized and non-quantized geometries, so ensure\n        // that all are quantized by quantizing all coordinates in the batch.\n        var tolerance = this.tolerance;\n        if (tolerance !== 0) {\n            var coordinates = this.coordinates;\n            for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n                coordinates[i] = snap(coordinates[i], tolerance);\n            }\n        }\n        return _super.prototype.finish.call(this);\n    };\n    /**\n     * @private\n     */\n    CanvasPolygonBuilder.prototype.setFillStrokeStyles_ = function () {\n        var state = this.state;\n        var fillStyle = state.fillStyle;\n        if (fillStyle !== undefined) {\n            this.updateFillStyle(state, this.createFill);\n        }\n        if (state.strokeStyle !== undefined) {\n            this.updateStrokeStyle(state, this.applyStroke);\n        }\n    };\n    return CanvasPolygonBuilder;\n}(CanvasBuilder));\nexport default CanvasPolygonBuilder;\n//# sourceMappingURL=PolygonBuilder.js.map","/**\n * @module ol/geom/flat/straightchunk\n */\n/**\n * @param {number} maxAngle Maximum acceptable angle delta between segments.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Array<number>} Start and end of the first suitable chunk of the\n * given `flatCoordinates`.\n */\nexport function matchingChunk(maxAngle, flatCoordinates, offset, end, stride) {\n    var chunkStart = offset;\n    var chunkEnd = offset;\n    var chunkM = 0;\n    var m = 0;\n    var start = offset;\n    var acos, i, m12, m23, x1, y1, x12, y12, x23, y23;\n    for (i = offset; i < end; i += stride) {\n        var x2 = flatCoordinates[i];\n        var y2 = flatCoordinates[i + 1];\n        if (x1 !== undefined) {\n            x23 = x2 - x1;\n            y23 = y2 - y1;\n            m23 = Math.sqrt(x23 * x23 + y23 * y23);\n            if (x12 !== undefined) {\n                m += m12;\n                acos = Math.acos((x12 * x23 + y12 * y23) / (m12 * m23));\n                if (acos > maxAngle) {\n                    if (m > chunkM) {\n                        chunkM = m;\n                        chunkStart = start;\n                        chunkEnd = i;\n                    }\n                    m = 0;\n                    start = i - stride;\n                }\n            }\n            m12 = m23;\n            x12 = x23;\n            y12 = y23;\n        }\n        x1 = x2;\n        y1 = y2;\n    }\n    m += m23;\n    return m > chunkM ? [start, i] : [chunkStart, chunkEnd];\n}\n//# sourceMappingURL=straightchunk.js.map","/**\n * @module ol/style/TextPlacement\n */\n/**\n * Text placement. One of `'point'`, `'line'`. Default is `'point'`. Note that\n * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},\n * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or\n * {@link module:ol/geom/MultiPolygon~MultiPolygon}.\n * @enum {string}\n */\nexport default {\n    POINT: 'point',\n    LINE: 'line'\n};\n//# sourceMappingURL=TextPlacement.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/render/canvas/TextBuilder\n */\nimport { getUid } from '../../util.js';\nimport { asColorLike } from '../../colorlike.js';\nimport { intersects } from '../../extent.js';\nimport { matchingChunk } from '../../geom/flat/straightchunk.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport { labelCache, defaultTextAlign, defaultPadding, defaultLineCap, defaultLineDashOffset, defaultLineDash, defaultLineJoin, defaultFillStyle, checkFont, defaultFont, defaultLineWidth, defaultMiterLimit, defaultStrokeStyle, defaultTextBaseline } from '../canvas.js';\nimport CanvasInstruction from './Instruction.js';\nimport CanvasBuilder from './Builder.js';\nimport TextPlacement from '../../style/TextPlacement.js';\n/**\n * @const\n * @enum {number}\n */\nexport var TEXT_ALIGN = {};\nTEXT_ALIGN['left'] = 0;\nTEXT_ALIGN['end'] = 0;\nTEXT_ALIGN['center'] = 0.5;\nTEXT_ALIGN['right'] = 1;\nTEXT_ALIGN['start'] = 1;\nTEXT_ALIGN['top'] = 0;\nTEXT_ALIGN['middle'] = 0.5;\nTEXT_ALIGN['hanging'] = 0.2;\nTEXT_ALIGN['alphabetic'] = 0.8;\nTEXT_ALIGN['ideographic'] = 0.8;\nTEXT_ALIGN['bottom'] = 1;\nvar CanvasTextBuilder = /** @class */ (function (_super) {\n    __extends(CanvasTextBuilder, _super);\n    /**\n     * @param {number} tolerance Tolerance.\n     * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     */\n    function CanvasTextBuilder(tolerance, maxExtent, resolution, pixelRatio) {\n        var _this = _super.call(this, tolerance, maxExtent, resolution, pixelRatio) || this;\n        /**\n         * @private\n         * @type {import(\"../canvas.js\").DeclutterGroup}\n         */\n        _this.declutterGroup_;\n        /**\n         * @private\n         * @type {Array<HTMLCanvasElement>}\n         */\n        _this.labels_ = null;\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.text_ = '';\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.textOffsetX_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.textOffsetY_ = 0;\n        /**\n         * @private\n         * @type {boolean|undefined}\n         */\n        _this.textRotateWithView_ = undefined;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.textRotation_ = 0;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").FillState}\n         */\n        _this.textFillState_ = null;\n        /**\n         * @type {!Object<string, import(\"../canvas.js\").FillState>}\n         */\n        _this.fillStates = {};\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").StrokeState}\n         */\n        _this.textStrokeState_ = null;\n        /**\n         * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n         */\n        _this.strokeStates = {};\n        /**\n         * @private\n         * @type {import(\"../canvas.js\").TextState}\n         */\n        _this.textState_ = /** @type {import(\"../canvas.js\").TextState} */ ({});\n        /**\n         * @type {!Object<string, import(\"../canvas.js\").TextState>}\n         */\n        _this.textStates = {};\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.textKey_ = '';\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.fillKey_ = '';\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.strokeKey_ = '';\n        labelCache.prune();\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    CanvasTextBuilder.prototype.finish = function () {\n        var instructions = _super.prototype.finish.call(this);\n        instructions.textStates = this.textStates;\n        instructions.fillStates = this.fillStates;\n        instructions.strokeStates = this.strokeStates;\n        return instructions;\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasTextBuilder.prototype.drawText = function (geometry, feature) {\n        var fillState = this.textFillState_;\n        var strokeState = this.textStrokeState_;\n        var textState = this.textState_;\n        if (this.text_ === '' || !textState || (!fillState && !strokeState)) {\n            return;\n        }\n        var begin = this.coordinates.length;\n        var geometryType = geometry.getType();\n        var flatCoordinates = null;\n        var end = 2;\n        var stride = 2;\n        var i, ii;\n        if (textState.placement === TextPlacement.LINE) {\n            if (!intersects(this.getBufferedMaxExtent(), geometry.getExtent())) {\n                return;\n            }\n            var ends = void 0;\n            flatCoordinates = geometry.getFlatCoordinates();\n            stride = geometry.getStride();\n            if (geometryType == GeometryType.LINE_STRING) {\n                ends = [flatCoordinates.length];\n            }\n            else if (geometryType == GeometryType.MULTI_LINE_STRING) {\n                ends = geometry.getEnds();\n            }\n            else if (geometryType == GeometryType.POLYGON) {\n                ends = geometry.getEnds().slice(0, 1);\n            }\n            else if (geometryType == GeometryType.MULTI_POLYGON) {\n                var endss = geometry.getEndss();\n                ends = [];\n                for (i = 0, ii = endss.length; i < ii; ++i) {\n                    ends.push(endss[i][0]);\n                }\n            }\n            this.beginGeometry(feature);\n            var textAlign = textState.textAlign;\n            var flatOffset = 0;\n            var flatEnd = void 0;\n            for (var o = 0, oo = ends.length; o < oo; ++o) {\n                if (textAlign == undefined) {\n                    var range = matchingChunk(textState.maxAngle, flatCoordinates, flatOffset, ends[o], stride);\n                    flatOffset = range[0];\n                    flatEnd = range[1];\n                }\n                else {\n                    flatEnd = ends[o];\n                }\n                for (i = flatOffset; i < flatEnd; i += stride) {\n                    this.coordinates.push(flatCoordinates[i], flatCoordinates[i + 1]);\n                }\n                end = this.coordinates.length;\n                flatOffset = ends[o];\n                this.drawChars_(begin, end, this.declutterGroup_);\n                begin = end;\n            }\n            this.endGeometry(feature);\n        }\n        else {\n            var geometryWidths = null;\n            if (!textState.overflow) {\n                geometryWidths = [];\n            }\n            switch (geometryType) {\n                case GeometryType.POINT:\n                case GeometryType.MULTI_POINT:\n                    flatCoordinates = geometry.getFlatCoordinates();\n                    end = flatCoordinates.length;\n                    break;\n                case GeometryType.LINE_STRING:\n                    flatCoordinates = /** @type {import(\"../../geom/LineString.js\").default} */ (geometry).getFlatMidpoint();\n                    break;\n                case GeometryType.CIRCLE:\n                    flatCoordinates = /** @type {import(\"../../geom/Circle.js\").default} */ (geometry).getCenter();\n                    break;\n                case GeometryType.MULTI_LINE_STRING:\n                    flatCoordinates = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry).getFlatMidpoints();\n                    end = flatCoordinates.length;\n                    break;\n                case GeometryType.POLYGON:\n                    flatCoordinates = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry).getFlatInteriorPoint();\n                    if (!textState.overflow) {\n                        geometryWidths.push(flatCoordinates[2] / this.resolution);\n                    }\n                    stride = 3;\n                    break;\n                case GeometryType.MULTI_POLYGON:\n                    var interiorPoints = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry).getFlatInteriorPoints();\n                    flatCoordinates = [];\n                    for (i = 0, ii = interiorPoints.length; i < ii; i += 3) {\n                        if (!textState.overflow) {\n                            geometryWidths.push(interiorPoints[i + 2] / this.resolution);\n                        }\n                        flatCoordinates.push(interiorPoints[i], interiorPoints[i + 1]);\n                    }\n                    end = flatCoordinates.length;\n                    if (end == 0) {\n                        return;\n                    }\n                    break;\n                default:\n            }\n            end = this.appendFlatCoordinates(flatCoordinates, 0, end, stride, false, false);\n            this.saveTextStates_();\n            if (textState.backgroundFill || textState.backgroundStroke) {\n                this.setFillStrokeStyle(textState.backgroundFill, textState.backgroundStroke);\n                if (textState.backgroundFill) {\n                    this.updateFillStyle(this.state, this.createFill);\n                    this.hitDetectionInstructions.push(this.createFill(this.state));\n                }\n                if (textState.backgroundStroke) {\n                    this.updateStrokeStyle(this.state, this.applyStroke);\n                    this.hitDetectionInstructions.push(this.createStroke(this.state));\n                }\n            }\n            this.beginGeometry(feature);\n            // The image is unknown at this stage so we pass null; it will be computed at render time.\n            // For clarity, we pass NaN for offsetX, offsetY, width and height, which will be computed at\n            // render time.\n            var pixelRatio_1 = this.pixelRatio;\n            this.instructions.push([CanvasInstruction.DRAW_IMAGE, begin, end,\n                null, NaN, NaN, this.declutterGroup_, NaN, 1, 0, 0,\n                this.textRotateWithView_, this.textRotation_, 1, NaN,\n                textState.padding == defaultPadding ?\n                    defaultPadding : textState.padding.map(function (p) {\n                    return p * pixelRatio_1;\n                }),\n                !!textState.backgroundFill, !!textState.backgroundStroke,\n                this.text_, this.textKey_, this.strokeKey_, this.fillKey_,\n                this.textOffsetX_, this.textOffsetY_, geometryWidths\n            ]);\n            this.hitDetectionInstructions.push([CanvasInstruction.DRAW_IMAGE, begin, end,\n                null, NaN, NaN, this.declutterGroup_, NaN, 1, 0, 0,\n                this.textRotateWithView_, this.textRotation_, 1 / this.pixelRatio, NaN,\n                textState.padding,\n                !!textState.backgroundFill, !!textState.backgroundStroke,\n                this.text_, this.textKey_, this.strokeKey_, this.fillKey_,\n                this.textOffsetX_, this.textOffsetY_, geometryWidths\n            ]);\n            this.endGeometry(feature);\n        }\n    };\n    /**\n     * @private\n     */\n    CanvasTextBuilder.prototype.saveTextStates_ = function () {\n        var strokeState = this.textStrokeState_;\n        var textState = this.textState_;\n        var fillState = this.textFillState_;\n        var strokeKey = this.strokeKey_;\n        if (strokeState) {\n            if (!(strokeKey in this.strokeStates)) {\n                this.strokeStates[strokeKey] = {\n                    strokeStyle: strokeState.strokeStyle,\n                    lineCap: strokeState.lineCap,\n                    lineDashOffset: strokeState.lineDashOffset,\n                    lineWidth: strokeState.lineWidth,\n                    lineJoin: strokeState.lineJoin,\n                    miterLimit: strokeState.miterLimit,\n                    lineDash: strokeState.lineDash\n                };\n            }\n        }\n        var textKey = this.textKey_;\n        if (!(textKey in this.textStates)) {\n            this.textStates[textKey] = {\n                font: textState.font,\n                textAlign: textState.textAlign || defaultTextAlign,\n                textBaseline: textState.textBaseline || defaultTextBaseline,\n                scale: textState.scale\n            };\n        }\n        var fillKey = this.fillKey_;\n        if (fillState) {\n            if (!(fillKey in this.fillStates)) {\n                this.fillStates[fillKey] = {\n                    fillStyle: fillState.fillStyle\n                };\n            }\n        }\n    };\n    /**\n     * @private\n     * @param {number} begin Begin.\n     * @param {number} end End.\n     * @param {import(\"../canvas.js\").DeclutterGroup} declutterGroup Declutter group.\n     */\n    CanvasTextBuilder.prototype.drawChars_ = function (begin, end, declutterGroup) {\n        var strokeState = this.textStrokeState_;\n        var textState = this.textState_;\n        var strokeKey = this.strokeKey_;\n        var textKey = this.textKey_;\n        var fillKey = this.fillKey_;\n        this.saveTextStates_();\n        var pixelRatio = this.pixelRatio;\n        var baseline = TEXT_ALIGN[textState.textBaseline];\n        var offsetY = this.textOffsetY_ * pixelRatio;\n        var text = this.text_;\n        var textScale = textState.scale;\n        var strokeWidth = strokeState ? strokeState.lineWidth * textScale / 2 : 0;\n        this.instructions.push([CanvasInstruction.DRAW_CHARS,\n            begin, end, baseline, declutterGroup,\n            textState.overflow, fillKey, textState.maxAngle,\n            pixelRatio,\n            offsetY, strokeKey, strokeWidth * pixelRatio, text, textKey, 1\n        ]);\n        this.hitDetectionInstructions.push([CanvasInstruction.DRAW_CHARS,\n            begin, end, baseline, declutterGroup,\n            textState.overflow, fillKey, textState.maxAngle,\n            1,\n            offsetY, strokeKey, strokeWidth, text, textKey, 1 / pixelRatio\n        ]);\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasTextBuilder.prototype.setTextStyle = function (textStyle, declutterGroup) {\n        var textState, fillState, strokeState;\n        if (!textStyle) {\n            this.text_ = '';\n        }\n        else {\n            this.declutterGroup_ = /** @type {import(\"../canvas.js\").DeclutterGroup} */ (declutterGroup);\n            var textFillStyle = textStyle.getFill();\n            if (!textFillStyle) {\n                fillState = this.textFillState_ = null;\n            }\n            else {\n                fillState = this.textFillState_;\n                if (!fillState) {\n                    fillState = this.textFillState_ = /** @type {import(\"../canvas.js\").FillState} */ ({});\n                }\n                fillState.fillStyle = asColorLike(textFillStyle.getColor() || defaultFillStyle);\n            }\n            var textStrokeStyle = textStyle.getStroke();\n            if (!textStrokeStyle) {\n                strokeState = this.textStrokeState_ = null;\n            }\n            else {\n                strokeState = this.textStrokeState_;\n                if (!strokeState) {\n                    strokeState = this.textStrokeState_ = /** @type {import(\"../canvas.js\").StrokeState} */ ({});\n                }\n                var lineDash = textStrokeStyle.getLineDash();\n                var lineDashOffset = textStrokeStyle.getLineDashOffset();\n                var lineWidth = textStrokeStyle.getWidth();\n                var miterLimit = textStrokeStyle.getMiterLimit();\n                strokeState.lineCap = textStrokeStyle.getLineCap() || defaultLineCap;\n                strokeState.lineDash = lineDash ? lineDash.slice() : defaultLineDash;\n                strokeState.lineDashOffset =\n                    lineDashOffset === undefined ? defaultLineDashOffset : lineDashOffset;\n                strokeState.lineJoin = textStrokeStyle.getLineJoin() || defaultLineJoin;\n                strokeState.lineWidth =\n                    lineWidth === undefined ? defaultLineWidth : lineWidth;\n                strokeState.miterLimit =\n                    miterLimit === undefined ? defaultMiterLimit : miterLimit;\n                strokeState.strokeStyle = asColorLike(textStrokeStyle.getColor() || defaultStrokeStyle);\n            }\n            textState = this.textState_;\n            var font = textStyle.getFont() || defaultFont;\n            checkFont(font);\n            var textScale = textStyle.getScale();\n            textState.overflow = textStyle.getOverflow();\n            textState.font = font;\n            textState.maxAngle = textStyle.getMaxAngle();\n            textState.placement = textStyle.getPlacement();\n            textState.textAlign = textStyle.getTextAlign();\n            textState.textBaseline = textStyle.getTextBaseline() || defaultTextBaseline;\n            textState.backgroundFill = textStyle.getBackgroundFill();\n            textState.backgroundStroke = textStyle.getBackgroundStroke();\n            textState.padding = textStyle.getPadding() || defaultPadding;\n            textState.scale = textScale === undefined ? 1 : textScale;\n            var textOffsetX = textStyle.getOffsetX();\n            var textOffsetY = textStyle.getOffsetY();\n            var textRotateWithView = textStyle.getRotateWithView();\n            var textRotation = textStyle.getRotation();\n            this.text_ = textStyle.getText() || '';\n            this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;\n            this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;\n            this.textRotateWithView_ = textRotateWithView === undefined ? false : textRotateWithView;\n            this.textRotation_ = textRotation === undefined ? 0 : textRotation;\n            this.strokeKey_ = strokeState ?\n                (typeof strokeState.strokeStyle == 'string' ? strokeState.strokeStyle : getUid(strokeState.strokeStyle)) +\n                    strokeState.lineCap + strokeState.lineDashOffset + '|' + strokeState.lineWidth +\n                    strokeState.lineJoin + strokeState.miterLimit + '[' + strokeState.lineDash.join() + ']' :\n                '';\n            this.textKey_ = textState.font + textState.scale + (textState.textAlign || '?');\n            this.fillKey_ = fillState ?\n                (typeof fillState.fillStyle == 'string' ? fillState.fillStyle : ('|' + getUid(fillState.fillStyle))) :\n                '';\n        }\n    };\n    return CanvasTextBuilder;\n}(CanvasBuilder));\nexport default CanvasTextBuilder;\n//# sourceMappingURL=TextBuilder.js.map","/**\n * @module ol/render/canvas/BuilderGroup\n */\nimport { createEmpty } from '../../extent.js';\nimport Builder from './Builder.js';\nimport ImageBuilder from './ImageBuilder.js';\nimport LineStringBuilder from './LineStringBuilder.js';\nimport PolygonBuilder from './PolygonBuilder.js';\nimport TextBuilder from './TextBuilder.js';\n/**\n * @type {Object<import(\"./BuilderType\").default, typeof Builder>}\n */\nvar BATCH_CONSTRUCTORS = {\n    'Circle': PolygonBuilder,\n    'Default': Builder,\n    'Image': ImageBuilder,\n    'LineString': LineStringBuilder,\n    'Polygon': PolygonBuilder,\n    'Text': TextBuilder\n};\nvar BuilderGroup = /** @class */ (function () {\n    /**\n     * @param {number} tolerance Tolerance.\n     * @param {import(\"../../extent.js\").Extent} maxExtent Max extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {boolean} declutter Decluttering enabled.\n     */\n    function BuilderGroup(tolerance, maxExtent, resolution, pixelRatio, declutter) {\n        /**\n         * @type {boolean}\n         * @private\n         */\n        this.declutter_ = declutter;\n        /**\n         * @type {import(\"../canvas.js\").DeclutterGroup}\n         * @private\n         */\n        this.declutterGroup_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.tolerance_ = tolerance;\n        /**\n         * @private\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        this.maxExtent_ = maxExtent;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.pixelRatio_ = pixelRatio;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.resolution_ = resolution;\n        /**\n         * @private\n         * @type {!Object<string, !Object<import(\"./BuilderType\").default, Builder>>}\n         */\n        this.buildersByZIndex_ = {};\n    }\n    /**\n     * @param {boolean} group Group with previous builder.\n     * @return {Array<*>} The resulting instruction group.\n     */\n    BuilderGroup.prototype.addDeclutter = function (group) {\n        var declutter = null;\n        if (this.declutter_) {\n            if (group) {\n                declutter = this.declutterGroup_;\n                /** @type {number} */ (declutter[4])++;\n            }\n            else {\n                declutter = this.declutterGroup_ = createEmpty();\n                declutter.push(1);\n            }\n        }\n        return declutter;\n    };\n    /**\n     * @return {!Object<string, !Object<import(\"./BuilderType\").default, import(\"./Builder.js\").SerializableInstructions>>} The serializable instructions\n     */\n    BuilderGroup.prototype.finish = function () {\n        var builderInstructions = {};\n        for (var zKey in this.buildersByZIndex_) {\n            builderInstructions[zKey] = builderInstructions[zKey] || {};\n            var builders = this.buildersByZIndex_[zKey];\n            for (var builderKey in builders) {\n                var builderInstruction = builders[builderKey].finish();\n                builderInstructions[zKey][builderKey] = builderInstruction;\n            }\n        }\n        return builderInstructions;\n    };\n    /**\n     * @param {number|undefined} zIndex Z index.\n     * @param {import(\"./BuilderType.js\").default} builderType Replay type.\n     * @return {import(\"../VectorContext.js\").default} Replay.\n     */\n    BuilderGroup.prototype.getBuilder = function (zIndex, builderType) {\n        var zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n        var replays = this.buildersByZIndex_[zIndexKey];\n        if (replays === undefined) {\n            replays = {};\n            this.buildersByZIndex_[zIndexKey] = replays;\n        }\n        var replay = replays[builderType];\n        if (replay === undefined) {\n            var Constructor = BATCH_CONSTRUCTORS[builderType];\n            replay = new Constructor(this.tolerance_, this.maxExtent_, this.resolution_, this.pixelRatio_);\n            replays[builderType] = replay;\n        }\n        return replay;\n    };\n    return BuilderGroup;\n}());\nexport default BuilderGroup;\n//# sourceMappingURL=BuilderGroup.js.map","/**\n * @module ol/render/canvas/BuilderType\n */\n/**\n * @enum {string}\n */\nexport default {\n    CIRCLE: 'Circle',\n    DEFAULT: 'Default',\n    IMAGE: 'Image',\n    LINE_STRING: 'LineString',\n    POLYGON: 'Polygon',\n    TEXT: 'Text'\n};\n//# sourceMappingURL=BuilderType.js.map","/**\n * @module ol/geom/flat/textpath\n */\nimport { lerp } from '../../math.js';\n/**\n * @param {Array<number>} flatCoordinates Path to put text on.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @param {string} text Text to place on the path.\n * @param {number} startM m along the path where the text starts.\n * @param {number} maxAngle Max angle between adjacent chars in radians.\n * @param {number} scale The product of the text scale and the device pixel ratio.\n * @param {function(string, string, Object<string, number>):number} measureAndCacheTextWidth Measure and cache text width.\n * @param {string} font The font.\n * @param {Object<string, number>} cache A cache of measured widths.\n * @return {Array<Array<*>>} The result array of null if `maxAngle` was\n * exceeded. Entries of the array are x, y, anchorX, angle, chunk.\n */\nexport function drawTextOnPath(flatCoordinates, offset, end, stride, text, startM, maxAngle, scale, measureAndCacheTextWidth, font, cache) {\n    var result = [];\n    // Keep text upright\n    var reverse = flatCoordinates[offset] > flatCoordinates[end - stride];\n    var numChars = text.length;\n    var x1 = flatCoordinates[offset];\n    var y1 = flatCoordinates[offset + 1];\n    offset += stride;\n    var x2 = flatCoordinates[offset];\n    var y2 = flatCoordinates[offset + 1];\n    var segmentM = 0;\n    var segmentLength = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));\n    var chunk = '';\n    var chunkLength = 0;\n    var data, index, previousAngle;\n    for (var i = 0; i < numChars; ++i) {\n        index = reverse ? numChars - i - 1 : i;\n        var char = text.charAt(index);\n        chunk = reverse ? char + chunk : chunk + char;\n        var charLength = scale * measureAndCacheTextWidth(font, chunk, cache) - chunkLength;\n        chunkLength += charLength;\n        var charM = startM + charLength / 2;\n        while (offset < end - stride && segmentM + segmentLength < charM) {\n            x1 = x2;\n            y1 = y2;\n            offset += stride;\n            x2 = flatCoordinates[offset];\n            y2 = flatCoordinates[offset + 1];\n            segmentM += segmentLength;\n            segmentLength = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));\n        }\n        var segmentPos = charM - segmentM;\n        var angle = Math.atan2(y2 - y1, x2 - x1);\n        if (reverse) {\n            angle += angle > 0 ? -Math.PI : Math.PI;\n        }\n        if (previousAngle !== undefined) {\n            var delta = angle - previousAngle;\n            delta += (delta > Math.PI) ? -2 * Math.PI : (delta < -Math.PI) ? 2 * Math.PI : 0;\n            if (Math.abs(delta) > maxAngle) {\n                return null;\n            }\n        }\n        var interpolate = segmentPos / segmentLength;\n        var x = lerp(x1, x2, interpolate);\n        var y = lerp(y1, y2, interpolate);\n        if (previousAngle == angle) {\n            if (reverse) {\n                data[0] = x;\n                data[1] = y;\n                data[2] = charLength / 2;\n            }\n            data[4] = chunk;\n        }\n        else {\n            chunk = char;\n            chunkLength = charLength;\n            data = [x, y, charLength / 2, angle, chunk];\n            if (reverse) {\n                result.unshift(data);\n            }\n            else {\n                result.push(data);\n            }\n            previousAngle = angle;\n        }\n        startM += charLength;\n    }\n    return result;\n}\n//# sourceMappingURL=textpath.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/render/canvas/Executor\n */\nimport { getUid } from '../../util.js';\nimport { equals } from '../../array.js';\nimport { createEmpty, createOrUpdate, createOrUpdateEmpty, extend, intersects } from '../../extent.js';\nimport { lineStringLength } from '../../geom/flat/length.js';\nimport { drawTextOnPath } from '../../geom/flat/textpath.js';\nimport { transform2D } from '../../geom/flat/transform.js';\nimport { isEmpty } from '../../obj.js';\nimport { drawImage, defaultPadding, defaultTextBaseline } from '../canvas.js';\nimport CanvasInstruction from './Instruction.js';\nimport { TEXT_ALIGN } from './TextBuilder.js';\nimport { create as createTransform, compose as composeTransform, apply as applyTransform, setFromArray as transformSetFromArray } from '../../transform.js';\nimport { createCanvasContext2D } from '../../dom.js';\nimport { labelCache, defaultTextAlign, measureTextHeight, measureAndCacheTextWidth, measureTextWidths } from '../canvas.js';\nimport Disposable from '../../Disposable.js';\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, import(\"../canvas.js\").TextState>} textStates The text states (decluttering).\n * @property {!Object<string, import(\"../canvas.js\").FillState>} fillStates The fill states (decluttering).\n * @property {!Object<string, import(\"../canvas.js\").StrokeState>} strokeStates The stroke states (decluttering).\n */\n/**\n * @type {import(\"../../extent.js\").Extent}\n */\nvar tmpExtent = createEmpty();\n/**\n * @type {!import(\"../../transform.js\").Transform}\n */\nvar tmpTransform = createTransform();\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nvar p1 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nvar p2 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nvar p3 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nvar p4 = [];\nvar Executor = /** @class */ (function (_super) {\n    __extends(Executor, _super);\n    /**\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {boolean} overlaps The replay can have overlapping geometries.\n     * @param {?} declutterTree Declutter tree.\n     * @param {SerializableInstructions} instructions The serializable instructions\n     */\n    function Executor(resolution, pixelRatio, overlaps, declutterTree, instructions) {\n        var _this = _super.call(this) || this;\n        /**\n         * @type {?}\n         */\n        _this.declutterTree = declutterTree;\n        /**\n         * @protected\n         * @type {boolean}\n         */\n        _this.overlaps = overlaps;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.pixelRatio = pixelRatio;\n        /**\n         * @protected\n         * @const\n         * @type {number}\n         */\n        _this.resolution = resolution;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.alignFill_;\n        /**\n         * @protected\n         * @type {Array<*>}\n         */\n        _this.instructions = instructions.instructions;\n        /**\n         * @protected\n         * @type {Array<number>}\n         */\n        _this.coordinates = instructions.coordinates;\n        /**\n         * @private\n         * @type {!Object<number,import(\"../../coordinate.js\").Coordinate|Array<import(\"../../coordinate.js\").Coordinate>|Array<Array<import(\"../../coordinate.js\").Coordinate>>>}\n         */\n        _this.coordinateCache_ = {};\n        /**\n         * @private\n         * @type {!import(\"../../transform.js\").Transform}\n         */\n        _this.renderedTransform_ = createTransform();\n        /**\n         * @protected\n         * @type {Array<*>}\n         */\n        _this.hitDetectionInstructions = instructions.hitDetectionInstructions;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.pixelCoordinates_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.viewRotation_ = 0;\n        /**\n         * @type {!Object<string, import(\"../canvas.js\").FillState>}\n         */\n        _this.fillStates = instructions.fillStates || {};\n        /**\n         * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n         */\n        _this.strokeStates = instructions.strokeStates || {};\n        /**\n         * @type {!Object<string, import(\"../canvas.js\").TextState>}\n         */\n        _this.textStates = instructions.textStates || {};\n        /**\n         * @private\n         * @type {Object<string, Object<string, number>>}\n         */\n        _this.widths_ = {};\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    Executor.prototype.disposeInternal = function () {\n        labelCache.release(this);\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * @param {string} text Text.\n     * @param {string} textKey Text style key.\n     * @param {string} fillKey Fill style key.\n     * @param {string} strokeKey Stroke style key.\n     * @return {HTMLCanvasElement} Image.\n     */\n    Executor.prototype.getTextImage = function (text, textKey, fillKey, strokeKey) {\n        var label;\n        var key = strokeKey + textKey + text + fillKey + this.pixelRatio;\n        if (!labelCache.containsKey(key)) {\n            var strokeState = strokeKey ? this.strokeStates[strokeKey] : null;\n            var fillState = fillKey ? this.fillStates[fillKey] : null;\n            var textState = this.textStates[textKey];\n            var pixelRatio = this.pixelRatio;\n            var scale = textState.scale * pixelRatio;\n            var align = TEXT_ALIGN[textState.textAlign || defaultTextAlign];\n            var strokeWidth = strokeKey && strokeState.lineWidth ? strokeState.lineWidth : 0;\n            var lines = text.split('\\n');\n            var numLines = lines.length;\n            var widths = [];\n            var width = measureTextWidths(textState.font, lines, widths);\n            var lineHeight = measureTextHeight(textState.font);\n            var height = lineHeight * numLines;\n            var renderWidth = (width + strokeWidth);\n            var context = createCanvasContext2D(Math.ceil(renderWidth * scale), Math.ceil((height + strokeWidth) * scale));\n            label = context.canvas;\n            labelCache.set(key, label);\n            if (scale != 1) {\n                context.scale(scale, scale);\n            }\n            context.font = textState.font;\n            if (strokeKey) {\n                context.strokeStyle = strokeState.strokeStyle;\n                context.lineWidth = strokeWidth;\n                context.lineCap = /** @type {CanvasLineCap} */ (strokeState.lineCap);\n                context.lineJoin = /** @type {CanvasLineJoin} */ (strokeState.lineJoin);\n                context.miterLimit = strokeState.miterLimit;\n                if (context.setLineDash && strokeState.lineDash.length) {\n                    context.setLineDash(strokeState.lineDash);\n                    context.lineDashOffset = strokeState.lineDashOffset;\n                }\n            }\n            if (fillKey) {\n                context.fillStyle = fillState.fillStyle;\n            }\n            context.textBaseline = 'middle';\n            context.textAlign = 'center';\n            var leftRight = (0.5 - align);\n            var x = align * label.width / scale + leftRight * strokeWidth;\n            var i = void 0;\n            if (strokeKey) {\n                for (i = 0; i < numLines; ++i) {\n                    context.strokeText(lines[i], x + leftRight * widths[i], 0.5 * (strokeWidth + lineHeight) + i * lineHeight);\n                }\n            }\n            if (fillKey) {\n                for (i = 0; i < numLines; ++i) {\n                    context.fillText(lines[i], x + leftRight * widths[i], 0.5 * (strokeWidth + lineHeight) + i * lineHeight);\n                }\n            }\n        }\n        return labelCache.get(key, this);\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../coordinate.js\").Coordinate} p1 1st point of the background box.\n     * @param {import(\"../../coordinate.js\").Coordinate} p2 2nd point of the background box.\n     * @param {import(\"../../coordinate.js\").Coordinate} p3 3rd point of the background box.\n     * @param {import(\"../../coordinate.js\").Coordinate} p4 4th point of the background box.\n     * @param {Array<*>} fillInstruction Fill instruction.\n     * @param {Array<*>} strokeInstruction Stroke instruction.\n     */\n    Executor.prototype.replayTextBackground_ = function (context, p1, p2, p3, p4, fillInstruction, strokeInstruction) {\n        context.beginPath();\n        context.moveTo.apply(context, p1);\n        context.lineTo.apply(context, p2);\n        context.lineTo.apply(context, p3);\n        context.lineTo.apply(context, p4);\n        context.lineTo.apply(context, p1);\n        if (fillInstruction) {\n            this.alignFill_ = /** @type {boolean} */ (fillInstruction[2]);\n            this.fill_(context);\n        }\n        if (strokeInstruction) {\n            this.setStrokeStyle_(context, /** @type {Array<*>} */ (strokeInstruction));\n            context.stroke();\n        }\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @param {HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} image Image.\n     * @param {number} anchorX Anchor X.\n     * @param {number} anchorY Anchor Y.\n     * @param {import(\"../canvas.js\").DeclutterGroup} declutterGroup Declutter group.\n     * @param {number} height Height.\n     * @param {number} opacity Opacity.\n     * @param {number} originX Origin X.\n     * @param {number} originY Origin Y.\n     * @param {number} rotation Rotation.\n     * @param {number} scale Scale.\n     * @param {boolean} snapToPixel Snap to pixel.\n     * @param {number} width Width.\n     * @param {Array<number>} padding Padding.\n     * @param {Array<*>} fillInstruction Fill instruction.\n     * @param {Array<*>} strokeInstruction Stroke instruction.\n     */\n    Executor.prototype.replayImage_ = function (context, x, y, image, anchorX, anchorY, declutterGroup, height, opacity, originX, originY, rotation, scale, snapToPixel, width, padding, fillInstruction, strokeInstruction) {\n        var fillStroke = fillInstruction || strokeInstruction;\n        anchorX *= scale;\n        anchorY *= scale;\n        x -= anchorX;\n        y -= anchorY;\n        var w = (width + originX > image.width) ? image.width - originX : width;\n        var h = (height + originY > image.height) ? image.height - originY : height;\n        var boxW = padding[3] + w * scale + padding[1];\n        var boxH = padding[0] + h * scale + padding[2];\n        var boxX = x - padding[3];\n        var boxY = y - padding[0];\n        if (fillStroke || rotation !== 0) {\n            p1[0] = p4[0] = boxX;\n            p1[1] = p2[1] = boxY;\n            p2[0] = p3[0] = boxX + boxW;\n            p3[1] = p4[1] = boxY + boxH;\n        }\n        var transform = null;\n        if (rotation !== 0) {\n            var centerX = x + anchorX;\n            var centerY = y + anchorY;\n            transform = composeTransform(tmpTransform, centerX, centerY, 1, 1, rotation, -centerX, -centerY);\n            applyTransform(tmpTransform, p1);\n            applyTransform(tmpTransform, p2);\n            applyTransform(tmpTransform, p3);\n            applyTransform(tmpTransform, p4);\n            createOrUpdate(Math.min(p1[0], p2[0], p3[0], p4[0]), Math.min(p1[1], p2[1], p3[1], p4[1]), Math.max(p1[0], p2[0], p3[0], p4[0]), Math.max(p1[1], p2[1], p3[1], p4[1]), tmpExtent);\n        }\n        else {\n            createOrUpdate(boxX, boxY, boxX + boxW, boxY + boxH, tmpExtent);\n        }\n        var canvas = context.canvas;\n        var strokePadding = strokeInstruction ? (strokeInstruction[2] * scale / 2) : 0;\n        var intersects = tmpExtent[0] - strokePadding <= canvas.width && tmpExtent[2] + strokePadding >= 0 &&\n            tmpExtent[1] - strokePadding <= canvas.height && tmpExtent[3] + strokePadding >= 0;\n        if (snapToPixel) {\n            x = Math.round(x);\n            y = Math.round(y);\n        }\n        if (declutterGroup) {\n            if (!intersects && declutterGroup[4] == 1) {\n                return;\n            }\n            extend(declutterGroup, tmpExtent);\n            var declutterArgs = intersects ?\n                [context, transform ? transform.slice(0) : null, opacity, image, originX, originY, w, h, x, y, scale] :\n                null;\n            if (declutterArgs && fillStroke) {\n                declutterArgs.push(fillInstruction, strokeInstruction, p1, p2, p3, p4);\n            }\n            declutterGroup.push(declutterArgs);\n        }\n        else if (intersects) {\n            if (fillStroke) {\n                this.replayTextBackground_(context, p1, p2, p3, p4, \n                /** @type {Array<*>} */ (fillInstruction), \n                /** @type {Array<*>} */ (strokeInstruction));\n            }\n            drawImage(context, transform, opacity, image, originX, originY, w, h, x, y, scale);\n        }\n    };\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} context Context.\n     */\n    Executor.prototype.fill_ = function (context) {\n        if (this.alignFill_) {\n            var origin_1 = applyTransform(this.renderedTransform_, [0, 0]);\n            var repeatSize = 512 * this.pixelRatio;\n            context.save();\n            context.translate(origin_1[0] % repeatSize, origin_1[1] % repeatSize);\n            context.rotate(this.viewRotation_);\n        }\n        context.fill();\n        if (this.alignFill_) {\n            context.restore();\n        }\n    };\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {Array<*>} instruction Instruction.\n     */\n    Executor.prototype.setStrokeStyle_ = function (context, instruction) {\n        context.strokeStyle = /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n        context.lineWidth = /** @type {number} */ (instruction[2]);\n        context.lineCap = /** @type {CanvasLineCap} */ (instruction[3]);\n        context.lineJoin = /** @type {CanvasLineJoin} */ (instruction[4]);\n        context.miterLimit = /** @type {number} */ (instruction[5]);\n        if (context.setLineDash) {\n            context.lineDashOffset = /** @type {number} */ (instruction[7]);\n            context.setLineDash(/** @type {Array<number>} */ (instruction[6]));\n        }\n    };\n    /**\n     * @param {import(\"../canvas.js\").DeclutterGroup} declutterGroup Declutter group.\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     */\n    Executor.prototype.renderDeclutter_ = function (declutterGroup, feature) {\n        if (declutterGroup && declutterGroup.length > 5) {\n            var groupCount = declutterGroup[4];\n            if (groupCount == 1 || groupCount == declutterGroup.length - 5) {\n                /** @type {import(\"../../structs/RBush.js\").Entry} */\n                var box = {\n                    minX: /** @type {number} */ (declutterGroup[0]),\n                    minY: /** @type {number} */ (declutterGroup[1]),\n                    maxX: /** @type {number} */ (declutterGroup[2]),\n                    maxY: /** @type {number} */ (declutterGroup[3]),\n                    value: feature\n                };\n                if (!this.declutterTree.collides(box)) {\n                    this.declutterTree.insert(box);\n                    for (var j = 5, jj = declutterGroup.length; j < jj; ++j) {\n                        var declutterData = /** @type {Array} */ (declutterGroup[j]);\n                        if (declutterData) {\n                            if (declutterData.length > 11) {\n                                this.replayTextBackground_(declutterData[0], declutterData[13], declutterData[14], declutterData[15], declutterData[16], declutterData[11], declutterData[12]);\n                            }\n                            drawImage.apply(undefined, declutterData);\n                        }\n                    }\n                }\n                declutterGroup.length = 5;\n                createOrUpdateEmpty(declutterGroup);\n            }\n        }\n    };\n    /**\n     * @private\n     * @param {string} text The text to draw.\n     * @param {string} textKey The key of the text state.\n     * @param {string} strokeKey The key for the stroke state.\n     * @param {string} fillKey The key for the fill state.\n     * @return {{label: HTMLCanvasElement, anchorX: number, anchorY: number}} The text image and its anchor.\n     */\n    Executor.prototype.drawTextImageWithPointPlacement_ = function (text, textKey, strokeKey, fillKey) {\n        var textState = this.textStates[textKey];\n        var label = this.getTextImage(text, textKey, fillKey, strokeKey);\n        var strokeState = this.strokeStates[strokeKey];\n        var pixelRatio = this.pixelRatio;\n        var align = TEXT_ALIGN[textState.textAlign || defaultTextAlign];\n        var baseline = TEXT_ALIGN[textState.textBaseline || defaultTextBaseline];\n        var strokeWidth = strokeState && strokeState.lineWidth ? strokeState.lineWidth : 0;\n        var anchorX = align * label.width / pixelRatio + 2 * (0.5 - align) * strokeWidth;\n        var anchorY = baseline * label.height / pixelRatio + 2 * (0.5 - baseline) * strokeWidth;\n        return {\n            label: label,\n            anchorX: anchorX,\n            anchorY: anchorY\n        };\n    };\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     * @param {Object<string, boolean>} skippedFeaturesHash Ids of features\n     *     to skip.\n     * @param {Array<*>} instructions Instructions array.\n     * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n     * @param {function(import(\"../../Feature.js\").FeatureLike): T|undefined} featureCallback Feature callback.\n     * @param {import(\"../../extent.js\").Extent=} opt_hitExtent Only check features that intersect this\n     *     extent.\n     * @return {T|undefined} Callback result.\n     * @template T\n     */\n    Executor.prototype.execute_ = function (context, transform, skippedFeaturesHash, instructions, snapToPixel, featureCallback, opt_hitExtent) {\n        /** @type {Array<number>} */\n        var pixelCoordinates;\n        if (this.pixelCoordinates_ && equals(transform, this.renderedTransform_)) {\n            pixelCoordinates = this.pixelCoordinates_;\n        }\n        else {\n            if (!this.pixelCoordinates_) {\n                this.pixelCoordinates_ = [];\n            }\n            pixelCoordinates = transform2D(this.coordinates, 0, this.coordinates.length, 2, transform, this.pixelCoordinates_);\n            transformSetFromArray(this.renderedTransform_, transform);\n        }\n        var skipFeatures = !isEmpty(skippedFeaturesHash);\n        var i = 0; // instruction index\n        var ii = instructions.length; // end of instructions\n        var d = 0; // data index\n        var dd; // end of per-instruction data\n        var anchorX, anchorY, prevX, prevY, roundX, roundY, declutterGroup, image, text, textKey;\n        var strokeKey, fillKey;\n        var pendingFill = 0;\n        var pendingStroke = 0;\n        var lastFillInstruction = null;\n        var lastStrokeInstruction = null;\n        var coordinateCache = this.coordinateCache_;\n        var viewRotation = this.viewRotation_;\n        var state = /** @type {import(\"../../render.js\").State} */ ({\n            context: context,\n            pixelRatio: this.pixelRatio,\n            resolution: this.resolution,\n            rotation: viewRotation\n        });\n        // When the batch size gets too big, performance decreases. 200 is a good\n        // balance between batch size and number of fill/stroke instructions.\n        var batchSize = this.instructions != instructions || this.overlaps ? 0 : 200;\n        var /** @type {import(\"../../Feature.js\").FeatureLike} */ feature;\n        var x, y;\n        while (i < ii) {\n            var instruction = instructions[i];\n            var type = /** @type {CanvasInstruction} */ (instruction[0]);\n            switch (type) {\n                case CanvasInstruction.BEGIN_GEOMETRY:\n                    feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (instruction[1]);\n                    if ((skipFeatures && skippedFeaturesHash[getUid(feature)]) || !feature.getGeometry()) {\n                        i = /** @type {number} */ (instruction[2]);\n                    }\n                    else if (opt_hitExtent !== undefined && !intersects(opt_hitExtent, feature.getGeometry().getExtent())) {\n                        i = /** @type {number} */ (instruction[2]) + 1;\n                    }\n                    else {\n                        ++i;\n                    }\n                    break;\n                case CanvasInstruction.BEGIN_PATH:\n                    if (pendingFill > batchSize) {\n                        this.fill_(context);\n                        pendingFill = 0;\n                    }\n                    if (pendingStroke > batchSize) {\n                        context.stroke();\n                        pendingStroke = 0;\n                    }\n                    if (!pendingFill && !pendingStroke) {\n                        context.beginPath();\n                        prevX = prevY = NaN;\n                    }\n                    ++i;\n                    break;\n                case CanvasInstruction.CIRCLE:\n                    d = /** @type {number} */ (instruction[1]);\n                    var x1 = pixelCoordinates[d];\n                    var y1 = pixelCoordinates[d + 1];\n                    var x2 = pixelCoordinates[d + 2];\n                    var y2 = pixelCoordinates[d + 3];\n                    var dx = x2 - x1;\n                    var dy = y2 - y1;\n                    var r = Math.sqrt(dx * dx + dy * dy);\n                    context.moveTo(x1 + r, y1);\n                    context.arc(x1, y1, r, 0, 2 * Math.PI, true);\n                    ++i;\n                    break;\n                case CanvasInstruction.CLOSE_PATH:\n                    context.closePath();\n                    ++i;\n                    break;\n                case CanvasInstruction.CUSTOM:\n                    d = /** @type {number} */ (instruction[1]);\n                    dd = instruction[2];\n                    var geometry = /** @type {import(\"../../geom/SimpleGeometry.js\").default} */ (instruction[3]);\n                    var renderer = instruction[4];\n                    var fn = instruction.length == 6 ? instruction[5] : undefined;\n                    state.geometry = geometry;\n                    state.feature = feature;\n                    if (!(i in coordinateCache)) {\n                        coordinateCache[i] = [];\n                    }\n                    var coords = coordinateCache[i];\n                    if (fn) {\n                        fn(pixelCoordinates, d, dd, 2, coords);\n                    }\n                    else {\n                        coords[0] = pixelCoordinates[d];\n                        coords[1] = pixelCoordinates[d + 1];\n                        coords.length = 2;\n                    }\n                    renderer(coords, state);\n                    ++i;\n                    break;\n                case CanvasInstruction.DRAW_IMAGE:\n                    d = /** @type {number} */ (instruction[1]);\n                    dd = /** @type {number} */ (instruction[2]);\n                    image = /** @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} */ (instruction[3]);\n                    // Remaining arguments in DRAW_IMAGE are in alphabetical order\n                    anchorX = /** @type {number} */ (instruction[4]);\n                    anchorY = /** @type {number} */ (instruction[5]);\n                    declutterGroup = featureCallback ? null : /** @type {import(\"../canvas.js\").DeclutterGroup} */ (instruction[6]);\n                    var height = /** @type {number} */ (instruction[7]);\n                    var opacity = /** @type {number} */ (instruction[8]);\n                    var originX = /** @type {number} */ (instruction[9]);\n                    var originY = /** @type {number} */ (instruction[10]);\n                    var rotateWithView = /** @type {boolean} */ (instruction[11]);\n                    var rotation = /** @type {number} */ (instruction[12]);\n                    var scale = /** @type {number} */ (instruction[13]);\n                    var width = /** @type {number} */ (instruction[14]);\n                    if (!image && instruction.length >= 19) {\n                        // create label images\n                        text = /** @type {string} */ (instruction[18]);\n                        textKey = /** @type {string} */ (instruction[19]);\n                        strokeKey = /** @type {string} */ (instruction[20]);\n                        fillKey = /** @type {string} */ (instruction[21]);\n                        var labelWithAnchor = this.drawTextImageWithPointPlacement_(text, textKey, strokeKey, fillKey);\n                        image = instruction[3] = labelWithAnchor.label;\n                        var textOffsetX = /** @type {number} */ (instruction[22]);\n                        anchorX = instruction[4] = (labelWithAnchor.anchorX - textOffsetX) * this.pixelRatio;\n                        var textOffsetY = /** @type {number} */ (instruction[23]);\n                        anchorY = instruction[5] = (labelWithAnchor.anchorY - textOffsetY) * this.pixelRatio;\n                        height = instruction[7] = image.height;\n                        width = instruction[14] = image.width;\n                    }\n                    var geometryWidths = void 0;\n                    if (instruction.length > 24) {\n                        geometryWidths = /** @type {number} */ (instruction[24]);\n                    }\n                    var padding = void 0, backgroundFill = void 0, backgroundStroke = void 0;\n                    if (instruction.length > 16) {\n                        padding = /** @type {Array<number>} */ (instruction[15]);\n                        backgroundFill = /** @type {boolean} */ (instruction[16]);\n                        backgroundStroke = /** @type {boolean} */ (instruction[17]);\n                    }\n                    else {\n                        padding = defaultPadding;\n                        backgroundFill = backgroundStroke = false;\n                    }\n                    if (rotateWithView) {\n                        rotation += viewRotation;\n                    }\n                    var widthIndex = 0;\n                    for (; d < dd; d += 2) {\n                        if (geometryWidths && geometryWidths[widthIndex++] < width / this.pixelRatio) {\n                            continue;\n                        }\n                        this.replayImage_(context, pixelCoordinates[d], pixelCoordinates[d + 1], image, anchorX, anchorY, declutterGroup, height, opacity, originX, originY, rotation, scale, snapToPixel, width, padding, backgroundFill ? /** @type {Array<*>} */ (lastFillInstruction) : null, backgroundStroke ? /** @type {Array<*>} */ (lastStrokeInstruction) : null);\n                    }\n                    this.renderDeclutter_(declutterGroup, feature);\n                    ++i;\n                    break;\n                case CanvasInstruction.DRAW_CHARS:\n                    var begin = /** @type {number} */ (instruction[1]);\n                    var end = /** @type {number} */ (instruction[2]);\n                    var baseline = /** @type {number} */ (instruction[3]);\n                    declutterGroup = featureCallback ? null : /** @type {import(\"../canvas.js\").DeclutterGroup} */ (instruction[4]);\n                    var overflow = /** @type {number} */ (instruction[5]);\n                    fillKey = /** @type {string} */ (instruction[6]);\n                    var maxAngle = /** @type {number} */ (instruction[7]);\n                    var measurePixelRatio = /** @type {number} */ (instruction[8]);\n                    var offsetY = /** @type {number} */ (instruction[9]);\n                    strokeKey = /** @type {string} */ (instruction[10]);\n                    var strokeWidth = /** @type {number} */ (instruction[11]);\n                    text = /** @type {string} */ (instruction[12]);\n                    textKey = /** @type {string} */ (instruction[13]);\n                    var pixelRatioScale = /** @type {number} */ (instruction[14]);\n                    var textState = this.textStates[textKey];\n                    var font = textState.font;\n                    var textScale = textState.scale * measurePixelRatio;\n                    var cachedWidths = void 0;\n                    if (font in this.widths_) {\n                        cachedWidths = this.widths_[font];\n                    }\n                    else {\n                        cachedWidths = this.widths_[font] = {};\n                    }\n                    var pathLength = lineStringLength(pixelCoordinates, begin, end, 2);\n                    var textLength = textScale * measureAndCacheTextWidth(font, text, cachedWidths);\n                    if (overflow || textLength <= pathLength) {\n                        var textAlign = this.textStates[textKey].textAlign;\n                        var startM = (pathLength - textLength) * TEXT_ALIGN[textAlign];\n                        var parts = drawTextOnPath(pixelCoordinates, begin, end, 2, text, startM, maxAngle, textScale, measureAndCacheTextWidth, font, cachedWidths);\n                        if (parts) {\n                            var c = void 0, cc = void 0, chars = void 0, label = void 0, part = void 0;\n                            if (strokeKey) {\n                                for (c = 0, cc = parts.length; c < cc; ++c) {\n                                    part = parts[c]; // x, y, anchorX, rotation, chunk\n                                    chars = /** @type {string} */ (part[4]);\n                                    label = this.getTextImage(chars, textKey, '', strokeKey);\n                                    anchorX = /** @type {number} */ (part[2]) + strokeWidth;\n                                    anchorY = baseline * label.height + (0.5 - baseline) * 2 * strokeWidth - offsetY;\n                                    this.replayImage_(context, \n                                    /** @type {number} */ (part[0]), /** @type {number} */ (part[1]), label, anchorX, anchorY, declutterGroup, label.height, 1, 0, 0, \n                                    /** @type {number} */ (part[3]), pixelRatioScale, false, label.width, defaultPadding, null, null);\n                                }\n                            }\n                            if (fillKey) {\n                                for (c = 0, cc = parts.length; c < cc; ++c) {\n                                    part = parts[c]; // x, y, anchorX, rotation, chunk\n                                    chars = /** @type {string} */ (part[4]);\n                                    label = this.getTextImage(chars, textKey, fillKey, '');\n                                    anchorX = /** @type {number} */ (part[2]);\n                                    anchorY = baseline * label.height - offsetY;\n                                    this.replayImage_(context, \n                                    /** @type {number} */ (part[0]), /** @type {number} */ (part[1]), label, anchorX, anchorY, declutterGroup, label.height, 1, 0, 0, \n                                    /** @type {number} */ (part[3]), pixelRatioScale, false, label.width, defaultPadding, null, null);\n                                }\n                            }\n                        }\n                    }\n                    this.renderDeclutter_(declutterGroup, feature);\n                    ++i;\n                    break;\n                case CanvasInstruction.END_GEOMETRY:\n                    if (featureCallback !== undefined) {\n                        feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (instruction[1]);\n                        var result = featureCallback(feature);\n                        if (result) {\n                            return result;\n                        }\n                    }\n                    ++i;\n                    break;\n                case CanvasInstruction.FILL:\n                    if (batchSize) {\n                        pendingFill++;\n                    }\n                    else {\n                        this.fill_(context);\n                    }\n                    ++i;\n                    break;\n                case CanvasInstruction.MOVE_TO_LINE_TO:\n                    d = /** @type {number} */ (instruction[1]);\n                    dd = /** @type {number} */ (instruction[2]);\n                    x = pixelCoordinates[d];\n                    y = pixelCoordinates[d + 1];\n                    roundX = (x + 0.5) | 0;\n                    roundY = (y + 0.5) | 0;\n                    if (roundX !== prevX || roundY !== prevY) {\n                        context.moveTo(x, y);\n                        prevX = roundX;\n                        prevY = roundY;\n                    }\n                    for (d += 2; d < dd; d += 2) {\n                        x = pixelCoordinates[d];\n                        y = pixelCoordinates[d + 1];\n                        roundX = (x + 0.5) | 0;\n                        roundY = (y + 0.5) | 0;\n                        if (d == dd - 2 || roundX !== prevX || roundY !== prevY) {\n                            context.lineTo(x, y);\n                            prevX = roundX;\n                            prevY = roundY;\n                        }\n                    }\n                    ++i;\n                    break;\n                case CanvasInstruction.SET_FILL_STYLE:\n                    lastFillInstruction = instruction;\n                    this.alignFill_ = instruction[2];\n                    if (pendingFill) {\n                        this.fill_(context);\n                        pendingFill = 0;\n                        if (pendingStroke) {\n                            context.stroke();\n                            pendingStroke = 0;\n                        }\n                    }\n                    context.fillStyle = /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n                    ++i;\n                    break;\n                case CanvasInstruction.SET_STROKE_STYLE:\n                    lastStrokeInstruction = instruction;\n                    if (pendingStroke) {\n                        context.stroke();\n                        pendingStroke = 0;\n                    }\n                    this.setStrokeStyle_(context, /** @type {Array<*>} */ (instruction));\n                    ++i;\n                    break;\n                case CanvasInstruction.STROKE:\n                    if (batchSize) {\n                        pendingStroke++;\n                    }\n                    else {\n                        context.stroke();\n                    }\n                    ++i;\n                    break;\n                default:\n                    ++i; // consume the instruction anyway, to avoid an infinite loop\n                    break;\n            }\n        }\n        if (pendingFill) {\n            this.fill_(context);\n        }\n        if (pendingStroke) {\n            context.stroke();\n        }\n        return undefined;\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     * @param {number} viewRotation View rotation.\n     * @param {Object<string, boolean>} skippedFeaturesHash Ids of features\n     *     to skip.\n     * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n     */\n    Executor.prototype.execute = function (context, transform, viewRotation, skippedFeaturesHash, snapToPixel) {\n        this.viewRotation_ = viewRotation;\n        this.execute_(context, transform, skippedFeaturesHash, this.instructions, snapToPixel, undefined, undefined);\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     * @param {number} viewRotation View rotation.\n     * @param {Object<string, boolean>} skippedFeaturesHash Ids of features\n     *     to skip.\n     * @param {function(import(\"../../Feature.js\").FeatureLike): T=} opt_featureCallback\n     *     Feature callback.\n     * @param {import(\"../../extent.js\").Extent=} opt_hitExtent Only check features that intersect this\n     *     extent.\n     * @return {T|undefined} Callback result.\n     * @template T\n     */\n    Executor.prototype.executeHitDetection = function (context, transform, viewRotation, skippedFeaturesHash, opt_featureCallback, opt_hitExtent) {\n        this.viewRotation_ = viewRotation;\n        return this.execute_(context, transform, skippedFeaturesHash, this.hitDetectionInstructions, true, opt_featureCallback, opt_hitExtent);\n    };\n    return Executor;\n}(Disposable));\nexport default Executor;\n//# sourceMappingURL=Executor.js.map","/**\n * @module ol/render/canvas/ExecutorGroup\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { numberSafeCompareFunction } from '../../array.js';\nimport { createCanvasContext2D } from '../../dom.js';\nimport { buffer, createEmpty, extendCoordinate } from '../../extent.js';\nimport { transform2D } from '../../geom/flat/transform.js';\nimport { isEmpty } from '../../obj.js';\nimport BuilderType from './BuilderType.js';\nimport { create as createTransform, compose as composeTransform } from '../../transform.js';\nimport Executor from './Executor.js';\nimport Disposable from '../../Disposable.js';\n/**\n * @const\n * @type {Array<BuilderType>}\n */\nvar ORDER = [\n    BuilderType.POLYGON,\n    BuilderType.CIRCLE,\n    BuilderType.LINE_STRING,\n    BuilderType.IMAGE,\n    BuilderType.TEXT,\n    BuilderType.DEFAULT\n];\nvar ExecutorGroup = /** @class */ (function (_super) {\n    __extends(ExecutorGroup, _super);\n    /**\n     * @param {import(\"../../extent.js\").Extent} maxExtent Max extent for clipping. When a\n     * `maxExtent` was set on the Buillder for this executor group, the same `maxExtent`\n     * should be set here, unless the target context does not exceet that extent (which\n     * can be the case when rendering to tiles).\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {boolean} overlaps The executor group can have overlapping geometries.\n     * @param {?} declutterTree Declutter tree for declutter processing in postrender.\n     * @param {!Object<string, !Object<BuilderType, import(\"./Builder.js\").SerializableInstructions>>} allInstructions\n     * The serializable instructions.\n     * @param {number=} opt_renderBuffer Optional rendering buffer.\n     */\n    function ExecutorGroup(maxExtent, resolution, pixelRatio, overlaps, declutterTree, allInstructions, opt_renderBuffer) {\n        var _this = _super.call(this) || this;\n        /**\n         * Declutter tree.\n         * @private\n         */\n        _this.declutterTree_ = declutterTree;\n        /**\n         * @private\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        _this.maxExtent_ = maxExtent;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.overlaps_ = overlaps;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.pixelRatio_ = pixelRatio;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.resolution_ = resolution;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.renderBuffer_ = opt_renderBuffer;\n        /**\n         * @private\n         * @type {!Object<string, !Object<BuilderType, import(\"./Executor\").default>>}\n         */\n        _this.executorsByZIndex_ = {};\n        /**\n         * @private\n         * @type {CanvasRenderingContext2D}\n         */\n        _this.hitDetectionContext_ = createCanvasContext2D(1, 1);\n        /**\n         * @private\n         * @type {import(\"../../transform.js\").Transform}\n         */\n        _this.hitDetectionTransform_ = createTransform();\n        _this.createExecutors_(allInstructions);\n        return _this;\n    }\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     */\n    ExecutorGroup.prototype.clip = function (context, transform) {\n        var flatClipCoords = this.getClipCoords(transform);\n        context.beginPath();\n        context.moveTo(flatClipCoords[0], flatClipCoords[1]);\n        context.lineTo(flatClipCoords[2], flatClipCoords[3]);\n        context.lineTo(flatClipCoords[4], flatClipCoords[5]);\n        context.lineTo(flatClipCoords[6], flatClipCoords[7]);\n        context.clip();\n    };\n    /**\n     * Create executors and populate them using the provided instructions.\n     * @private\n     * @param {!Object<string, !Object<BuilderType, import(\"./Builder.js\").SerializableInstructions>>} allInstructions The serializable instructions\n     */\n    ExecutorGroup.prototype.createExecutors_ = function (allInstructions) {\n        for (var zIndex in allInstructions) {\n            var executors = this.executorsByZIndex_[zIndex];\n            if (executors === undefined) {\n                this.executorsByZIndex_[zIndex] = executors = {};\n            }\n            var instructionByZindex = allInstructions[zIndex];\n            for (var builderType in instructionByZindex) {\n                var instructions = instructionByZindex[builderType];\n                executors[builderType] = new Executor(this.resolution_, this.pixelRatio_, this.overlaps_, this.declutterTree_, instructions);\n            }\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    ExecutorGroup.prototype.disposeInternal = function () {\n        for (var z in this.executorsByZIndex_) {\n            var executors = this.executorsByZIndex_[z];\n            for (var key in executors) {\n                executors[key].disposeInternal();\n            }\n        }\n        var canvas = this.hitDetectionContext_.canvas;\n        canvas.width = canvas.height = 0;\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * @param {Array<BuilderType>} executors Executors.\n     * @return {boolean} Has executors of the provided types.\n     */\n    ExecutorGroup.prototype.hasExecutors = function (executors) {\n        for (var zIndex in this.executorsByZIndex_) {\n            var candidates = this.executorsByZIndex_[zIndex];\n            for (var i = 0, ii = executors.length; i < ii; ++i) {\n                if (executors[i] in candidates) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {number} resolution Resolution.\n     * @param {number} rotation Rotation.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @param {Object<string, boolean>} skippedFeaturesHash Ids of features to skip.\n     * @param {function(import(\"../../Feature.js\").FeatureLike): T} callback Feature callback.\n     * @param {Object<string, import(\"../canvas.js\").DeclutterGroup>} declutterReplays Declutter replays.\n     * @return {T|undefined} Callback result.\n     * @template T\n     */\n    ExecutorGroup.prototype.forEachFeatureAtCoordinate = function (coordinate, resolution, rotation, hitTolerance, skippedFeaturesHash, callback, declutterReplays) {\n        hitTolerance = Math.round(hitTolerance);\n        var contextSize = hitTolerance * 2 + 1;\n        var transform = composeTransform(this.hitDetectionTransform_, hitTolerance + 0.5, hitTolerance + 0.5, 1 / resolution, -1 / resolution, -rotation, -coordinate[0], -coordinate[1]);\n        var context = this.hitDetectionContext_;\n        if (context.canvas.width !== contextSize || context.canvas.height !== contextSize) {\n            context.canvas.width = contextSize;\n            context.canvas.height = contextSize;\n        }\n        else {\n            context.clearRect(0, 0, contextSize, contextSize);\n        }\n        /**\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        var hitExtent;\n        if (this.renderBuffer_ !== undefined) {\n            hitExtent = createEmpty();\n            extendCoordinate(hitExtent, coordinate);\n            buffer(hitExtent, resolution * (this.renderBuffer_ + hitTolerance), hitExtent);\n        }\n        var mask = getCircleArray(hitTolerance);\n        var declutteredFeatures;\n        if (this.declutterTree_) {\n            declutteredFeatures = this.declutterTree_.all().map(function (entry) {\n                return entry.value;\n            });\n        }\n        var builderType;\n        /**\n         * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n         * @return {?} Callback result.\n         */\n        function featureCallback(feature) {\n            var imageData = context.getImageData(0, 0, contextSize, contextSize).data;\n            for (var i_1 = 0; i_1 < contextSize; i_1++) {\n                for (var j_1 = 0; j_1 < contextSize; j_1++) {\n                    if (mask[i_1][j_1]) {\n                        if (imageData[(j_1 * contextSize + i_1) * 4 + 3] > 0) {\n                            var result_1 = void 0;\n                            if (!(declutteredFeatures && (builderType == BuilderType.IMAGE || builderType == BuilderType.TEXT)) ||\n                                declutteredFeatures.indexOf(feature) !== -1) {\n                                result_1 = callback(feature);\n                            }\n                            if (result_1) {\n                                return result_1;\n                            }\n                            else {\n                                context.clearRect(0, 0, contextSize, contextSize);\n                                return undefined;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        /** @type {Array<number>} */\n        var zs = Object.keys(this.executorsByZIndex_).map(Number);\n        zs.sort(numberSafeCompareFunction);\n        var i, j, executors, executor, result;\n        for (i = zs.length - 1; i >= 0; --i) {\n            var zIndexKey = zs[i].toString();\n            executors = this.executorsByZIndex_[zIndexKey];\n            for (j = ORDER.length - 1; j >= 0; --j) {\n                builderType = ORDER[j];\n                executor = executors[builderType];\n                if (executor !== undefined) {\n                    if (declutterReplays &&\n                        (builderType == BuilderType.IMAGE || builderType == BuilderType.TEXT)) {\n                        var declutter = declutterReplays[zIndexKey];\n                        if (!declutter) {\n                            declutterReplays[zIndexKey] = [executor, transform.slice(0)];\n                        }\n                        else {\n                            declutter.push(executor, transform.slice(0));\n                        }\n                    }\n                    else {\n                        result = executor.executeHitDetection(context, transform, rotation, skippedFeaturesHash, featureCallback, hitExtent);\n                        if (result) {\n                            return result;\n                        }\n                    }\n                }\n            }\n        }\n        return undefined;\n    };\n    /**\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     * @return {Array<number>} Clip coordinates.\n     */\n    ExecutorGroup.prototype.getClipCoords = function (transform) {\n        var maxExtent = this.maxExtent_;\n        if (!maxExtent) {\n            return null;\n        }\n        var minX = maxExtent[0];\n        var minY = maxExtent[1];\n        var maxX = maxExtent[2];\n        var maxY = maxExtent[3];\n        var flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];\n        transform2D(flatClipCoords, 0, 8, 2, transform, flatClipCoords);\n        return flatClipCoords;\n    };\n    /**\n     * @return {boolean} Is empty.\n     */\n    ExecutorGroup.prototype.isEmpty = function () {\n        return isEmpty(this.executorsByZIndex_);\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     * @param {number} viewRotation View rotation.\n     * @param {Object<string, boolean>} skippedFeaturesHash Ids of features to skip.\n     * @param {boolean} snapToPixel Snap point symbols and test to integer pixel.\n     * @param {Array<BuilderType>=} opt_builderTypes Ordered replay types to replay.\n     *     Default is {@link module:ol/render/replay~ORDER}\n     * @param {Object<string, import(\"../canvas.js\").DeclutterGroup>=} opt_declutterReplays Declutter replays.\n     */\n    ExecutorGroup.prototype.execute = function (context, transform, viewRotation, skippedFeaturesHash, snapToPixel, opt_builderTypes, opt_declutterReplays) {\n        /** @type {Array<number>} */\n        var zs = Object.keys(this.executorsByZIndex_).map(Number);\n        zs.sort(numberSafeCompareFunction);\n        // setup clipping so that the parts of over-simplified geometries are not\n        // visible outside the current extent when panning\n        if (this.maxExtent_) {\n            context.save();\n            this.clip(context, transform);\n        }\n        var builderTypes = opt_builderTypes ? opt_builderTypes : ORDER;\n        var i, ii, j, jj, replays, replay;\n        for (i = 0, ii = zs.length; i < ii; ++i) {\n            var zIndexKey = zs[i].toString();\n            replays = this.executorsByZIndex_[zIndexKey];\n            for (j = 0, jj = builderTypes.length; j < jj; ++j) {\n                var builderType = builderTypes[j];\n                replay = replays[builderType];\n                if (replay !== undefined) {\n                    if (opt_declutterReplays &&\n                        (builderType == BuilderType.IMAGE || builderType == BuilderType.TEXT)) {\n                        var declutter = opt_declutterReplays[zIndexKey];\n                        if (!declutter) {\n                            opt_declutterReplays[zIndexKey] = [replay, transform.slice(0)];\n                        }\n                        else {\n                            declutter.push(replay, transform.slice(0));\n                        }\n                    }\n                    else {\n                        replay.execute(context, transform, viewRotation, skippedFeaturesHash, snapToPixel);\n                    }\n                }\n            }\n        }\n        if (this.maxExtent_) {\n            context.restore();\n        }\n    };\n    return ExecutorGroup;\n}(Disposable));\n/**\n * This cache is used for storing calculated pixel circles for increasing performance.\n * It is a static property to allow each Replaygroup to access it.\n * @type {Object<number, Array<Array<(boolean|undefined)>>>}\n */\nvar circleArrayCache = {\n    0: [[true]]\n};\n/**\n * This method fills a row in the array from the given coordinate to the\n * middle with `true`.\n * @param {Array<Array<(boolean|undefined)>>} array The array that will be altered.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n */\nfunction fillCircleArrayRowToMiddle(array, x, y) {\n    var i;\n    var radius = Math.floor(array.length / 2);\n    if (x >= radius) {\n        for (i = radius; i < x; i++) {\n            array[i][y] = true;\n        }\n    }\n    else if (x < radius) {\n        for (i = x + 1; i < radius; i++) {\n            array[i][y] = true;\n        }\n    }\n}\n/**\n * This methods creates a circle inside a fitting array. Points inside the\n * circle are marked by true, points on the outside are undefined.\n * It uses the midpoint circle algorithm.\n * A cache is used to increase performance.\n * @param {number} radius Radius.\n * @returns {Array<Array<(boolean|undefined)>>} An array with marked circle points.\n */\nexport function getCircleArray(radius) {\n    if (circleArrayCache[radius] !== undefined) {\n        return circleArrayCache[radius];\n    }\n    var arraySize = radius * 2 + 1;\n    var arr = new Array(arraySize);\n    for (var i = 0; i < arraySize; i++) {\n        arr[i] = new Array(arraySize);\n    }\n    var x = radius;\n    var y = 0;\n    var error = 0;\n    while (x >= y) {\n        fillCircleArrayRowToMiddle(arr, radius + x, radius + y);\n        fillCircleArrayRowToMiddle(arr, radius + y, radius + x);\n        fillCircleArrayRowToMiddle(arr, radius - y, radius + x);\n        fillCircleArrayRowToMiddle(arr, radius - x, radius + y);\n        fillCircleArrayRowToMiddle(arr, radius - x, radius - y);\n        fillCircleArrayRowToMiddle(arr, radius - y, radius - x);\n        fillCircleArrayRowToMiddle(arr, radius + y, radius - x);\n        fillCircleArrayRowToMiddle(arr, radius + x, radius - y);\n        y++;\n        error += 1 + 2 * y;\n        if (2 * (error - x) + 1 > 0) {\n            x -= 1;\n            error += 1 - 2 * x;\n        }\n    }\n    circleArrayCache[radius] = arr;\n    return arr;\n}\n/**\n * @param {!Object<string, Array<*>>} declutterReplays Declutter replays.\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n */\nexport function replayDeclutter(declutterReplays, context, rotation, snapToPixel) {\n    var zs = Object.keys(declutterReplays).map(Number).sort(numberSafeCompareFunction);\n    var skippedFeatureUids = {};\n    for (var z = 0, zz = zs.length; z < zz; ++z) {\n        var executorData = declutterReplays[zs[z].toString()];\n        for (var i = 0, ii = executorData.length; i < ii;) {\n            var executor = executorData[i++];\n            var transform = executorData[i++];\n            executor.execute(context, transform, rotation, skippedFeatureUids, snapToPixel);\n        }\n    }\n}\nexport default ExecutorGroup;\n//# sourceMappingURL=ExecutorGroup.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/Layer\n */\nimport { abstract } from '../util.js';\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport { listen } from '../events.js';\nimport EventType from '../events/EventType.js';\nimport SourceState from '../source/State.js';\nvar LayerRenderer = /** @class */ (function (_super) {\n    __extends(LayerRenderer, _super);\n    /**\n     * @param {import(\"../layer/Layer.js\").default} layer Layer.\n     */\n    function LayerRenderer(layer) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {import(\"../layer/Layer.js\").default}\n         */\n        _this.layer_ = layer;\n        return _this;\n    }\n    /**\n     * Determine whether render should be called.\n     * @abstract\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {import(\"../layer/Layer.js\").State} layerState Layer state.\n     * @return {boolean} Layer is ready to be rendered.\n     */\n    LayerRenderer.prototype.prepareFrame = function (frameState, layerState) {\n        return abstract();\n    };\n    /**\n     * Render the layer.\n     * @abstract\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {import(\"../layer/Layer.js\").State} layerState Layer state.\n     * @return {HTMLElement} The rendered element.\n     */\n    LayerRenderer.prototype.renderFrame = function (frameState, layerState) {\n        return abstract();\n    };\n    /**\n     * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n     * @param {number} zoom Zoom level.\n     * @param {import(\"../Tile.js\").default} tile Tile.\n     */\n    LayerRenderer.prototype.loadedTileCallback = function (tiles, zoom, tile) {\n        if (!tiles[zoom]) {\n            tiles[zoom] = {};\n        }\n        tiles[zoom][tile.tileCoord.toString()] = tile;\n    };\n    /**\n     * Create a function that adds loaded tiles to the tile lookup.\n     * @param {import(\"../source/Tile.js\").default} source Tile source.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection of the tiles.\n     * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n     * @return {function(number, import(\"../TileRange.js\").default):boolean} A function that can be\n     *     called with a zoom level and a tile range to add loaded tiles to the lookup.\n     * @protected\n     */\n    LayerRenderer.prototype.createLoadedTileFinder = function (source, projection, tiles) {\n        return (\n        /**\n         * @param {number} zoom Zoom level.\n         * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n         * @return {boolean} The tile range is fully loaded.\n         * @this {LayerRenderer}\n         */\n        function (zoom, tileRange) {\n            var callback = this.loadedTileCallback.bind(this, tiles, zoom);\n            return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n        }).bind(this);\n    };\n    /**\n     * @abstract\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @param {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default): T} callback Feature callback.\n     * @return {T|void} Callback result.\n     * @template T\n     */\n    LayerRenderer.prototype.forEachFeatureAtCoordinate = function (coordinate, frameState, hitTolerance, callback) { };\n    /**\n     * @abstract\n     * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @return {Uint8ClampedArray|Uint8Array} The result.  If there is no data at the pixel\n     *    location, null will be returned.  If there is data, but pixel values cannot be\n     *    returned, and empty array will be returned.\n     */\n    LayerRenderer.prototype.getDataAtPixel = function (pixel, frameState, hitTolerance) {\n        return abstract();\n    };\n    /**\n     * @return {import(\"../layer/Layer.js\").default} Layer.\n     */\n    LayerRenderer.prototype.getLayer = function () {\n        return this.layer_;\n    };\n    /**\n     * Handle changes in image state.\n     * @param {import(\"../events/Event.js\").default} event Image change event.\n     * @private\n     */\n    LayerRenderer.prototype.handleImageChange_ = function (event) {\n        var image = /** @type {import(\"../Image.js\").default} */ (event.target);\n        if (image.getState() === ImageState.LOADED) {\n            this.renderIfReadyAndVisible();\n        }\n    };\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @return {boolean} Is there a feature at the given coordinate?\n     */\n    LayerRenderer.prototype.hasFeatureAtCoordinate = function (coordinate, frameState) {\n        return false;\n    };\n    /**\n     * Load the image if not already loaded, and register the image change\n     * listener if needed.\n     * @param {import(\"../ImageBase.js\").default} image Image.\n     * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n     * @protected\n     */\n    LayerRenderer.prototype.loadImage = function (image) {\n        var imageState = image.getState();\n        if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n            listen(image, EventType.CHANGE, this.handleImageChange_, this);\n        }\n        if (imageState == ImageState.IDLE) {\n            image.load();\n            imageState = image.getState();\n        }\n        return imageState == ImageState.LOADED;\n    };\n    /**\n     * @protected\n     */\n    LayerRenderer.prototype.renderIfReadyAndVisible = function () {\n        var layer = this.getLayer();\n        if (layer.getVisible() && layer.getSourceState() == SourceState.READY) {\n            layer.changed();\n        }\n    };\n    return LayerRenderer;\n}(Observable));\nexport default LayerRenderer;\n//# sourceMappingURL=Layer.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/canvas/Layer\n */\nimport { getBottomLeft, getBottomRight, getTopLeft, getTopRight } from '../../extent.js';\nimport { createCanvasContext2D } from '../../dom.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport { rotateAtOffset } from '../../render/canvas.js';\nimport LayerRenderer from '../Layer.js';\nimport { create as createTransform, apply as applyTransform, compose as composeTransform } from '../../transform.js';\n/**\n * @abstract\n */\nvar CanvasLayerRenderer = /** @class */ (function (_super) {\n    __extends(CanvasLayerRenderer, _super);\n    /**\n     * @param {import(\"../../layer/Layer.js\").default} layer Layer.\n     */\n    function CanvasLayerRenderer(layer) {\n        var _this = _super.call(this, layer) || this;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.renderedResolution;\n        /**\n         * A temporary transform.  The values in this transform should only be used in a\n         * function that sets the values.\n         * @private\n         * @type {import(\"../../transform.js\").Transform}\n         */\n        _this.tempTransform_ = createTransform();\n        /**\n         * The transform for rendered pixels to viewport CSS pixels.  This transform must\n         * be set when rendering a frame and may be used by other functions after rendering.\n         * @private\n         * @type {import(\"../../transform.js\").Transform}\n         */\n        _this.pixelTransform_ = createTransform();\n        /**\n         * The transform for viewport CSS pixels to rendered pixels.  This transform must\n         * be set when rendering a frame and may be used by other functions after rendering.\n         * @private\n         * @type {import(\"../../transform.js\").Transform}\n         */\n        _this.inversePixelTransform_ = createTransform();\n        /**\n         * @protected\n         * @type {CanvasRenderingContext2D}\n         */\n        _this.context = createCanvasContext2D();\n        var canvas = _this.context.canvas;\n        canvas.style.position = 'absolute';\n        canvas.style.transformOrigin = 'top left';\n        canvas.className = _this.getLayer().getClassName();\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    CanvasLayerRenderer.prototype.disposeInternal = function () {\n        this.context.canvas.width = this.context.canvas.height = 0;\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n     * @protected\n     */\n    CanvasLayerRenderer.prototype.clip = function (context, frameState, extent) {\n        var pixelRatio = frameState.pixelRatio;\n        var halfWidth = (frameState.size[0] * pixelRatio) / 2;\n        var halfHeight = (frameState.size[1] * pixelRatio) / 2;\n        var rotation = frameState.viewState.rotation;\n        var topLeft = getTopLeft(extent);\n        var topRight = getTopRight(extent);\n        var bottomRight = getBottomRight(extent);\n        var bottomLeft = getBottomLeft(extent);\n        applyTransform(frameState.coordinateToPixelTransform, topLeft);\n        applyTransform(frameState.coordinateToPixelTransform, topRight);\n        applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n        applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n        context.save();\n        rotateAtOffset(context, -rotation, halfWidth, halfHeight);\n        context.beginPath();\n        context.moveTo(topLeft[0] * pixelRatio, topLeft[1] * pixelRatio);\n        context.lineTo(topRight[0] * pixelRatio, topRight[1] * pixelRatio);\n        context.lineTo(bottomRight[0] * pixelRatio, bottomRight[1] * pixelRatio);\n        context.lineTo(bottomLeft[0] * pixelRatio, bottomLeft[1] * pixelRatio);\n        context.clip();\n        rotateAtOffset(context, rotation, halfWidth, halfHeight);\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n     * @protected\n     */\n    CanvasLayerRenderer.prototype.clipUnrotated = function (context, frameState, extent) {\n        var topLeft = getTopLeft(extent);\n        var topRight = getTopRight(extent);\n        var bottomRight = getBottomRight(extent);\n        var bottomLeft = getBottomLeft(extent);\n        applyTransform(frameState.coordinateToPixelTransform, topLeft);\n        applyTransform(frameState.coordinateToPixelTransform, topRight);\n        applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n        applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n        var inverted = this.inversePixelTransform_;\n        applyTransform(inverted, topLeft);\n        applyTransform(inverted, topRight);\n        applyTransform(inverted, bottomRight);\n        applyTransform(inverted, bottomLeft);\n        context.save();\n        context.beginPath();\n        context.moveTo(Math.round(topLeft[0]), Math.round(topLeft[1]));\n        context.lineTo(Math.round(topRight[0]), Math.round(topRight[1]));\n        context.lineTo(Math.round(bottomRight[0]), Math.round(bottomRight[1]));\n        context.lineTo(Math.round(bottomLeft[0]), Math.round(bottomLeft[1]));\n        context.clip();\n    };\n    /**\n     * @param {import(\"../../render/EventType.js\").default} type Event type.\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @private\n     */\n    CanvasLayerRenderer.prototype.dispatchRenderEvent_ = function (type, context, frameState) {\n        var layer = this.getLayer();\n        if (layer.hasListener(type)) {\n            var event_1 = new RenderEvent(type, this.inversePixelTransform_, frameState, context, null);\n            layer.dispatchEvent(event_1);\n        }\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @protected\n     */\n    CanvasLayerRenderer.prototype.preRender = function (context, frameState) {\n        this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @protected\n     */\n    CanvasLayerRenderer.prototype.postRender = function (context, frameState) {\n        this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\n    };\n    /**\n     * Creates a transform for rendering to an element that will be rotated after rendering.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {number} width Width of the rendered element (in pixels).\n     * @param {number} height Height of the rendered element (in pixels).\n     * @param {number} offsetX Offset on the x-axis in view coordinates.\n     * @protected\n     * @return {!import(\"../../transform.js\").Transform} Transform.\n     */\n    CanvasLayerRenderer.prototype.getRenderTransform = function (frameState, width, height, offsetX) {\n        var viewState = frameState.viewState;\n        var pixelRatio = frameState.pixelRatio;\n        var dx1 = width / 2;\n        var dy1 = height / 2;\n        var sx = pixelRatio / viewState.resolution;\n        var sy = -sx;\n        var dx2 = -viewState.center[0] + offsetX;\n        var dy2 = -viewState.center[1];\n        return composeTransform(this.tempTransform_, dx1, dy1, sx, sy, -viewState.rotation, dx2, dy2);\n    };\n    /**\n     * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState FrameState.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @return {Uint8ClampedArray|Uint8Array} The result.  If there is no data at the pixel\n     *    location, null will be returned.  If there is data, but pixel values cannot be\n     *    returned, and empty array will be returned.\n     */\n    CanvasLayerRenderer.prototype.getDataAtPixel = function (pixel, frameState, hitTolerance) {\n        var renderPixel = applyTransform(this.inversePixelTransform_, pixel.slice());\n        var context = this.context;\n        var data;\n        try {\n            data = context.getImageData(Math.round(renderPixel[0]), Math.round(renderPixel[1]), 1, 1).data;\n        }\n        catch (err) {\n            if (err.name === 'SecurityError') {\n                // tainted canvas, we assume there is data at the given pixel (although there might not be)\n                return new Uint8Array();\n            }\n            return data;\n        }\n        if (data[3] === 0) {\n            return null;\n        }\n        return data;\n    };\n    return CanvasLayerRenderer;\n}(LayerRenderer));\nexport default CanvasLayerRenderer;\n//# sourceMappingURL=Layer.js.map","/**\n * @module ol/renderer/vector\n */\nimport { getUid } from '../util.js';\nimport ImageState from '../ImageState.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport BuilderType from '../render/canvas/BuilderType.js';\n/**\n * Tolerance for geometry simplification in device pixels.\n * @type {number}\n */\nvar SIMPLIFY_TOLERANCE = 0.5;\n/**\n * @const\n * @type {Object<import(\"../geom/GeometryType.js\").default,\n *                function(import(\"../render/canvas/BuilderGroup.js\").default, import(\"../geom/Geometry.js\").default,\n *                         import(\"../style/Style.js\").default, Object): void>}\n */\nvar GEOMETRY_RENDERERS = {\n    'Point': renderPointGeometry,\n    'LineString': renderLineStringGeometry,\n    'Polygon': renderPolygonGeometry,\n    'MultiPoint': renderMultiPointGeometry,\n    'MultiLineString': renderMultiLineStringGeometry,\n    'MultiPolygon': renderMultiPolygonGeometry,\n    'GeometryCollection': renderGeometryCollectionGeometry,\n    'Circle': renderCircleGeometry\n};\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature1 Feature 1.\n * @param {import(\"../Feature.js\").FeatureLike} feature2 Feature 2.\n * @return {number} Order.\n */\nexport function defaultOrder(feature1, feature2) {\n    return parseInt(getUid(feature1), 10) - parseInt(getUid(feature2), 10);\n}\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Squared pixel tolerance.\n */\nexport function getSquaredTolerance(resolution, pixelRatio) {\n    var tolerance = getTolerance(resolution, pixelRatio);\n    return tolerance * tolerance;\n}\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Pixel tolerance.\n */\nexport function getTolerance(resolution, pixelRatio) {\n    return SIMPLIFY_TOLERANCE * resolution / pixelRatio;\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n */\nfunction renderCircleGeometry(builderGroup, geometry, style, feature) {\n    var fillStyle = style.getFill();\n    var strokeStyle = style.getStroke();\n    if (fillStyle || strokeStyle) {\n        var circleReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.CIRCLE);\n        circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n        circleReplay.drawCircle(geometry, feature);\n    }\n    var textStyle = style.getText();\n    if (textStyle) {\n        var textReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.TEXT);\n        textReplay.setTextStyle(textStyle, builderGroup.addDeclutter(false));\n        textReplay.drawText(geometry, feature);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {function(this: T, import(\"../events/Event.js\").default): void} listener Listener function.\n * @param {T} thisArg Value to use as `this` when executing `listener`.\n * @return {boolean} `true` if style is loading.\n * @template T\n */\nexport function renderFeature(replayGroup, feature, style, squaredTolerance, listener, thisArg) {\n    var loading = false;\n    var imageStyle = style.getImage();\n    if (imageStyle) {\n        var imageState = imageStyle.getImageState();\n        if (imageState == ImageState.LOADED || imageState == ImageState.ERROR) {\n            imageStyle.unlistenImageChange(listener, thisArg);\n        }\n        else {\n            if (imageState == ImageState.IDLE) {\n                imageStyle.load();\n            }\n            imageState = imageStyle.getImageState();\n            imageStyle.listenImageChange(listener, thisArg);\n            loading = true;\n        }\n    }\n    renderFeatureInternal(replayGroup, feature, style, squaredTolerance);\n    return loading;\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n */\nfunction renderFeatureInternal(replayGroup, feature, style, squaredTolerance) {\n    var geometry = style.getGeometryFunction()(feature);\n    if (!geometry) {\n        return;\n    }\n    var simplifiedGeometry = geometry.getSimplifiedGeometry(squaredTolerance);\n    var renderer = style.getRenderer();\n    if (renderer) {\n        renderGeometry(replayGroup, simplifiedGeometry, style, feature);\n    }\n    else {\n        var geometryRenderer = GEOMETRY_RENDERERS[simplifiedGeometry.getType()];\n        geometryRenderer(replayGroup, simplifiedGeometry, style, feature);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderGeometry(replayGroup, geometry, style, feature) {\n    if (geometry.getType() == GeometryType.GEOMETRY_COLLECTION) {\n        var geometries = /** @type {import(\"../geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            renderGeometry(replayGroup, geometries[i], style, feature);\n        }\n        return;\n    }\n    var replay = replayGroup.getBuilder(style.getZIndex(), BuilderType.DEFAULT);\n    replay.drawCustom(/** @type {import(\"../geom/SimpleGeometry.js\").default} */ (geometry), feature, style.getRenderer());\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n */\nfunction renderGeometryCollectionGeometry(replayGroup, geometry, style, feature) {\n    var geometries = geometry.getGeometriesArray();\n    var i, ii;\n    for (i = 0, ii = geometries.length; i < ii; ++i) {\n        var geometryRenderer = GEOMETRY_RENDERERS[geometries[i].getType()];\n        geometryRenderer(replayGroup, geometries[i], style, feature);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/LineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderLineStringGeometry(builderGroup, geometry, style, feature) {\n    var strokeStyle = style.getStroke();\n    if (strokeStyle) {\n        var lineStringReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.LINE_STRING);\n        lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n        lineStringReplay.drawLineString(geometry, feature);\n    }\n    var textStyle = style.getText();\n    if (textStyle) {\n        var textReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.TEXT);\n        textReplay.setTextStyle(textStyle, builderGroup.addDeclutter(false));\n        textReplay.drawText(geometry, feature);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderMultiLineStringGeometry(builderGroup, geometry, style, feature) {\n    var strokeStyle = style.getStroke();\n    if (strokeStyle) {\n        var lineStringReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.LINE_STRING);\n        lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n        lineStringReplay.drawMultiLineString(geometry, feature);\n    }\n    var textStyle = style.getText();\n    if (textStyle) {\n        var textReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.TEXT);\n        textReplay.setTextStyle(textStyle, builderGroup.addDeclutter(false));\n        textReplay.drawText(geometry, feature);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n */\nfunction renderMultiPolygonGeometry(builderGroup, geometry, style, feature) {\n    var fillStyle = style.getFill();\n    var strokeStyle = style.getStroke();\n    if (strokeStyle || fillStyle) {\n        var polygonReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.POLYGON);\n        polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n        polygonReplay.drawMultiPolygon(geometry, feature);\n    }\n    var textStyle = style.getText();\n    if (textStyle) {\n        var textReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.TEXT);\n        textReplay.setTextStyle(textStyle, builderGroup.addDeclutter(false));\n        textReplay.drawText(geometry, feature);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Point.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderPointGeometry(builderGroup, geometry, style, feature) {\n    var imageStyle = style.getImage();\n    if (imageStyle) {\n        if (imageStyle.getImageState() != ImageState.LOADED) {\n            return;\n        }\n        var imageReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.IMAGE);\n        imageReplay.setImageStyle(imageStyle, builderGroup.addDeclutter(false));\n        imageReplay.drawPoint(geometry, feature);\n    }\n    var textStyle = style.getText();\n    if (textStyle) {\n        var textReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.TEXT);\n        textReplay.setTextStyle(textStyle, builderGroup.addDeclutter(!!imageStyle));\n        textReplay.drawText(geometry, feature);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderMultiPointGeometry(builderGroup, geometry, style, feature) {\n    var imageStyle = style.getImage();\n    if (imageStyle) {\n        if (imageStyle.getImageState() != ImageState.LOADED) {\n            return;\n        }\n        var imageReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.IMAGE);\n        imageReplay.setImageStyle(imageStyle, builderGroup.addDeclutter(false));\n        imageReplay.drawMultiPoint(geometry, feature);\n    }\n    var textStyle = style.getText();\n    if (textStyle) {\n        var textReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.TEXT);\n        textReplay.setTextStyle(textStyle, builderGroup.addDeclutter(!!imageStyle));\n        textReplay.drawText(geometry, feature);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Polygon.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderPolygonGeometry(builderGroup, geometry, style, feature) {\n    var fillStyle = style.getFill();\n    var strokeStyle = style.getStroke();\n    if (fillStyle || strokeStyle) {\n        var polygonReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.POLYGON);\n        polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n        polygonReplay.drawPolygon(geometry, feature);\n    }\n    var textStyle = style.getText();\n    if (textStyle) {\n        var textReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.TEXT);\n        textReplay.setTextStyle(textStyle, builderGroup.addDeclutter(false));\n        textReplay.drawText(geometry, feature);\n    }\n}\n//# sourceMappingURL=vector.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/canvas/VectorLayer\n */\nimport { getUid } from '../../util.js';\nimport ViewHint from '../../ViewHint.js';\nimport { listen, unlisten } from '../../events.js';\nimport EventType from '../../events/EventType.js';\nimport rbush from 'rbush';\nimport { buffer, createEmpty, containsExtent, getWidth } from '../../extent.js';\nimport { labelCache } from '../../render/canvas.js';\nimport CanvasBuilderGroup from '../../render/canvas/BuilderGroup.js';\nimport ExecutorGroup from '../../render/canvas/ExecutorGroup.js';\nimport CanvasLayerRenderer from './Layer.js';\nimport { defaultOrder as defaultRenderOrder, getTolerance as getRenderTolerance, getSquaredTolerance as getSquaredRenderTolerance, renderFeature } from '../vector.js';\nimport { toString as transformToString, makeScale, makeInverse } from '../../transform.js';\n/**\n * @classdesc\n * Canvas renderer for vector layers.\n * @api\n */\nvar CanvasVectorLayerRenderer = /** @class */ (function (_super) {\n    __extends(CanvasVectorLayerRenderer, _super);\n    /**\n     * @param {import(\"../../layer/Vector.js\").default} vectorLayer Vector layer.\n     */\n    function CanvasVectorLayerRenderer(vectorLayer) {\n        var _this = _super.call(this, vectorLayer) || this;\n        /**\n         * Declutter tree.\n         * @private\n         */\n        _this.declutterTree_ = vectorLayer.getDeclutter() ? rbush(9, undefined) : null;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.dirty_ = false;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.renderedRevision_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.renderedResolution_ = NaN;\n        /**\n         * @private\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        _this.renderedExtent_ = createEmpty();\n        /**\n         * @private\n         * @type {function(import(\"../../Feature.js\").default, import(\"../../Feature.js\").default): number|null}\n         */\n        _this.renderedRenderOrder_ = null;\n        /**\n         * @private\n         * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n         */\n        _this.replayGroup_ = null;\n        /**\n         * A new replay group had to be created by `prepareFrame()`\n         * @type {boolean}\n         */\n        _this.replayGroupChanged = true;\n        listen(labelCache, EventType.CLEAR, _this.handleFontsChanged_, _this);\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    CanvasVectorLayerRenderer.prototype.disposeInternal = function () {\n        unlisten(labelCache, EventType.CLEAR, this.handleFontsChanged_, this);\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasVectorLayerRenderer.prototype.renderFrame = function (frameState, layerState) {\n        var context = this.context;\n        var canvas = context.canvas;\n        var replayGroup = this.replayGroup_;\n        if (!replayGroup || replayGroup.isEmpty()) {\n            if (canvas.width > 0) {\n                canvas.width = 0;\n            }\n            return canvas;\n        }\n        var pixelRatio = frameState.pixelRatio;\n        // set forward and inverse pixel transforms\n        makeScale(this.pixelTransform_, 1 / pixelRatio, 1 / pixelRatio);\n        makeInverse(this.inversePixelTransform_, this.pixelTransform_);\n        // resize and clear\n        var width = Math.round(frameState.size[0] * pixelRatio);\n        var height = Math.round(frameState.size[1] * pixelRatio);\n        if (canvas.width != width || canvas.height != height) {\n            canvas.width = width;\n            canvas.height = height;\n            var canvasTransform = transformToString(this.pixelTransform_);\n            if (canvas.style.transform !== canvasTransform) {\n                canvas.style.transform = canvasTransform;\n            }\n        }\n        else {\n            context.clearRect(0, 0, width, height);\n        }\n        this.preRender(context, frameState);\n        var extent = frameState.extent;\n        var viewState = frameState.viewState;\n        var projection = viewState.projection;\n        var rotation = viewState.rotation;\n        var projectionExtent = projection.getExtent();\n        var vectorSource = this.getLayer().getSource();\n        // clipped rendering if layer extent is set\n        var clipExtent = layerState.extent;\n        var clipped = clipExtent !== undefined;\n        if (clipped) {\n            this.clip(context, frameState, clipExtent);\n        }\n        if (this.declutterTree_) {\n            this.declutterTree_.clear();\n        }\n        var viewHints = frameState.viewHints;\n        var snapToPixel = !(viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]);\n        var transform = this.getRenderTransform(frameState, width, height, 0);\n        var skippedFeatureUids = layerState.managed ? frameState.skippedFeatureUids : {};\n        replayGroup.execute(context, transform, rotation, skippedFeatureUids, snapToPixel);\n        if (vectorSource.getWrapX() && projection.canWrapX() && !containsExtent(projectionExtent, extent)) {\n            var startX = extent[0];\n            var worldWidth = getWidth(projectionExtent);\n            var world = 0;\n            var offsetX = void 0;\n            while (startX < projectionExtent[0]) {\n                --world;\n                offsetX = worldWidth * world;\n                var transform_1 = this.getRenderTransform(frameState, width, height, offsetX);\n                replayGroup.execute(context, transform_1, rotation, skippedFeatureUids, snapToPixel);\n                startX += worldWidth;\n            }\n            world = 0;\n            startX = extent[2];\n            while (startX > projectionExtent[2]) {\n                ++world;\n                offsetX = worldWidth * world;\n                var transform_2 = this.getRenderTransform(frameState, width, height, offsetX);\n                replayGroup.execute(context, transform_2, rotation, skippedFeatureUids, snapToPixel);\n                startX -= worldWidth;\n            }\n        }\n        if (clipped) {\n            context.restore();\n        }\n        this.postRender(context, frameState);\n        var opacity = layerState.opacity;\n        if (opacity !== parseFloat(canvas.style.opacity)) {\n            canvas.style.opacity = opacity;\n        }\n        return canvas;\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasVectorLayerRenderer.prototype.forEachFeatureAtCoordinate = function (coordinate, frameState, hitTolerance, callback, thisArg) {\n        if (!this.replayGroup_) {\n            return undefined;\n        }\n        else {\n            var resolution = frameState.viewState.resolution;\n            var rotation = frameState.viewState.rotation;\n            var layer_1 = this.getLayer();\n            /** @type {!Object<string, boolean>} */\n            var features_1 = {};\n            var result = this.replayGroup_.forEachFeatureAtCoordinate(coordinate, resolution, rotation, hitTolerance, {}, \n            /**\n             * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n             * @return {?} Callback result.\n             */\n            function (feature) {\n                var key = getUid(feature);\n                if (!(key in features_1)) {\n                    features_1[key] = true;\n                    return callback.call(thisArg, feature, layer_1);\n                }\n            }, null);\n            return result;\n        }\n    };\n    /**\n     * @param {import(\"../../events/Event.js\").default} event Event.\n     */\n    CanvasVectorLayerRenderer.prototype.handleFontsChanged_ = function (event) {\n        var layer = this.getLayer();\n        if (layer.getVisible() && this.replayGroup_) {\n            layer.changed();\n        }\n    };\n    /**\n     * Handle changes in image style state.\n     * @param {import(\"../../events/Event.js\").default} event Image style change event.\n     * @private\n     */\n    CanvasVectorLayerRenderer.prototype.handleStyleImageChange_ = function (event) {\n        this.renderIfReadyAndVisible();\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasVectorLayerRenderer.prototype.prepareFrame = function (frameState, layerState) {\n        var vectorLayer = /** @type {import(\"../../layer/Vector.js\").default} */ (this.getLayer());\n        var vectorSource = vectorLayer.getSource();\n        var animating = frameState.viewHints[ViewHint.ANIMATING];\n        var interacting = frameState.viewHints[ViewHint.INTERACTING];\n        var updateWhileAnimating = vectorLayer.getUpdateWhileAnimating();\n        var updateWhileInteracting = vectorLayer.getUpdateWhileInteracting();\n        if (!this.dirty_ && (!updateWhileAnimating && animating) ||\n            (!updateWhileInteracting && interacting)) {\n            return true;\n        }\n        var frameStateExtent = frameState.extent;\n        var viewState = frameState.viewState;\n        var projection = viewState.projection;\n        var resolution = viewState.resolution;\n        var pixelRatio = frameState.pixelRatio;\n        var vectorLayerRevision = vectorLayer.getRevision();\n        var vectorLayerRenderBuffer = vectorLayer.getRenderBuffer();\n        var vectorLayerRenderOrder = vectorLayer.getRenderOrder();\n        if (vectorLayerRenderOrder === undefined) {\n            vectorLayerRenderOrder = defaultRenderOrder;\n        }\n        var extent = buffer(frameStateExtent, vectorLayerRenderBuffer * resolution);\n        var projectionExtent = viewState.projection.getExtent();\n        if (vectorSource.getWrapX() && viewState.projection.canWrapX() &&\n            !containsExtent(projectionExtent, frameState.extent)) {\n            // For the replay group, we need an extent that intersects the real world\n            // (-180° to +180°). To support geometries in a coordinate range from -540°\n            // to +540°, we add at least 1 world width on each side of the projection\n            // extent. If the viewport is wider than the world, we need to add half of\n            // the viewport width to make sure we cover the whole viewport.\n            var worldWidth = getWidth(projectionExtent);\n            var gutter = Math.max(getWidth(extent) / 2, worldWidth);\n            extent[0] = projectionExtent[0] - gutter;\n            extent[2] = projectionExtent[2] + gutter;\n        }\n        if (!this.dirty_ &&\n            this.renderedResolution_ == resolution &&\n            this.renderedRevision_ == vectorLayerRevision &&\n            this.renderedRenderOrder_ == vectorLayerRenderOrder &&\n            containsExtent(this.renderedExtent_, extent)) {\n            this.replayGroupChanged = false;\n            return true;\n        }\n        if (this.replayGroup_) {\n            this.replayGroup_.dispose();\n        }\n        this.replayGroup_ = null;\n        this.dirty_ = false;\n        var replayGroup = new CanvasBuilderGroup(getRenderTolerance(resolution, pixelRatio), extent, resolution, pixelRatio, !!this.declutterTree_);\n        vectorSource.loadFeatures(extent, resolution, projection);\n        /**\n         * @param {import(\"../../Feature.js\").default} feature Feature.\n         * @this {CanvasVectorLayerRenderer}\n         */\n        var render = function (feature) {\n            var styles;\n            var styleFunction = feature.getStyleFunction() || vectorLayer.getStyleFunction();\n            if (styleFunction) {\n                styles = styleFunction(feature, resolution);\n            }\n            if (styles) {\n                var dirty = this.renderFeature(feature, resolution, pixelRatio, styles, replayGroup);\n                this.dirty_ = this.dirty_ || dirty;\n            }\n        }.bind(this);\n        if (vectorLayerRenderOrder) {\n            /** @type {Array<import(\"../../Feature.js\").default>} */\n            var features_2 = [];\n            vectorSource.forEachFeatureInExtent(extent, \n            /**\n             * @param {import(\"../../Feature.js\").default} feature Feature.\n             */\n            function (feature) {\n                features_2.push(feature);\n            });\n            features_2.sort(vectorLayerRenderOrder);\n            for (var i = 0, ii = features_2.length; i < ii; ++i) {\n                render(features_2[i]);\n            }\n        }\n        else {\n            vectorSource.forEachFeatureInExtent(extent, render);\n        }\n        var replayGroupInstructions = replayGroup.finish();\n        var executorGroup = new ExecutorGroup(extent, resolution, pixelRatio, vectorSource.getOverlaps(), this.declutterTree_, replayGroupInstructions, vectorLayer.getRenderBuffer());\n        this.renderedResolution_ = resolution;\n        this.renderedRevision_ = vectorLayerRevision;\n        this.renderedRenderOrder_ = vectorLayerRenderOrder;\n        this.renderedExtent_ = extent;\n        this.replayGroup_ = executorGroup;\n        this.replayGroupChanged = true;\n        return true;\n    };\n    /**\n     * @param {import(\"../../Feature.js\").default} feature Feature.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n     * @param {import(\"../../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n     * @return {boolean} `true` if an image is loading.\n     */\n    CanvasVectorLayerRenderer.prototype.renderFeature = function (feature, resolution, pixelRatio, styles, builderGroup) {\n        if (!styles) {\n            return false;\n        }\n        var loading = false;\n        if (Array.isArray(styles)) {\n            for (var i = 0, ii = styles.length; i < ii; ++i) {\n                loading = renderFeature(builderGroup, feature, styles[i], getSquaredRenderTolerance(resolution, pixelRatio), this.handleStyleImageChange_, this) || loading;\n            }\n        }\n        else {\n            loading = renderFeature(builderGroup, feature, styles, getSquaredRenderTolerance(resolution, pixelRatio), this.handleStyleImageChange_, this);\n        }\n        return loading;\n    };\n    return CanvasVectorLayerRenderer;\n}(CanvasLayerRenderer));\nexport default CanvasVectorLayerRenderer;\n//# sourceMappingURL=VectorLayer.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/Vector\n */\nimport BaseVectorLayer from './BaseVector.js';\nimport CanvasVectorLayerRenderer from '../renderer/canvas/VectorLayer.js';\n/**\n * @typedef {import(\"./BaseVector.js\").Options} Options\n */\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @extends {BaseVectorLayer<import(\"../source/Vector.js\").default>}\n * @api\n */\nvar VectorLayer = /** @class */ (function (_super) {\n    __extends(VectorLayer, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function VectorLayer(opt_options) {\n        return _super.call(this, opt_options) || this;\n    }\n    /**\n     * Create a renderer for this layer.\n     * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n     * @protected\n     */\n    VectorLayer.prototype.createRenderer = function () {\n        return new CanvasVectorLayerRenderer(this);\n    };\n    return VectorLayer;\n}(BaseVectorLayer));\nexport default VectorLayer;\n//# sourceMappingURL=Vector.js.map","/**\n * @module ol/featureloader\n */\nimport { VOID } from './functions.js';\nimport FormatType from './format/FormatType.js';\n/**\n * {@link module:ol/source/Vector} sources use a function of this type to\n * load features.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area to be loaded,\n * a `{number}` representing the resolution (map units per pixel) and an\n * {@link module:ol/proj/Projection} for the projection  as\n * arguments. `this` within the function is bound to the\n * {@link module:ol/source/Vector} it's called from.\n *\n * The function is responsible for loading the features and adding them to the\n * source.\n * @typedef {function(this:(import(\"./source/Vector\").default|import(\"./VectorTile.js\").default), import(\"./extent.js\").Extent, number,\n *                    import(\"./proj/Projection.js\").default): void} FeatureLoader\n * @api\n */\n/**\n * {@link module:ol/source/Vector} sources use a function of this type to\n * get the url to load features from.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area\n * to be loaded, a `{number}` representing the resolution (map units per pixel)\n * and an {@link module:ol/proj/Projection} for the projection  as\n * arguments and returns a `{string}` representing the URL.\n * @typedef {function(import(\"./extent.js\").Extent, number, import(\"./proj/Projection.js\").default): string} FeatureUrlFunction\n * @api\n */\n/**\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @param {function(this:import(\"./VectorTile.js\").default, Array<import(\"./Feature.js\").default>, import(\"./proj/Projection.js\").default, import(\"./extent.js\").Extent): void|function(this:import(\"./source/Vector\").default, Array<import(\"./Feature.js\").default>): void} success\n *     Function called with the loaded features and optionally with the data\n *     projection. Called with the vector tile or source as `this`.\n * @param {function(this:import(\"./VectorTile.js\").default): void|function(this:import(\"./source/Vector\").default): void} failure\n *     Function called when loading failed. Called with the vector tile or\n *     source as `this`.\n * @return {FeatureLoader} The feature loader.\n */\nexport function loadFeaturesXhr(url, format, success, failure) {\n    return (\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @this {import(\"./source/Vector\").default|import(\"./VectorTile.js\").default}\n     */\n    function (extent, resolution, projection) {\n        var xhr = new XMLHttpRequest();\n        xhr.open('GET', typeof url === 'function' ? url(extent, resolution, projection) : url, true);\n        if (format.getType() == FormatType.ARRAY_BUFFER) {\n            xhr.responseType = 'arraybuffer';\n        }\n        /**\n         * @param {Event} event Event.\n         * @private\n         */\n        xhr.onload = function (event) {\n            // status will be 0 for file:// urls\n            if (!xhr.status || xhr.status >= 200 && xhr.status < 300) {\n                var type = format.getType();\n                /** @type {Document|Node|Object|string|undefined} */\n                var source = void 0;\n                if (type == FormatType.JSON || type == FormatType.TEXT) {\n                    source = xhr.responseText;\n                }\n                else if (type == FormatType.XML) {\n                    source = xhr.responseXML;\n                    if (!source) {\n                        source = new DOMParser().parseFromString(xhr.responseText, 'application/xml');\n                    }\n                }\n                else if (type == FormatType.ARRAY_BUFFER) {\n                    source = /** @type {ArrayBuffer} */ (xhr.response);\n                }\n                if (source) {\n                    success.call(this, format.readFeatures(source, {\n                        extent: extent,\n                        featureProjection: projection\n                    }), format.readProjection(source));\n                }\n                else {\n                    failure.call(this);\n                }\n            }\n            else {\n                failure.call(this);\n            }\n        }.bind(this);\n        /**\n         * @private\n         */\n        xhr.onerror = function () {\n            failure.call(this);\n        }.bind(this);\n        xhr.send();\n    });\n}\n/**\n * Create an XHR feature loader for a `url` and `format`. The feature loader\n * loads features (with XHR), parses the features, and adds them to the\n * vector source.\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @return {FeatureLoader} The feature loader.\n * @api\n */\nexport function xhr(url, format) {\n    return loadFeaturesXhr(url, format, \n    /**\n     * @param {Array<import(\"./Feature.js\").default>} features The loaded features.\n     * @param {import(\"./proj/Projection.js\").default} dataProjection Data\n     * projection.\n     * @this {import(\"./source/Vector\").default|import(\"./VectorTile.js\").default}\n     */\n    function (features, dataProjection) {\n        var sourceOrTile = /** @type {?} */ (this);\n        if (typeof sourceOrTile.addFeatures === 'function') {\n            /** @type {import(\"./source/Vector\").default} */ (sourceOrTile).addFeatures(features);\n        }\n    }, /* FIXME handle error */ VOID);\n}\n//# sourceMappingURL=featureloader.js.map","/**\n * @module ol/loadingstrategy\n */\n/**\n * Strategy function for loading all features with a single request.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function all(extent, resolution) {\n    return [[-Infinity, -Infinity, Infinity, Infinity]];\n}\n/**\n * Strategy function for loading features based on the view's extent and\n * resolution.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function bbox(extent, resolution) {\n    return [extent];\n}\n/**\n * Creates a strategy function for loading features based on a tile grid.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {function(import(\"./extent.js\").Extent, number): Array<import(\"./extent.js\").Extent>} Loading strategy.\n * @api\n */\nexport function tile(tileGrid) {\n    return (\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @return {Array<import(\"./extent.js\").Extent>} Extents.\n     */\n    function (extent, resolution) {\n        var z = tileGrid.getZForResolution(resolution);\n        var tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n        /** @type {Array<import(\"./extent.js\").Extent>} */\n        var extents = [];\n        /** @type {import(\"./tilecoord.js\").TileCoord} */\n        var tileCoord = [z, 0, 0];\n        for (tileCoord[1] = tileRange.minX; tileCoord[1] <= tileRange.maxX; ++tileCoord[1]) {\n            for (tileCoord[2] = tileRange.minY; tileCoord[2] <= tileRange.maxY; ++tileCoord[2]) {\n                extents.push(tileGrid.getTileCoordExtent(tileCoord));\n            }\n        }\n        return extents;\n    });\n}\n//# sourceMappingURL=loadingstrategy.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/source/Source\n */\nimport { abstract } from '../util.js';\nimport BaseObject from '../Object.js';\nimport { get as getProjection } from '../proj.js';\nimport SourceState from './State.js';\n/**\n * A function that returns a string or an array of strings representing source\n * attributions.\n *\n * @typedef {function(import(\"../PluggableMap.js\").FrameState): (string|Array<string>)} Attribution\n */\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * * a simple string (e.g. `'© Acme Inc.'`)\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * * a function that returns a string or array of strings ({@link module:ol/source/Source~Attribution})\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions]\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {SourceState} [state='ready']\n * @property {boolean} [wrapX=false]\n */\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nvar Source = /** @class */ (function (_super) {\n    __extends(Source, _super);\n    /**\n     * @param {Options} options Source options.\n     */\n    function Source(options) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {import(\"../proj/Projection.js\").default}\n         */\n        _this.projection_ = getProjection(options.projection);\n        /**\n         * @private\n         * @type {?Attribution}\n         */\n        _this.attributions_ = adaptAttributions(options.attributions);\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.attributionsCollapsible_ = options.attributionsCollapsible !== undefined ?\n            options.attributionsCollapsible : true;\n        /**\n         * This source is currently loading data. Sources that defer loading to the\n         * map's tile queue never set this to `true`.\n         * @type {boolean}\n         */\n        _this.loading = false;\n        /**\n         * @private\n         * @type {SourceState}\n         */\n        _this.state_ = options.state !== undefined ?\n            options.state : SourceState.READY;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n        return _this;\n    }\n    /**\n     * Get the attribution function for the source.\n     * @return {?Attribution} Attribution function.\n     */\n    Source.prototype.getAttributions = function () {\n        return this.attributions_;\n    };\n    /**\n     * @return {boolean} Attributions are collapsible.\n     */\n    Source.prototype.getAttributionsCollapsible = function () {\n        return this.attributionsCollapsible_;\n    };\n    /**\n     * Get the projection of the source.\n     * @return {import(\"../proj/Projection.js\").default} Projection.\n     * @api\n     */\n    Source.prototype.getProjection = function () {\n        return this.projection_;\n    };\n    /**\n     * @abstract\n     * @return {Array<number>|undefined} Resolutions.\n     */\n    Source.prototype.getResolutions = function () {\n        return abstract();\n    };\n    /**\n     * Get the state of the source, see {@link module:ol/source/State~State} for possible states.\n     * @return {SourceState} State.\n     * @api\n     */\n    Source.prototype.getState = function () {\n        return this.state_;\n    };\n    /**\n     * @return {boolean|undefined} Wrap X.\n     */\n    Source.prototype.getWrapX = function () {\n        return this.wrapX_;\n    };\n    /**\n     * Refreshes the source. The source will be cleared, and data from the server will be reloaded.\n     * @api\n     */\n    Source.prototype.refresh = function () {\n        this.changed();\n    };\n    /**\n     * Set the attributions of the source.\n     * @param {AttributionLike|undefined} attributions Attributions.\n     *     Can be passed as `string`, `Array<string>`, {@link module:ol/source/Source~Attribution},\n     *     or `undefined`.\n     * @api\n     */\n    Source.prototype.setAttributions = function (attributions) {\n        this.attributions_ = adaptAttributions(attributions);\n        this.changed();\n    };\n    /**\n     * Set the state of the source.\n     * @param {SourceState} state State.\n     * @protected\n     */\n    Source.prototype.setState = function (state) {\n        this.state_ = state;\n        this.changed();\n    };\n    return Source;\n}(BaseObject));\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {?Attribution} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n    if (!attributionLike) {\n        return null;\n    }\n    if (Array.isArray(attributionLike)) {\n        return function (frameState) {\n            return attributionLike;\n        };\n    }\n    if (typeof attributionLike === 'function') {\n        return attributionLike;\n    }\n    return function (frameState) {\n        return [attributionLike];\n    };\n}\nexport default Source;\n//# sourceMappingURL=Source.js.map","/**\n * @module ol/source/VectorEventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    /**\n     * Triggered when a feature is added to the source.\n     * @event module:ol/source/Vector.VectorSourceEvent#addfeature\n     * @api\n     */\n    ADDFEATURE: 'addfeature',\n    /**\n     * Triggered when a feature is updated.\n     * @event module:ol/source/Vector.VectorSourceEvent#changefeature\n     * @api\n     */\n    CHANGEFEATURE: 'changefeature',\n    /**\n     * Triggered when the clear method is called on the source.\n     * @event module:ol/source/Vector.VectorSourceEvent#clear\n     * @api\n     */\n    CLEAR: 'clear',\n    /**\n     * Triggered when a feature is removed from the source.\n     * See {@link module:ol/source/Vector#clear source.clear()} for exceptions.\n     * @event module:ol/source/Vector.VectorSourceEvent#removefeature\n     * @api\n     */\n    REMOVEFEATURE: 'removefeature'\n};\n//# sourceMappingURL=VectorEventType.js.map","/**\n * @module ol/structs/RBush\n */\nimport { getUid } from '../util.js';\nimport rbush from 'rbush';\nimport { createOrUpdate, equals } from '../extent.js';\nimport { isEmpty } from '../obj.js';\n/**\n * @typedef {Object} Entry\n * @property {number} minX\n * @property {number} minY\n * @property {number} maxX\n * @property {number} maxY\n * @property {Object} [value]\n */\n/**\n * @classdesc\n * Wrapper around the RBush by Vladimir Agafonkin.\n * See https://github.com/mourner/rbush.\n *\n * @template T\n */\nvar RBush = /** @class */ (function () {\n    /**\n     * @param {number=} opt_maxEntries Max entries.\n     */\n    function RBush(opt_maxEntries) {\n        /**\n         * @private\n         */\n        this.rbush_ = rbush(opt_maxEntries, undefined);\n        /**\n         * A mapping between the objects added to this rbush wrapper\n         * and the objects that are actually added to the internal rbush.\n         * @private\n         * @type {Object<string, Entry>}\n         */\n        this.items_ = {};\n    }\n    /**\n     * Insert a value into the RBush.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {T} value Value.\n     */\n    RBush.prototype.insert = function (extent, value) {\n        /** @type {Entry} */\n        var item = {\n            minX: extent[0],\n            minY: extent[1],\n            maxX: extent[2],\n            maxY: extent[3],\n            value: value\n        };\n        this.rbush_.insert(item);\n        this.items_[getUid(value)] = item;\n    };\n    /**\n     * Bulk-insert values into the RBush.\n     * @param {Array<import(\"../extent.js\").Extent>} extents Extents.\n     * @param {Array<T>} values Values.\n     */\n    RBush.prototype.load = function (extents, values) {\n        var items = new Array(values.length);\n        for (var i = 0, l = values.length; i < l; i++) {\n            var extent = extents[i];\n            var value = values[i];\n            /** @type {Entry} */\n            var item = {\n                minX: extent[0],\n                minY: extent[1],\n                maxX: extent[2],\n                maxY: extent[3],\n                value: value\n            };\n            items[i] = item;\n            this.items_[getUid(value)] = item;\n        }\n        this.rbush_.load(items);\n    };\n    /**\n     * Remove a value from the RBush.\n     * @param {T} value Value.\n     * @return {boolean} Removed.\n     */\n    RBush.prototype.remove = function (value) {\n        var uid = getUid(value);\n        // get the object in which the value was wrapped when adding to the\n        // internal rbush. then use that object to do the removal.\n        var item = this.items_[uid];\n        delete this.items_[uid];\n        return this.rbush_.remove(item) !== null;\n    };\n    /**\n     * Update the extent of a value in the RBush.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {T} value Value.\n     */\n    RBush.prototype.update = function (extent, value) {\n        var item = this.items_[getUid(value)];\n        var bbox = [item.minX, item.minY, item.maxX, item.maxY];\n        if (!equals(bbox, extent)) {\n            this.remove(value);\n            this.insert(extent, value);\n        }\n    };\n    /**\n     * Return all values in the RBush.\n     * @return {Array<T>} All.\n     */\n    RBush.prototype.getAll = function () {\n        var items = this.rbush_.all();\n        return items.map(function (item) {\n            return item.value;\n        });\n    };\n    /**\n     * Return all values in the given extent.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @return {Array<T>} All in extent.\n     */\n    RBush.prototype.getInExtent = function (extent) {\n        /** @type {Entry} */\n        var bbox = {\n            minX: extent[0],\n            minY: extent[1],\n            maxX: extent[2],\n            maxY: extent[3]\n        };\n        var items = this.rbush_.search(bbox);\n        return items.map(function (item) {\n            return item.value;\n        });\n    };\n    /**\n     * Calls a callback function with each value in the tree.\n     * If the callback returns a truthy value, this value is returned without\n     * checking the rest of the tree.\n     * @param {function(T): *} callback Callback.\n     * @return {*} Callback return value.\n     */\n    RBush.prototype.forEach = function (callback) {\n        return this.forEach_(this.getAll(), callback);\n    };\n    /**\n     * Calls a callback function with each value in the provided extent.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {function(T): *} callback Callback.\n     * @return {*} Callback return value.\n     */\n    RBush.prototype.forEachInExtent = function (extent, callback) {\n        return this.forEach_(this.getInExtent(extent), callback);\n    };\n    /**\n     * @param {Array<T>} values Values.\n     * @param {function(T): *} callback Callback.\n     * @private\n     * @return {*} Callback return value.\n     */\n    RBush.prototype.forEach_ = function (values, callback) {\n        var result;\n        for (var i = 0, l = values.length; i < l; i++) {\n            result = callback(values[i]);\n            if (result) {\n                return result;\n            }\n        }\n        return result;\n    };\n    /**\n     * @return {boolean} Is empty.\n     */\n    RBush.prototype.isEmpty = function () {\n        return isEmpty(this.items_);\n    };\n    /**\n     * Remove all values from the RBush.\n     */\n    RBush.prototype.clear = function () {\n        this.rbush_.clear();\n        this.items_ = {};\n    };\n    /**\n     * @param {import(\"../extent.js\").Extent=} opt_extent Extent.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     */\n    RBush.prototype.getExtent = function (opt_extent) {\n        var data = this.rbush_.toJSON();\n        return createOrUpdate(data.minX, data.minY, data.maxX, data.maxY, opt_extent);\n    };\n    /**\n     * @param {RBush} rbush R-Tree.\n     */\n    RBush.prototype.concat = function (rbush) {\n        this.rbush_.load(rbush.rbush_.all());\n        for (var i in rbush.items_) {\n            this.items_[i] = rbush.items_[i];\n        }\n    };\n    return RBush;\n}());\nexport default RBush;\n//# sourceMappingURL=RBush.js.map","/**\n * @module ol/source/Vector\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { getUid } from '../util.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport { extend } from '../array.js';\nimport { assert } from '../asserts.js';\nimport { listen, unlistenByKey } from '../events.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport { containsExtent, equals } from '../extent.js';\nimport { xhr } from '../featureloader.js';\nimport { TRUE, VOID } from '../functions.js';\nimport { all as allStrategy } from '../loadingstrategy.js';\nimport { isEmpty, getValues } from '../obj.js';\nimport Source from './Source.js';\nimport SourceState from './State.js';\nimport VectorEventType from './VectorEventType.js';\nimport RBush from '../structs/RBush.js';\n/**\n * A function that takes an {@link module:ol/extent~Extent} and a resolution as arguments, and\n * returns an array of {@link module:ol/extent~Extent} with the extents to load. Usually this\n * is one of the standard {@link module:ol/loadingstrategy} strategies.\n *\n * @typedef {function(import(\"../extent.js\").Extent, number): Array<import(\"../extent.js\").Extent>} LoadingStrategy\n * @api\n */\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Vector} instances are instances of this\n * type.\n */\nvar VectorSourceEvent = /** @class */ (function (_super) {\n    __extends(VectorSourceEvent, _super);\n    /**\n     * @param {string} type Type.\n     * @param {import(\"../Feature.js\").default=} opt_feature Feature.\n     */\n    function VectorSourceEvent(type, opt_feature) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The feature being added or removed.\n         * @type {import(\"../Feature.js\").default|undefined}\n         * @api\n         */\n        _this.feature = opt_feature;\n        return _this;\n    }\n    return VectorSourceEvent;\n}(Event));\nexport { VectorSourceEvent };\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {Array<import(\"../Feature.js\").default>|Collection<import(\"../Feature.js\").default>} [features]\n * Features. If provided as {@link module:ol/Collection}, the features in the source\n * and the collection will stay in sync.\n * @property {import(\"../format/Feature.js\").default} [format] The feature format used by the XHR\n * feature loader when `url` is set. Required if `url` is set, otherwise ignored.\n * @property {import(\"../featureloader.js\").FeatureLoader} [loader]\n * The loader function used to load features, from a remote source for example.\n * If this is not set and `url` is set, the source will create and use an XHR\n * feature loader.\n *\n * Example:\n *\n * ```js\n * import {Vector} from 'ol/source';\n * import {GeoJSON} from 'ol/format';\n * import {bbox} from 'ol/loadingstrategy';\n *\n * var vectorSource = new Vector({\n *   format: new GeoJSON(),\n *   loader: function(extent, resolution, projection) {\n *      var proj = projection.getCode();\n *      var url = 'https://ahocevar.com/geoserver/wfs?service=WFS&' +\n *          'version=1.1.0&request=GetFeature&typename=osm:water_areas&' +\n *          'outputFormat=application/json&srsname=' + proj + '&' +\n *          'bbox=' + extent.join(',') + ',' + proj;\n *      var xhr = new XMLHttpRequest();\n *      xhr.open('GET', url);\n *      var onError = function() {\n *        vectorSource.removeLoadedExtent(extent);\n *      }\n *      xhr.onerror = onError;\n *      xhr.onload = function() {\n *        if (xhr.status == 200) {\n *          vectorSource.addFeatures(\n *              vectorSource.getFormat().readFeatures(xhr.responseText));\n *        } else {\n *          onError();\n *        }\n *      }\n *      xhr.send();\n *    },\n *    strategy: bbox\n *  });\n * ```\n * @property {boolean} [overlaps=true] This source may have overlapping geometries.\n * Setting this to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {LoadingStrategy} [strategy] The loading strategy to use.\n * By default an {@link module:ol/loadingstrategy~all}\n * strategy is used, a one-off strategy which loads all features at once.\n * @property {string|import(\"../featureloader.js\").FeatureUrlFunction} [url]\n * Setting this option instructs the source to load features using an XHR loader\n * (see {@link module:ol/featureloader~xhr}). Use a `string` and an\n * {@link module:ol/loadingstrategy~all} for a one-off download of all features from\n * the given URL. Use a {@link module:ol/featureloader~FeatureUrlFunction} to generate the url with\n * other loading strategies.\n * Requires `format` to be set as well.\n * When default XHR feature loader is provided, the features will\n * be transformed from the data projection to the view projection\n * during parsing. If your remote data source does not advertise its projection\n * properly, this transformation will be incorrect. For some formats, the\n * default projection (usually EPSG:4326) can be overridden by setting the\n * dataProjection constructor option on the format.\n * Note that if a source contains non-feature data, such as a GeoJSON geometry\n * or a KML NetworkLink, these will be ignored. Use a custom loader to load these.\n * @property {boolean} [useSpatialIndex=true]\n * By default, an RTree is used as spatial index. When features are removed and\n * added frequently, and the total number of features is low, setting this to\n * `false` may improve performance.\n *\n * Note that\n * {@link module:ol/source/Vector~VectorSource#getFeaturesInExtent},\n * {@link module:ol/source/Vector~VectorSource#getClosestFeatureToCoordinate} and\n * {@link module:ol/source/Vector~VectorSource#getExtent} cannot be used when `useSpatialIndex` is\n * set to `false`, and {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent} will loop\n * through all features.\n *\n * When set to `false`, the features will be maintained in an\n * {@link module:ol/Collection}, which can be retrieved through\n * {@link module:ol/source/Vector~VectorSource#getFeaturesCollection}.\n * @property {boolean} [wrapX=true] Wrap the world horizontally. For vector editing across the\n * -180° and 180° meridians to work properly, this should be set to `false`. The\n * resulting geometry coordinates will then exceed the world bounds.\n */\n/**\n * @classdesc\n * Provides a source of features for vector layers. Vector features provided\n * by this source are suitable for editing. See {@link module:ol/source/VectorTile~VectorTile} for\n * vector data that is optimized for rendering.\n *\n * @fires VectorSourceEvent\n * @api\n */\nvar VectorSource = /** @class */ (function (_super) {\n    __extends(VectorSource, _super);\n    /**\n     * @param {Options=} opt_options Vector source options.\n     */\n    function VectorSource(opt_options) {\n        var _this = this;\n        var options = opt_options || {};\n        _this = _super.call(this, {\n            attributions: options.attributions,\n            projection: undefined,\n            state: SourceState.READY,\n            wrapX: options.wrapX !== undefined ? options.wrapX : true\n        }) || this;\n        /**\n         * @private\n         * @type {import(\"../featureloader.js\").FeatureLoader}\n         */\n        _this.loader_ = VOID;\n        /**\n         * @private\n         * @type {import(\"../format/Feature.js\").default|undefined}\n         */\n        _this.format_ = options.format;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.overlaps_ = options.overlaps == undefined ? true : options.overlaps;\n        /**\n         * @private\n         * @type {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined}\n         */\n        _this.url_ = options.url;\n        if (options.loader !== undefined) {\n            _this.loader_ = options.loader;\n        }\n        else if (_this.url_ !== undefined) {\n            assert(_this.format_, 7); // `format` must be set when `url` is set\n            // create a XHR feature loader for \"url\" and \"format\"\n            _this.loader_ = xhr(_this.url_, /** @type {import(\"../format/Feature.js\").default} */ (_this.format_));\n        }\n        /**\n         * @private\n         * @type {LoadingStrategy}\n         */\n        _this.strategy_ = options.strategy !== undefined ? options.strategy : allStrategy;\n        var useSpatialIndex = options.useSpatialIndex !== undefined ? options.useSpatialIndex : true;\n        /**\n         * @private\n         * @type {RBush<import(\"../Feature.js\").default>}\n         */\n        _this.featuresRtree_ = useSpatialIndex ? new RBush() : null;\n        /**\n         * @private\n         * @type {RBush<{extent: import(\"../extent.js\").Extent}>}\n         */\n        _this.loadedExtentsRtree_ = new RBush();\n        /**\n         * @private\n         * @type {!Object<string, import(\"../Feature.js\").default>}\n         */\n        _this.nullGeometryFeatures_ = {};\n        /**\n         * A lookup of features by id (the return from feature.getId()).\n         * @private\n         * @type {!Object<string, import(\"../Feature.js\").default>}\n         */\n        _this.idIndex_ = {};\n        /**\n         * A lookup of features without id (keyed by getUid(feature)).\n         * @private\n         * @type {!Object<string, import(\"../Feature.js\").default>}\n         */\n        _this.undefIdIndex_ = {};\n        /**\n         * @private\n         * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n         */\n        _this.featureChangeKeys_ = {};\n        /**\n         * @private\n         * @type {Collection<import(\"../Feature.js\").default>}\n         */\n        _this.featuresCollection_ = null;\n        var collection, features;\n        if (Array.isArray(options.features)) {\n            features = options.features;\n        }\n        else if (options.features) {\n            collection = options.features;\n            features = collection.getArray();\n        }\n        if (!useSpatialIndex && collection === undefined) {\n            collection = new Collection(features);\n        }\n        if (features !== undefined) {\n            _this.addFeaturesInternal(features);\n        }\n        if (collection !== undefined) {\n            _this.bindFeaturesCollection_(collection);\n        }\n        return _this;\n    }\n    /**\n     * Add a single feature to the source.  If you want to add a batch of features\n     * at once, call {@link module:ol/source/Vector~VectorSource#addFeatures #addFeatures()}\n     * instead. A feature will not be added to the source if feature with\n     * the same id is already there. The reason for this behavior is to avoid\n     * feature duplication when using bbox or tile loading strategies.\n     * @param {import(\"../Feature.js\").default} feature Feature to add.\n     * @api\n     */\n    VectorSource.prototype.addFeature = function (feature) {\n        this.addFeatureInternal(feature);\n        this.changed();\n    };\n    /**\n     * Add a feature without firing a `change` event.\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     * @protected\n     */\n    VectorSource.prototype.addFeatureInternal = function (feature) {\n        var featureKey = getUid(feature);\n        if (!this.addToIndex_(featureKey, feature)) {\n            return;\n        }\n        this.setupChangeEvents_(featureKey, feature);\n        var geometry = feature.getGeometry();\n        if (geometry) {\n            var extent = geometry.getExtent();\n            if (this.featuresRtree_) {\n                this.featuresRtree_.insert(extent, feature);\n            }\n        }\n        else {\n            this.nullGeometryFeatures_[featureKey] = feature;\n        }\n        this.dispatchEvent(new VectorSourceEvent(VectorEventType.ADDFEATURE, feature));\n    };\n    /**\n     * @param {string} featureKey Unique identifier for the feature.\n     * @param {import(\"../Feature.js\").default} feature The feature.\n     * @private\n     */\n    VectorSource.prototype.setupChangeEvents_ = function (featureKey, feature) {\n        this.featureChangeKeys_[featureKey] = [\n            listen(feature, EventType.CHANGE, this.handleFeatureChange_, this),\n            listen(feature, ObjectEventType.PROPERTYCHANGE, this.handleFeatureChange_, this)\n        ];\n    };\n    /**\n     * @param {string} featureKey Unique identifier for the feature.\n     * @param {import(\"../Feature.js\").default} feature The feature.\n     * @return {boolean} The feature is \"valid\", in the sense that it is also a\n     *     candidate for insertion into the Rtree.\n     * @private\n     */\n    VectorSource.prototype.addToIndex_ = function (featureKey, feature) {\n        var valid = true;\n        var id = feature.getId();\n        if (id !== undefined) {\n            if (!(id.toString() in this.idIndex_)) {\n                this.idIndex_[id.toString()] = feature;\n            }\n            else {\n                valid = false;\n            }\n        }\n        else {\n            assert(!(featureKey in this.undefIdIndex_), 30); // The passed `feature` was already added to the source\n            this.undefIdIndex_[featureKey] = feature;\n        }\n        return valid;\n    };\n    /**\n     * Add a batch of features to the source.\n     * @param {Array<import(\"../Feature.js\").default>} features Features to add.\n     * @api\n     */\n    VectorSource.prototype.addFeatures = function (features) {\n        this.addFeaturesInternal(features);\n        this.changed();\n    };\n    /**\n     * Add features without firing a `change` event.\n     * @param {Array<import(\"../Feature.js\").default>} features Features.\n     * @protected\n     */\n    VectorSource.prototype.addFeaturesInternal = function (features) {\n        var extents = [];\n        var newFeatures = [];\n        var geometryFeatures = [];\n        for (var i = 0, length_1 = features.length; i < length_1; i++) {\n            var feature = features[i];\n            var featureKey = getUid(feature);\n            if (this.addToIndex_(featureKey, feature)) {\n                newFeatures.push(feature);\n            }\n        }\n        for (var i = 0, length_2 = newFeatures.length; i < length_2; i++) {\n            var feature = newFeatures[i];\n            var featureKey = getUid(feature);\n            this.setupChangeEvents_(featureKey, feature);\n            var geometry = feature.getGeometry();\n            if (geometry) {\n                var extent = geometry.getExtent();\n                extents.push(extent);\n                geometryFeatures.push(feature);\n            }\n            else {\n                this.nullGeometryFeatures_[featureKey] = feature;\n            }\n        }\n        if (this.featuresRtree_) {\n            this.featuresRtree_.load(extents, geometryFeatures);\n        }\n        for (var i = 0, length_3 = newFeatures.length; i < length_3; i++) {\n            this.dispatchEvent(new VectorSourceEvent(VectorEventType.ADDFEATURE, newFeatures[i]));\n        }\n    };\n    /**\n     * @param {!Collection<import(\"../Feature.js\").default>} collection Collection.\n     * @private\n     */\n    VectorSource.prototype.bindFeaturesCollection_ = function (collection) {\n        var modifyingCollection = false;\n        listen(this, VectorEventType.ADDFEATURE, \n        /**\n         * @param {VectorSourceEvent} evt The vector source event\n         */\n        function (evt) {\n            if (!modifyingCollection) {\n                modifyingCollection = true;\n                collection.push(evt.feature);\n                modifyingCollection = false;\n            }\n        });\n        listen(this, VectorEventType.REMOVEFEATURE, \n        /**\n         * @param {VectorSourceEvent} evt The vector source event\n         */\n        function (evt) {\n            if (!modifyingCollection) {\n                modifyingCollection = true;\n                collection.remove(evt.feature);\n                modifyingCollection = false;\n            }\n        });\n        listen(collection, CollectionEventType.ADD, \n        /**\n         * @param {import(\"../Collection.js\").CollectionEvent} evt The collection event\n         */\n        function (evt) {\n            if (!modifyingCollection) {\n                modifyingCollection = true;\n                this.addFeature(/** @type {import(\"../Feature.js\").default} */ (evt.element));\n                modifyingCollection = false;\n            }\n        }, this);\n        listen(collection, CollectionEventType.REMOVE, \n        /**\n         * @param {import(\"../Collection.js\").CollectionEvent} evt The collection event\n         */\n        function (evt) {\n            if (!modifyingCollection) {\n                modifyingCollection = true;\n                this.removeFeature(/** @type {import(\"../Feature.js\").default} */ (evt.element));\n                modifyingCollection = false;\n            }\n        }, this);\n        this.featuresCollection_ = collection;\n    };\n    /**\n     * Remove all features from the source.\n     * @param {boolean=} opt_fast Skip dispatching of {@link module:ol/source/Vector.VectorSourceEvent#removefeature} events.\n     * @api\n     */\n    VectorSource.prototype.clear = function (opt_fast) {\n        if (opt_fast) {\n            for (var featureId in this.featureChangeKeys_) {\n                var keys = this.featureChangeKeys_[featureId];\n                keys.forEach(unlistenByKey);\n            }\n            if (!this.featuresCollection_) {\n                this.featureChangeKeys_ = {};\n                this.idIndex_ = {};\n                this.undefIdIndex_ = {};\n            }\n        }\n        else {\n            if (this.featuresRtree_) {\n                this.featuresRtree_.forEach(this.removeFeatureInternal.bind(this));\n                for (var id in this.nullGeometryFeatures_) {\n                    this.removeFeatureInternal(this.nullGeometryFeatures_[id]);\n                }\n            }\n        }\n        if (this.featuresCollection_) {\n            this.featuresCollection_.clear();\n        }\n        if (this.featuresRtree_) {\n            this.featuresRtree_.clear();\n        }\n        this.nullGeometryFeatures_ = {};\n        var clearEvent = new VectorSourceEvent(VectorEventType.CLEAR);\n        this.dispatchEvent(clearEvent);\n        this.changed();\n    };\n    /**\n     * Iterate through all features on the source, calling the provided callback\n     * with each one.  If the callback returns any \"truthy\" value, iteration will\n     * stop and the function will return the same value.\n     * Note: this function only iterate through the feature that have a defined geometry.\n     *\n     * @param {function(import(\"../Feature.js\").default): T} callback Called with each feature\n     *     on the source.  Return a truthy value to stop iteration.\n     * @return {T|undefined} The return value from the last call to the callback.\n     * @template T\n     * @api\n     */\n    VectorSource.prototype.forEachFeature = function (callback) {\n        if (this.featuresRtree_) {\n            return this.featuresRtree_.forEach(callback);\n        }\n        else if (this.featuresCollection_) {\n            this.featuresCollection_.forEach(callback);\n        }\n    };\n    /**\n     * Iterate through all features whose geometries contain the provided\n     * coordinate, calling the callback with each feature.  If the callback returns\n     * a \"truthy\" value, iteration will stop and the function will return the same\n     * value.\n     *\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {function(import(\"../Feature.js\").default): T} callback Called with each feature\n     *     whose goemetry contains the provided coordinate.\n     * @return {T|undefined} The return value from the last call to the callback.\n     * @template T\n     */\n    VectorSource.prototype.forEachFeatureAtCoordinateDirect = function (coordinate, callback) {\n        var extent = [coordinate[0], coordinate[1], coordinate[0], coordinate[1]];\n        return this.forEachFeatureInExtent(extent, function (feature) {\n            var geometry = feature.getGeometry();\n            if (geometry.intersectsCoordinate(coordinate)) {\n                return callback(feature);\n            }\n            else {\n                return undefined;\n            }\n        });\n    };\n    /**\n     * Iterate through all features whose bounding box intersects the provided\n     * extent (note that the feature's geometry may not intersect the extent),\n     * calling the callback with each feature.  If the callback returns a \"truthy\"\n     * value, iteration will stop and the function will return the same value.\n     *\n     * If you are interested in features whose geometry intersects an extent, call\n     * the {@link module:ol/source/Vector~VectorSource#forEachFeatureIntersectingExtent #forEachFeatureIntersectingExtent()} method instead.\n     *\n     * When `useSpatialIndex` is set to false, this method will loop through all\n     * features, equivalent to {@link module:ol/source/Vector~VectorSource#forEachFeature #forEachFeature()}.\n     *\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {function(import(\"../Feature.js\").default): T} callback Called with each feature\n     *     whose bounding box intersects the provided extent.\n     * @return {T|undefined} The return value from the last call to the callback.\n     * @template T\n     * @api\n     */\n    VectorSource.prototype.forEachFeatureInExtent = function (extent, callback) {\n        if (this.featuresRtree_) {\n            return this.featuresRtree_.forEachInExtent(extent, callback);\n        }\n        else if (this.featuresCollection_) {\n            this.featuresCollection_.forEach(callback);\n        }\n    };\n    /**\n     * Iterate through all features whose geometry intersects the provided extent,\n     * calling the callback with each feature.  If the callback returns a \"truthy\"\n     * value, iteration will stop and the function will return the same value.\n     *\n     * If you only want to test for bounding box intersection, call the\n     * {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent #forEachFeatureInExtent()} method instead.\n     *\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {function(import(\"../Feature.js\").default): T} callback Called with each feature\n     *     whose geometry intersects the provided extent.\n     * @return {T|undefined} The return value from the last call to the callback.\n     * @template T\n     * @api\n     */\n    VectorSource.prototype.forEachFeatureIntersectingExtent = function (extent, callback) {\n        return this.forEachFeatureInExtent(extent, \n        /**\n         * @param {import(\"../Feature.js\").default} feature Feature.\n         * @return {T|undefined} The return value from the last call to the callback.\n         */\n        function (feature) {\n            var geometry = feature.getGeometry();\n            if (geometry.intersectsExtent(extent)) {\n                var result = callback(feature);\n                if (result) {\n                    return result;\n                }\n            }\n        });\n    };\n    /**\n     * Get the features collection associated with this source. Will be `null`\n     * unless the source was configured with `useSpatialIndex` set to `false`, or\n     * with an {@link module:ol/Collection} as `features`.\n     * @return {Collection<import(\"../Feature.js\").default>} The collection of features.\n     * @api\n     */\n    VectorSource.prototype.getFeaturesCollection = function () {\n        return this.featuresCollection_;\n    };\n    /**\n     * Get all features on the source in random order.\n     * @return {Array<import(\"../Feature.js\").default>} Features.\n     * @api\n     */\n    VectorSource.prototype.getFeatures = function () {\n        var features;\n        if (this.featuresCollection_) {\n            features = this.featuresCollection_.getArray();\n        }\n        else if (this.featuresRtree_) {\n            features = this.featuresRtree_.getAll();\n            if (!isEmpty(this.nullGeometryFeatures_)) {\n                extend(features, getValues(this.nullGeometryFeatures_));\n            }\n        }\n        return (\n        /** @type {Array<import(\"../Feature.js\").default>} */ (features));\n    };\n    /**\n     * Get all features whose geometry intersects the provided coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {Array<import(\"../Feature.js\").default>} Features.\n     * @api\n     */\n    VectorSource.prototype.getFeaturesAtCoordinate = function (coordinate) {\n        var features = [];\n        this.forEachFeatureAtCoordinateDirect(coordinate, function (feature) {\n            features.push(feature);\n        });\n        return features;\n    };\n    /**\n     * Get all features in the provided extent.  Note that this returns an array of\n     * all features intersecting the given extent in random order (so it may include\n     * features whose geometries do not intersect the extent).\n     *\n     * This method is not available when the source is configured with\n     * `useSpatialIndex` set to `false`.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @return {Array<import(\"../Feature.js\").default>} Features.\n     * @api\n     */\n    VectorSource.prototype.getFeaturesInExtent = function (extent) {\n        return this.featuresRtree_.getInExtent(extent);\n    };\n    /**\n     * Get the closest feature to the provided coordinate.\n     *\n     * This method is not available when the source is configured with\n     * `useSpatialIndex` set to `false`.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {function(import(\"../Feature.js\").default):boolean=} opt_filter Feature filter function.\n     *     The filter function will receive one argument, the {@link module:ol/Feature feature}\n     *     and it should return a boolean value. By default, no filtering is made.\n     * @return {import(\"../Feature.js\").default} Closest feature.\n     * @api\n     */\n    VectorSource.prototype.getClosestFeatureToCoordinate = function (coordinate, opt_filter) {\n        // Find the closest feature using branch and bound.  We start searching an\n        // infinite extent, and find the distance from the first feature found.  This\n        // becomes the closest feature.  We then compute a smaller extent which any\n        // closer feature must intersect.  We continue searching with this smaller\n        // extent, trying to find a closer feature.  Every time we find a closer\n        // feature, we update the extent being searched so that any even closer\n        // feature must intersect it.  We continue until we run out of features.\n        var x = coordinate[0];\n        var y = coordinate[1];\n        var closestFeature = null;\n        var closestPoint = [NaN, NaN];\n        var minSquaredDistance = Infinity;\n        var extent = [-Infinity, -Infinity, Infinity, Infinity];\n        var filter = opt_filter ? opt_filter : TRUE;\n        this.featuresRtree_.forEachInExtent(extent, \n        /**\n         * @param {import(\"../Feature.js\").default} feature Feature.\n         */\n        function (feature) {\n            if (filter(feature)) {\n                var geometry = feature.getGeometry();\n                var previousMinSquaredDistance = minSquaredDistance;\n                minSquaredDistance = geometry.closestPointXY(x, y, closestPoint, minSquaredDistance);\n                if (minSquaredDistance < previousMinSquaredDistance) {\n                    closestFeature = feature;\n                    // This is sneaky.  Reduce the extent that it is currently being\n                    // searched while the R-Tree traversal using this same extent object\n                    // is still in progress.  This is safe because the new extent is\n                    // strictly contained by the old extent.\n                    var minDistance = Math.sqrt(minSquaredDistance);\n                    extent[0] = x - minDistance;\n                    extent[1] = y - minDistance;\n                    extent[2] = x + minDistance;\n                    extent[3] = y + minDistance;\n                }\n            }\n        });\n        return closestFeature;\n    };\n    /**\n     * Get the extent of the features currently in the source.\n     *\n     * This method is not available when the source is configured with\n     * `useSpatialIndex` set to `false`.\n     * @param {import(\"../extent.js\").Extent=} opt_extent Destination extent. If provided, no new extent\n     *     will be created. Instead, that extent's coordinates will be overwritten.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     * @api\n     */\n    VectorSource.prototype.getExtent = function (opt_extent) {\n        return this.featuresRtree_.getExtent(opt_extent);\n    };\n    /**\n     * Get a feature by its identifier (the value returned by feature.getId()).\n     * Note that the index treats string and numeric identifiers as the same.  So\n     * `source.getFeatureById(2)` will return a feature with id `'2'` or `2`.\n     *\n     * @param {string|number} id Feature identifier.\n     * @return {import(\"../Feature.js\").default} The feature (or `null` if not found).\n     * @api\n     */\n    VectorSource.prototype.getFeatureById = function (id) {\n        var feature = this.idIndex_[id.toString()];\n        return feature !== undefined ? feature : null;\n    };\n    /**\n     * Get the format associated with this source.\n     *\n     * @return {import(\"../format/Feature.js\").default|undefined} The feature format.\n     * @api\n     */\n    VectorSource.prototype.getFormat = function () {\n        return this.format_;\n    };\n    /**\n     * @return {boolean} The source can have overlapping geometries.\n     */\n    VectorSource.prototype.getOverlaps = function () {\n        return this.overlaps_;\n    };\n    /**\n     * Get the url associated with this source.\n     *\n     * @return {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined} The url.\n     * @api\n     */\n    VectorSource.prototype.getUrl = function () {\n        return this.url_;\n    };\n    /**\n     * @param {Event} event Event.\n     * @private\n     */\n    VectorSource.prototype.handleFeatureChange_ = function (event) {\n        var feature = /** @type {import(\"../Feature.js\").default} */ (event.target);\n        var featureKey = getUid(feature);\n        var geometry = feature.getGeometry();\n        if (!geometry) {\n            if (!(featureKey in this.nullGeometryFeatures_)) {\n                if (this.featuresRtree_) {\n                    this.featuresRtree_.remove(feature);\n                }\n                this.nullGeometryFeatures_[featureKey] = feature;\n            }\n        }\n        else {\n            var extent = geometry.getExtent();\n            if (featureKey in this.nullGeometryFeatures_) {\n                delete this.nullGeometryFeatures_[featureKey];\n                if (this.featuresRtree_) {\n                    this.featuresRtree_.insert(extent, feature);\n                }\n            }\n            else {\n                if (this.featuresRtree_) {\n                    this.featuresRtree_.update(extent, feature);\n                }\n            }\n        }\n        var id = feature.getId();\n        if (id !== undefined) {\n            var sid = id.toString();\n            if (featureKey in this.undefIdIndex_) {\n                delete this.undefIdIndex_[featureKey];\n                this.idIndex_[sid] = feature;\n            }\n            else {\n                if (this.idIndex_[sid] !== feature) {\n                    this.removeFromIdIndex_(feature);\n                    this.idIndex_[sid] = feature;\n                }\n            }\n        }\n        else {\n            if (!(featureKey in this.undefIdIndex_)) {\n                this.removeFromIdIndex_(feature);\n                this.undefIdIndex_[featureKey] = feature;\n            }\n        }\n        this.changed();\n        this.dispatchEvent(new VectorSourceEvent(VectorEventType.CHANGEFEATURE, feature));\n    };\n    /**\n     * Returns true if the feature is contained within the source.\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     * @return {boolean} Has feature.\n     * @api\n     */\n    VectorSource.prototype.hasFeature = function (feature) {\n        var id = feature.getId();\n        if (id !== undefined) {\n            return id in this.idIndex_;\n        }\n        else {\n            return getUid(feature) in this.undefIdIndex_;\n        }\n    };\n    /**\n     * @return {boolean} Is empty.\n     */\n    VectorSource.prototype.isEmpty = function () {\n        return this.featuresRtree_.isEmpty() && isEmpty(this.nullGeometryFeatures_);\n    };\n    /**\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     */\n    VectorSource.prototype.loadFeatures = function (extent, resolution, projection) {\n        var loadedExtentsRtree = this.loadedExtentsRtree_;\n        var extentsToLoad = this.strategy_(extent, resolution);\n        this.loading = false;\n        var _loop_1 = function (i, ii) {\n            var extentToLoad = extentsToLoad[i];\n            var alreadyLoaded = loadedExtentsRtree.forEachInExtent(extentToLoad, \n            /**\n             * @param {{extent: import(\"../extent.js\").Extent}} object Object.\n             * @return {boolean} Contains.\n             */\n            function (object) {\n                return containsExtent(object.extent, extentToLoad);\n            });\n            if (!alreadyLoaded) {\n                this_1.loader_.call(this_1, extentToLoad, resolution, projection);\n                loadedExtentsRtree.insert(extentToLoad, { extent: extentToLoad.slice() });\n                this_1.loading = this_1.loader_ !== VOID;\n            }\n        };\n        var this_1 = this;\n        for (var i = 0, ii = extentsToLoad.length; i < ii; ++i) {\n            _loop_1(i, ii);\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    VectorSource.prototype.refresh = function () {\n        this.clear(true);\n        this.loadedExtentsRtree_.clear();\n        _super.prototype.refresh.call(this);\n    };\n    /**\n     * Remove an extent from the list of loaded extents.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @api\n     */\n    VectorSource.prototype.removeLoadedExtent = function (extent) {\n        var loadedExtentsRtree = this.loadedExtentsRtree_;\n        var obj;\n        loadedExtentsRtree.forEachInExtent(extent, function (object) {\n            if (equals(object.extent, extent)) {\n                obj = object;\n                return true;\n            }\n        });\n        if (obj) {\n            loadedExtentsRtree.remove(obj);\n        }\n    };\n    /**\n     * Remove a single feature from the source.  If you want to remove all features\n     * at once, use the {@link module:ol/source/Vector~VectorSource#clear #clear()} method\n     * instead.\n     * @param {import(\"../Feature.js\").default} feature Feature to remove.\n     * @api\n     */\n    VectorSource.prototype.removeFeature = function (feature) {\n        var featureKey = getUid(feature);\n        if (featureKey in this.nullGeometryFeatures_) {\n            delete this.nullGeometryFeatures_[featureKey];\n        }\n        else {\n            if (this.featuresRtree_) {\n                this.featuresRtree_.remove(feature);\n            }\n        }\n        this.removeFeatureInternal(feature);\n        this.changed();\n    };\n    /**\n     * Remove feature without firing a `change` event.\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     * @protected\n     */\n    VectorSource.prototype.removeFeatureInternal = function (feature) {\n        var featureKey = getUid(feature);\n        this.featureChangeKeys_[featureKey].forEach(unlistenByKey);\n        delete this.featureChangeKeys_[featureKey];\n        var id = feature.getId();\n        if (id !== undefined) {\n            delete this.idIndex_[id.toString()];\n        }\n        else {\n            delete this.undefIdIndex_[featureKey];\n        }\n        this.dispatchEvent(new VectorSourceEvent(VectorEventType.REMOVEFEATURE, feature));\n    };\n    /**\n     * Remove a feature from the id index.  Called internally when the feature id\n     * may have changed.\n     * @param {import(\"../Feature.js\").default} feature The feature.\n     * @return {boolean} Removed the feature from the index.\n     * @private\n     */\n    VectorSource.prototype.removeFromIdIndex_ = function (feature) {\n        var removed = false;\n        for (var id in this.idIndex_) {\n            if (this.idIndex_[id] === feature) {\n                delete this.idIndex_[id];\n                removed = true;\n                break;\n            }\n        }\n        return removed;\n    };\n    /**\n     * Set the new loader of the source. The next render cycle will use the\n     * new loader.\n     * @param {import(\"../featureloader.js\").FeatureLoader} loader The loader to set.\n     * @api\n     */\n    VectorSource.prototype.setLoader = function (loader) {\n        this.loader_ = loader;\n    };\n    /**\n     * Points the source to a new url. The next render cycle will use the new url.\n     * @param {string|import(\"../featureloader.js\").FeatureUrlFunction} url Url.\n     * @api\n     */\n    VectorSource.prototype.setUrl = function (url) {\n        assert(this.format_, 7); // `format` must be set when `url` is set\n        this.setLoader(xhr(url, this.format_));\n    };\n    return VectorSource;\n}(Source));\nexport default VectorSource;\n//# sourceMappingURL=Vector.js.map","import hashed from 'hashed';\nimport {transform} from 'ol/proj';\n\nfunction toPrecision(value, precision) {\n  const factor = Math.pow(10, precision);\n  return (Math.round(value * factor) / factor).toString();\n}\n\nfunction synchronize(map, options) {\n  options = options || {};\n  let animate;\n  if ('animate' in options) {\n    animate = options.animate;\n  } else {\n    animate = {duration: 250};\n  }\n\n  const view = map.getView();\n  const projection = view.getProjection().getCode();\n\n  let zoom, center, rotation;\n  if (view.isDef()) {\n    zoom = view.getZoom();\n    center = view.getCenter();\n    rotation = view.getRotation();\n  } else {\n    const viewport = map.getViewport();\n    if (viewport) {\n      zoom = Math.LOG2E * Math.log(viewport.clientWidth / 256);\n    } else {\n      zoom = 0;\n    }\n    center = [0, 0];\n    rotation = 0;\n  }\n\n  const config = {\n    center: {\n      default: center,\n      serialize: function(coord, state) {\n        let precision;\n        if (state && 'zoom' in state) {\n          precision = Math.max(0, Math.ceil(Math.log(state.zoom) / Math.LN2));\n        } else {\n          precision = 3;\n        }\n        coord = transform(coord, projection, 'EPSG:4326');\n        return (\n          toPrecision(coord[0], precision) +\n          ',' +\n          toPrecision(coord[1], precision)\n        );\n      },\n      deserialize: function(str) {\n        const parts = str.split(',');\n        if (parts.length !== 2) {\n          throw new Error('Expected lon,lat but got ' + str);\n        }\n        const coord = [parseFloat(parts[0]), parseFloat(parts[1])];\n        return transform(coord, 'EPSG:4326', projection);\n      }\n    },\n    zoom: {\n      default: zoom,\n      serialize: function(value) {\n        return toPrecision(value, 1);\n      },\n      deserialize: Number\n    },\n    rotation: {\n      default: rotation,\n      serialize: function(value) {\n        return toPrecision(value, 2);\n      },\n      deserialize: Number\n    }\n  };\n\n  function hashHandler(state) {\n    if (view.isDef() && animate) {\n      view.animate(Object.assign({}, state, animate));\n      return;\n    }\n    if ('center' in state) {\n      view.setCenter(state.center);\n    }\n    if ('zoom' in state) {\n      view.setZoom(state.zoom);\n    }\n    if ('rotation' in state) {\n      view.setRotation(state.rotation);\n    }\n  }\n\n  const update = hashed.register(config, hashHandler);\n\n  function onMoveEnd() {\n    update({\n      center: view.getCenter(),\n      zoom: view.getZoom(),\n      rotation: view.getRotation()\n    });\n  }\n\n  map.on('moveend', onMoveEnd);\n\n  return function unregister() {\n    map.un('moveend', onMoveEnd);\n    hashed.unregister(hashHandler);\n  };\n}\n\nexport default synchronize;\n","/**\n * @module ol/style/Text\n */\nimport Fill from './Fill.js';\nimport TextPlacement from './TextPlacement.js';\n/**\n * The default fill color to use if no fill was set at construction time; a\n * blackish `#333`.\n *\n * @const {string}\n */\nvar DEFAULT_FILL_COLOR = '#333';\n/**\n * @typedef {Object} Options\n * @property {string} [font] Font style as CSS 'font' value, see:\n * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font. Default is '10px sans-serif'\n * @property {number} [maxAngle=Math.PI/4] When `placement` is set to `'line'`, allow a maximum angle between adjacent characters.\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\n * @property {number} [offsetX=0] Horizontal text offset in pixels. A positive will shift the text right.\n * @property {number} [offsetY=0] Vertical text offset in pixels. A positive will shift the text down.\n * @property {boolean} [overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\n * the width of the polygon at the label position or the length of the path that it follows.\n * @property {import(\"./TextPlacement.js\").default|string} [placement='point'] Text placement.\n * @property {number} [scale] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the text with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {string} [text] Text content.\n * @property {string} [textAlign] Text alignment. Possible values: 'left', 'right', 'center', 'end' or 'start'.\n * Default is 'center' for `placement: 'point'`. For `placement: 'line'`, the default is to let the renderer choose a\n * placement where `maxAngle` is not exceeded.\n * @property {string} [textBaseline='middle'] Text base line. Possible values: 'bottom', 'top', 'middle', 'alphabetic',\n * 'hanging', 'ideographic'.\n * @property {import(\"./Fill.js\").default} [fill] Fill style. If none is provided, we'll use a dark fill-style (#333).\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Fill.js\").default} [backgroundFill] Fill style for the text background when `placement` is\n * `'point'`. Default is no fill.\n * @property {import(\"./Stroke.js\").default} [backgroundStroke] Stroke style for the text background  when `placement`\n * is `'point'`. Default is no stroke.\n * @property {Array<number>} [padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\n * values in the array is `[top, right, bottom, left]`.\n */\n/**\n * @classdesc\n * Set text style for vector features.\n * @api\n */\nvar Text = /** @class */ (function () {\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function Text(opt_options) {\n        var options = opt_options || {};\n        /**\n         * @private\n         * @type {string|undefined}\n         */\n        this.font_ = options.font;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.rotation_ = options.rotation;\n        /**\n         * @private\n         * @type {boolean|undefined}\n         */\n        this.rotateWithView_ = options.rotateWithView;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.scale_ = options.scale;\n        /**\n         * @private\n         * @type {string|undefined}\n         */\n        this.text_ = options.text;\n        /**\n         * @private\n         * @type {string|undefined}\n         */\n        this.textAlign_ = options.textAlign;\n        /**\n         * @private\n         * @type {string|undefined}\n         */\n        this.textBaseline_ = options.textBaseline;\n        /**\n         * @private\n         * @type {import(\"./Fill.js\").default}\n         */\n        this.fill_ = options.fill !== undefined ? options.fill :\n            new Fill({ color: DEFAULT_FILL_COLOR });\n        /**\n         * @private\n         * @type {number}\n         */\n        this.maxAngle_ = options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\n        /**\n         * @private\n         * @type {import(\"./TextPlacement.js\").default|string}\n         */\n        this.placement_ = options.placement !== undefined ? options.placement : TextPlacement.POINT;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this.overflow_ = !!options.overflow;\n        /**\n         * @private\n         * @type {import(\"./Stroke.js\").default}\n         */\n        this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\n        /**\n         * @private\n         * @type {import(\"./Fill.js\").default}\n         */\n        this.backgroundFill_ = options.backgroundFill ? options.backgroundFill : null;\n        /**\n         * @private\n         * @type {import(\"./Stroke.js\").default}\n         */\n        this.backgroundStroke_ = options.backgroundStroke ? options.backgroundStroke : null;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        this.padding_ = options.padding === undefined ? null : options.padding;\n    }\n    /**\n     * Clones the style.\n     * @return {Text} The cloned style.\n     * @api\n     */\n    Text.prototype.clone = function () {\n        return new Text({\n            font: this.getFont(),\n            placement: this.getPlacement(),\n            maxAngle: this.getMaxAngle(),\n            overflow: this.getOverflow(),\n            rotation: this.getRotation(),\n            rotateWithView: this.getRotateWithView(),\n            scale: this.getScale(),\n            text: this.getText(),\n            textAlign: this.getTextAlign(),\n            textBaseline: this.getTextBaseline(),\n            fill: this.getFill() ? this.getFill().clone() : undefined,\n            stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n            offsetX: this.getOffsetX(),\n            offsetY: this.getOffsetY(),\n            backgroundFill: this.getBackgroundFill() ? this.getBackgroundFill().clone() : undefined,\n            backgroundStroke: this.getBackgroundStroke() ? this.getBackgroundStroke().clone() : undefined\n        });\n    };\n    /**\n     * Get the `overflow` configuration.\n     * @return {boolean} Let text overflow the length of the path they follow.\n     * @api\n     */\n    Text.prototype.getOverflow = function () {\n        return this.overflow_;\n    };\n    /**\n     * Get the font name.\n     * @return {string|undefined} Font.\n     * @api\n     */\n    Text.prototype.getFont = function () {\n        return this.font_;\n    };\n    /**\n     * Get the maximum angle between adjacent characters.\n     * @return {number} Angle in radians.\n     * @api\n     */\n    Text.prototype.getMaxAngle = function () {\n        return this.maxAngle_;\n    };\n    /**\n     * Get the label placement.\n     * @return {import(\"./TextPlacement.js\").default|string} Text placement.\n     * @api\n     */\n    Text.prototype.getPlacement = function () {\n        return this.placement_;\n    };\n    /**\n     * Get the x-offset for the text.\n     * @return {number} Horizontal text offset.\n     * @api\n     */\n    Text.prototype.getOffsetX = function () {\n        return this.offsetX_;\n    };\n    /**\n     * Get the y-offset for the text.\n     * @return {number} Vertical text offset.\n     * @api\n     */\n    Text.prototype.getOffsetY = function () {\n        return this.offsetY_;\n    };\n    /**\n     * Get the fill style for the text.\n     * @return {import(\"./Fill.js\").default} Fill style.\n     * @api\n     */\n    Text.prototype.getFill = function () {\n        return this.fill_;\n    };\n    /**\n     * Determine whether the text rotates with the map.\n     * @return {boolean|undefined} Rotate with map.\n     * @api\n     */\n    Text.prototype.getRotateWithView = function () {\n        return this.rotateWithView_;\n    };\n    /**\n     * Get the text rotation.\n     * @return {number|undefined} Rotation.\n     * @api\n     */\n    Text.prototype.getRotation = function () {\n        return this.rotation_;\n    };\n    /**\n     * Get the text scale.\n     * @return {number|undefined} Scale.\n     * @api\n     */\n    Text.prototype.getScale = function () {\n        return this.scale_;\n    };\n    /**\n     * Get the stroke style for the text.\n     * @return {import(\"./Stroke.js\").default} Stroke style.\n     * @api\n     */\n    Text.prototype.getStroke = function () {\n        return this.stroke_;\n    };\n    /**\n     * Get the text to be rendered.\n     * @return {string|undefined} Text.\n     * @api\n     */\n    Text.prototype.getText = function () {\n        return this.text_;\n    };\n    /**\n     * Get the text alignment.\n     * @return {string|undefined} Text align.\n     * @api\n     */\n    Text.prototype.getTextAlign = function () {\n        return this.textAlign_;\n    };\n    /**\n     * Get the text baseline.\n     * @return {string|undefined} Text baseline.\n     * @api\n     */\n    Text.prototype.getTextBaseline = function () {\n        return this.textBaseline_;\n    };\n    /**\n     * Get the background fill style for the text.\n     * @return {import(\"./Fill.js\").default} Fill style.\n     * @api\n     */\n    Text.prototype.getBackgroundFill = function () {\n        return this.backgroundFill_;\n    };\n    /**\n     * Get the background stroke style for the text.\n     * @return {import(\"./Stroke.js\").default} Stroke style.\n     * @api\n     */\n    Text.prototype.getBackgroundStroke = function () {\n        return this.backgroundStroke_;\n    };\n    /**\n     * Get the padding for the text.\n     * @return {Array<number>} Padding.\n     * @api\n     */\n    Text.prototype.getPadding = function () {\n        return this.padding_;\n    };\n    /**\n     * Set the `overflow` property.\n     *\n     * @param {boolean} overflow Let text overflow the path that it follows.\n     * @api\n     */\n    Text.prototype.setOverflow = function (overflow) {\n        this.overflow_ = overflow;\n    };\n    /**\n     * Set the font.\n     *\n     * @param {string|undefined} font Font.\n     * @api\n     */\n    Text.prototype.setFont = function (font) {\n        this.font_ = font;\n    };\n    /**\n     * Set the maximum angle between adjacent characters.\n     *\n     * @param {number} maxAngle Angle in radians.\n     * @api\n     */\n    Text.prototype.setMaxAngle = function (maxAngle) {\n        this.maxAngle_ = maxAngle;\n    };\n    /**\n     * Set the x offset.\n     *\n     * @param {number} offsetX Horizontal text offset.\n     * @api\n     */\n    Text.prototype.setOffsetX = function (offsetX) {\n        this.offsetX_ = offsetX;\n    };\n    /**\n     * Set the y offset.\n     *\n     * @param {number} offsetY Vertical text offset.\n     * @api\n     */\n    Text.prototype.setOffsetY = function (offsetY) {\n        this.offsetY_ = offsetY;\n    };\n    /**\n     * Set the text placement.\n     *\n     * @param {import(\"./TextPlacement.js\").default|string} placement Placement.\n     * @api\n     */\n    Text.prototype.setPlacement = function (placement) {\n        this.placement_ = placement;\n    };\n    /**\n     * Set whether to rotate the text with the view.\n     *\n     * @param {boolean} rotateWithView Rotate with map.\n     * @api\n     */\n    Text.prototype.setRotateWithView = function (rotateWithView) {\n        this.rotateWithView_ = rotateWithView;\n    };\n    /**\n     * Set the fill.\n     *\n     * @param {import(\"./Fill.js\").default} fill Fill style.\n     * @api\n     */\n    Text.prototype.setFill = function (fill) {\n        this.fill_ = fill;\n    };\n    /**\n     * Set the rotation.\n     *\n     * @param {number|undefined} rotation Rotation.\n     * @api\n     */\n    Text.prototype.setRotation = function (rotation) {\n        this.rotation_ = rotation;\n    };\n    /**\n     * Set the scale.\n     *\n     * @param {number|undefined} scale Scale.\n     * @api\n     */\n    Text.prototype.setScale = function (scale) {\n        this.scale_ = scale;\n    };\n    /**\n     * Set the stroke.\n     *\n     * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n     * @api\n     */\n    Text.prototype.setStroke = function (stroke) {\n        this.stroke_ = stroke;\n    };\n    /**\n     * Set the text.\n     *\n     * @param {string|undefined} text Text.\n     * @api\n     */\n    Text.prototype.setText = function (text) {\n        this.text_ = text;\n    };\n    /**\n     * Set the text alignment.\n     *\n     * @param {string|undefined} textAlign Text align.\n     * @api\n     */\n    Text.prototype.setTextAlign = function (textAlign) {\n        this.textAlign_ = textAlign;\n    };\n    /**\n     * Set the text baseline.\n     *\n     * @param {string|undefined} textBaseline Text baseline.\n     * @api\n     */\n    Text.prototype.setTextBaseline = function (textBaseline) {\n        this.textBaseline_ = textBaseline;\n    };\n    /**\n     * Set the background fill.\n     *\n     * @param {import(\"./Fill.js\").default} fill Fill style.\n     * @api\n     */\n    Text.prototype.setBackgroundFill = function (fill) {\n        this.backgroundFill_ = fill;\n    };\n    /**\n     * Set the background stroke.\n     *\n     * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n     * @api\n     */\n    Text.prototype.setBackgroundStroke = function (stroke) {\n        this.backgroundStroke_ = stroke;\n    };\n    /**\n     * Set the padding (`[top, right, bottom, left]`).\n     *\n     * @param {!Array<number>} padding Padding.\n     * @api\n     */\n    Text.prototype.setPadding = function (padding) {\n        this.padding_ = padding;\n    };\n    return Text;\n}());\nexport default Text;\n//# sourceMappingURL=Text.js.map","/**\n * @module ol/OverlayPositioning\n */\n/**\n * Overlay position: `'bottom-left'`, `'bottom-center'`,  `'bottom-right'`,\n * `'center-left'`, `'center-center'`, `'center-right'`, `'top-left'`,\n * `'top-center'`, `'top-right'`\n * @enum {string}\n */\nexport default {\n    BOTTOM_LEFT: 'bottom-left',\n    BOTTOM_CENTER: 'bottom-center',\n    BOTTOM_RIGHT: 'bottom-right',\n    CENTER_LEFT: 'center-left',\n    CENTER_CENTER: 'center-center',\n    CENTER_RIGHT: 'center-right',\n    TOP_LEFT: 'top-left',\n    TOP_CENTER: 'top-center',\n    TOP_RIGHT: 'top-right'\n};\n//# sourceMappingURL=OverlayPositioning.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Overlay\n */\nimport MapEventType from './MapEventType.js';\nimport BaseObject, { getChangeEventType } from './Object.js';\nimport OverlayPositioning from './OverlayPositioning.js';\nimport { CLASS_SELECTABLE } from './css.js';\nimport { removeNode, removeChildren, outerWidth, outerHeight } from './dom.js';\nimport { listen, unlistenByKey } from './events.js';\nimport { containsExtent } from './extent.js';\n/**\n * @typedef {Object} Options\n * @property {number|string} [id] Set the overlay id. The overlay id can be used\n * with the {@link module:ol/Map~Map#getOverlayById} method.\n * @property {HTMLElement} [element] The overlay element.\n * @property {Array<number>} [offset=[0, 0]] Offsets in pixels used when positioning\n * the overlay. The first element in the\n * array is the horizontal offset. A positive value shifts the overlay right.\n * The second element in the array is the vertical offset. A positive value\n * shifts the overlay down.\n * @property {import(\"./coordinate.js\").Coordinate} [position] The overlay position\n * in map projection.\n * @property {OverlayPositioning} [positioning='top-left'] Defines how\n * the overlay is actually positioned with respect to its `position` property.\n * Possible values are `'bottom-left'`, `'bottom-center'`, `'bottom-right'`,\n * `'center-left'`, `'center-center'`, `'center-right'`, `'top-left'`,\n * `'top-center'`, and `'top-right'`.\n * @property {boolean} [stopEvent=true] Whether event propagation to the map\n * viewport should be stopped. If `true` the overlay is placed in the same\n * container as that of the controls (CSS class name\n * `ol-overlaycontainer-stopevent`); if `false` it is placed in the container\n * with CSS class name specified by the `className` property.\n * @property {boolean} [insertFirst=true] Whether the overlay is inserted first\n * in the overlay container, or appended. If the overlay is placed in the same\n * container as that of the controls (see the `stopEvent` option) you will\n * probably set `insertFirst` to `true` so the overlay is displayed below the\n * controls.\n * @property {boolean} [autoPan=false] If set to `true` the map is panned when\n * calling `setPosition`, so that the overlay is entirely visible in the current\n * viewport.\n * @property {PanOptions} [autoPanAnimation] The\n * animation options used to pan the overlay into view. This animation is only\n * used when `autoPan` is enabled. A `duration` and `easing` may be provided to\n * customize the animation.\n * @property {number} [autoPanMargin=20] The margin (in pixels) between the\n * overlay and the borders of the map when autopanning.\n * @property {string} [className='ol-overlay-container ol-selectable'] CSS class\n * name.\n */\n/**\n * @typedef {Object} PanOptions\n * @property {number} [duration=1000] The duration of the animation in\n * milliseconds.\n * @property {function(number):number} [easing] The easing function to use. Can\n * be one from {@link module:ol/easing} or a custom function.\n * Default is {@link module:ol/easing~inAndOut}.\n */\n/**\n * @enum {string}\n * @protected\n */\nvar Property = {\n    ELEMENT: 'element',\n    MAP: 'map',\n    OFFSET: 'offset',\n    POSITION: 'position',\n    POSITIONING: 'positioning'\n};\n/**\n * @classdesc\n * An element to be displayed over the map and attached to a single map\n * location.  Like {@link module:ol/control/Control~Control}, Overlays are\n * visible widgets. Unlike Controls, they are not in a fixed position on the\n * screen, but are tied to a geographical coordinate, so panning the map will\n * move an Overlay but not a Control.\n *\n * Example:\n *\n *     import Overlay from 'ol/Overlay';\n *\n *     var popup = new Overlay({\n *       element: document.getElementById('popup')\n *     });\n *     popup.setPosition(coordinate);\n *     map.addOverlay(popup);\n *\n * @api\n */\nvar Overlay = /** @class */ (function (_super) {\n    __extends(Overlay, _super);\n    /**\n     * @param {Options} options Overlay options.\n     */\n    function Overlay(options) {\n        var _this = _super.call(this) || this;\n        /**\n         * @protected\n         * @type {Options}\n         */\n        _this.options = options;\n        /**\n         * @protected\n         * @type {number|string|undefined}\n         */\n        _this.id = options.id;\n        /**\n         * @protected\n         * @type {boolean}\n         */\n        _this.insertFirst = options.insertFirst !== undefined ?\n            options.insertFirst : true;\n        /**\n         * @protected\n         * @type {boolean}\n         */\n        _this.stopEvent = options.stopEvent !== undefined ? options.stopEvent : true;\n        /**\n         * @protected\n         * @type {HTMLElement}\n         */\n        _this.element = document.createElement('div');\n        _this.element.className = options.className !== undefined ?\n            options.className : 'ol-overlay-container ' + CLASS_SELECTABLE;\n        _this.element.style.position = 'absolute';\n        /**\n         * @protected\n         * @type {boolean}\n         */\n        _this.autoPan = options.autoPan !== undefined ? options.autoPan : false;\n        /**\n         * @protected\n         * @type {PanOptions}\n         */\n        _this.autoPanAnimation = options.autoPanAnimation || /** @type {PanOptions} */ ({});\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.autoPanMargin = options.autoPanMargin !== undefined ?\n            options.autoPanMargin : 20;\n        /**\n         * @protected\n         * @type {{bottom_: string,\n         *         left_: string,\n         *         right_: string,\n         *         top_: string,\n         *         visible: boolean}}\n         */\n        _this.rendered = {\n            bottom_: '',\n            left_: '',\n            right_: '',\n            top_: '',\n            visible: true\n        };\n        /**\n         * @protected\n         * @type {?import(\"./events.js\").EventsKey}\n         */\n        _this.mapPostrenderListenerKey = null;\n        listen(_this, getChangeEventType(Property.ELEMENT), _this.handleElementChanged, _this);\n        listen(_this, getChangeEventType(Property.MAP), _this.handleMapChanged, _this);\n        listen(_this, getChangeEventType(Property.OFFSET), _this.handleOffsetChanged, _this);\n        listen(_this, getChangeEventType(Property.POSITION), _this.handlePositionChanged, _this);\n        listen(_this, getChangeEventType(Property.POSITIONING), _this.handlePositioningChanged, _this);\n        if (options.element !== undefined) {\n            _this.setElement(options.element);\n        }\n        _this.setOffset(options.offset !== undefined ? options.offset : [0, 0]);\n        _this.setPositioning(options.positioning !== undefined ?\n            /** @type {OverlayPositioning} */ (options.positioning) :\n            OverlayPositioning.TOP_LEFT);\n        if (options.position !== undefined) {\n            _this.setPosition(options.position);\n        }\n        return _this;\n    }\n    /**\n     * Get the DOM element of this overlay.\n     * @return {HTMLElement|undefined} The Element containing the overlay.\n     * @observable\n     * @api\n     */\n    Overlay.prototype.getElement = function () {\n        return /** @type {HTMLElement|undefined} */ (this.get(Property.ELEMENT));\n    };\n    /**\n     * Get the overlay identifier which is set on constructor.\n     * @return {number|string|undefined} Id.\n     * @api\n     */\n    Overlay.prototype.getId = function () {\n        return this.id;\n    };\n    /**\n     * Get the map associated with this overlay.\n     * @return {import(\"./PluggableMap.js\").default|undefined} The map that the\n     * overlay is part of.\n     * @observable\n     * @api\n     */\n    Overlay.prototype.getMap = function () {\n        return (\n        /** @type {import(\"./PluggableMap.js\").default|undefined} */ (this.get(Property.MAP)));\n    };\n    /**\n     * Get the offset of this overlay.\n     * @return {Array<number>} The offset.\n     * @observable\n     * @api\n     */\n    Overlay.prototype.getOffset = function () {\n        return /** @type {Array<number>} */ (this.get(Property.OFFSET));\n    };\n    /**\n     * Get the current position of this overlay.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} The spatial point that the overlay is\n     *     anchored at.\n     * @observable\n     * @api\n     */\n    Overlay.prototype.getPosition = function () {\n        return (\n        /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (this.get(Property.POSITION)));\n    };\n    /**\n     * Get the current positioning of this overlay.\n     * @return {OverlayPositioning} How the overlay is positioned\n     *     relative to its point on the map.\n     * @observable\n     * @api\n     */\n    Overlay.prototype.getPositioning = function () {\n        return (\n        /** @type {OverlayPositioning} */ (this.get(Property.POSITIONING)));\n    };\n    /**\n     * @protected\n     */\n    Overlay.prototype.handleElementChanged = function () {\n        removeChildren(this.element);\n        var element = this.getElement();\n        if (element) {\n            this.element.appendChild(element);\n        }\n    };\n    /**\n     * @protected\n     */\n    Overlay.prototype.handleMapChanged = function () {\n        if (this.mapPostrenderListenerKey) {\n            removeNode(this.element);\n            unlistenByKey(this.mapPostrenderListenerKey);\n            this.mapPostrenderListenerKey = null;\n        }\n        var map = this.getMap();\n        if (map) {\n            this.mapPostrenderListenerKey = listen(map, MapEventType.POSTRENDER, this.render, this);\n            this.updatePixelPosition();\n            var container = this.stopEvent ?\n                map.getOverlayContainerStopEvent() : map.getOverlayContainer();\n            if (this.insertFirst) {\n                container.insertBefore(this.element, container.childNodes[0] || null);\n            }\n            else {\n                container.appendChild(this.element);\n            }\n        }\n    };\n    /**\n     * @protected\n     */\n    Overlay.prototype.render = function () {\n        this.updatePixelPosition();\n    };\n    /**\n     * @protected\n     */\n    Overlay.prototype.handleOffsetChanged = function () {\n        this.updatePixelPosition();\n    };\n    /**\n     * @protected\n     */\n    Overlay.prototype.handlePositionChanged = function () {\n        this.updatePixelPosition();\n        if (this.get(Property.POSITION) && this.autoPan) {\n            this.panIntoView();\n        }\n    };\n    /**\n     * @protected\n     */\n    Overlay.prototype.handlePositioningChanged = function () {\n        this.updatePixelPosition();\n    };\n    /**\n     * Set the DOM element to be associated with this overlay.\n     * @param {HTMLElement|undefined} element The Element containing the overlay.\n     * @observable\n     * @api\n     */\n    Overlay.prototype.setElement = function (element) {\n        this.set(Property.ELEMENT, element);\n    };\n    /**\n     * Set the map to be associated with this overlay.\n     * @param {import(\"./PluggableMap.js\").default|undefined} map The map that the\n     * overlay is part of.\n     * @observable\n     * @api\n     */\n    Overlay.prototype.setMap = function (map) {\n        this.set(Property.MAP, map);\n    };\n    /**\n     * Set the offset for this overlay.\n     * @param {Array<number>} offset Offset.\n     * @observable\n     * @api\n     */\n    Overlay.prototype.setOffset = function (offset) {\n        this.set(Property.OFFSET, offset);\n    };\n    /**\n     * Set the position for this overlay. If the position is `undefined` the\n     * overlay is hidden.\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} position The spatial point that the overlay\n     *     is anchored at.\n     * @observable\n     * @api\n     */\n    Overlay.prototype.setPosition = function (position) {\n        this.set(Property.POSITION, position);\n    };\n    /**\n     * Pan the map so that the overlay is entirely visible in the current viewport\n     * (if necessary).\n     * @protected\n     */\n    Overlay.prototype.panIntoView = function () {\n        var map = this.getMap();\n        if (!map || !map.getTargetElement()) {\n            return;\n        }\n        var mapRect = this.getRect(map.getTargetElement(), map.getSize());\n        var element = this.getElement();\n        var overlayRect = this.getRect(element, [outerWidth(element), outerHeight(element)]);\n        var margin = this.autoPanMargin;\n        if (!containsExtent(mapRect, overlayRect)) {\n            // the overlay is not completely inside the viewport, so pan the map\n            var offsetLeft = overlayRect[0] - mapRect[0];\n            var offsetRight = mapRect[2] - overlayRect[2];\n            var offsetTop = overlayRect[1] - mapRect[1];\n            var offsetBottom = mapRect[3] - overlayRect[3];\n            var delta = [0, 0];\n            if (offsetLeft < 0) {\n                // move map to the left\n                delta[0] = offsetLeft - margin;\n            }\n            else if (offsetRight < 0) {\n                // move map to the right\n                delta[0] = Math.abs(offsetRight) + margin;\n            }\n            if (offsetTop < 0) {\n                // move map up\n                delta[1] = offsetTop - margin;\n            }\n            else if (offsetBottom < 0) {\n                // move map down\n                delta[1] = Math.abs(offsetBottom) + margin;\n            }\n            if (delta[0] !== 0 || delta[1] !== 0) {\n                var center = /** @type {import(\"./coordinate.js\").Coordinate} */ (map.getView().getCenter());\n                var centerPx = map.getPixelFromCoordinate(center);\n                var newCenterPx = [\n                    centerPx[0] + delta[0],\n                    centerPx[1] + delta[1]\n                ];\n                map.getView().animate({\n                    center: map.getCoordinateFromPixel(newCenterPx),\n                    duration: this.autoPanAnimation.duration,\n                    easing: this.autoPanAnimation.easing\n                });\n            }\n        }\n    };\n    /**\n     * Get the extent of an element relative to the document\n     * @param {HTMLElement|undefined} element The element.\n     * @param {import(\"./size.js\").Size|undefined} size The size of the element.\n     * @return {import(\"./extent.js\").Extent} The extent.\n     * @protected\n     */\n    Overlay.prototype.getRect = function (element, size) {\n        var box = element.getBoundingClientRect();\n        var offsetX = box.left + window.pageXOffset;\n        var offsetY = box.top + window.pageYOffset;\n        return [\n            offsetX,\n            offsetY,\n            offsetX + size[0],\n            offsetY + size[1]\n        ];\n    };\n    /**\n     * Set the positioning for this overlay.\n     * @param {OverlayPositioning} positioning how the overlay is\n     *     positioned relative to its point on the map.\n     * @observable\n     * @api\n     */\n    Overlay.prototype.setPositioning = function (positioning) {\n        this.set(Property.POSITIONING, positioning);\n    };\n    /**\n     * Modify the visibility of the element.\n     * @param {boolean} visible Element visibility.\n     * @protected\n     */\n    Overlay.prototype.setVisible = function (visible) {\n        if (this.rendered.visible !== visible) {\n            this.element.style.display = visible ? '' : 'none';\n            this.rendered.visible = visible;\n        }\n    };\n    /**\n     * Update pixel position.\n     * @protected\n     */\n    Overlay.prototype.updatePixelPosition = function () {\n        var map = this.getMap();\n        var position = this.getPosition();\n        if (!map || !map.isRendered() || !position) {\n            this.setVisible(false);\n            return;\n        }\n        var pixel = map.getPixelFromCoordinate(position);\n        var mapSize = map.getSize();\n        this.updateRenderedPosition(pixel, mapSize);\n    };\n    /**\n     * @param {import(\"./pixel.js\").Pixel} pixel The pixel location.\n     * @param {import(\"./size.js\").Size|undefined} mapSize The map size.\n     * @protected\n     */\n    Overlay.prototype.updateRenderedPosition = function (pixel, mapSize) {\n        var style = this.element.style;\n        var offset = this.getOffset();\n        var positioning = this.getPositioning();\n        this.setVisible(true);\n        var offsetX = offset[0];\n        var offsetY = offset[1];\n        if (positioning == OverlayPositioning.BOTTOM_RIGHT ||\n            positioning == OverlayPositioning.CENTER_RIGHT ||\n            positioning == OverlayPositioning.TOP_RIGHT) {\n            if (this.rendered.left_ !== '') {\n                this.rendered.left_ = style.left = '';\n            }\n            var right = Math.round(mapSize[0] - pixel[0] - offsetX) + 'px';\n            if (this.rendered.right_ != right) {\n                this.rendered.right_ = style.right = right;\n            }\n        }\n        else {\n            if (this.rendered.right_ !== '') {\n                this.rendered.right_ = style.right = '';\n            }\n            if (positioning == OverlayPositioning.BOTTOM_CENTER ||\n                positioning == OverlayPositioning.CENTER_CENTER ||\n                positioning == OverlayPositioning.TOP_CENTER) {\n                offsetX -= this.element.offsetWidth / 2;\n            }\n            var left = Math.round(pixel[0] + offsetX) + 'px';\n            if (this.rendered.left_ != left) {\n                this.rendered.left_ = style.left = left;\n            }\n        }\n        if (positioning == OverlayPositioning.BOTTOM_LEFT ||\n            positioning == OverlayPositioning.BOTTOM_CENTER ||\n            positioning == OverlayPositioning.BOTTOM_RIGHT) {\n            if (this.rendered.top_ !== '') {\n                this.rendered.top_ = style.top = '';\n            }\n            var bottom = Math.round(mapSize[1] - pixel[1] - offsetY) + 'px';\n            if (this.rendered.bottom_ != bottom) {\n                this.rendered.bottom_ = style.bottom = bottom;\n            }\n        }\n        else {\n            if (this.rendered.bottom_ !== '') {\n                this.rendered.bottom_ = style.bottom = '';\n            }\n            if (positioning == OverlayPositioning.CENTER_LEFT ||\n                positioning == OverlayPositioning.CENTER_CENTER ||\n                positioning == OverlayPositioning.CENTER_RIGHT) {\n                offsetY -= this.element.offsetHeight / 2;\n            }\n            var top_1 = Math.round(pixel[1] + offsetY) + 'px';\n            if (this.rendered.top_ != top_1) {\n                this.rendered.top_ = style.top = top_1;\n            }\n        }\n    };\n    /**\n     * returns the options this Overlay has been created with\n     * @return {Options} overlay options\n     */\n    Overlay.prototype.getOptions = function () {\n        return this.options;\n    };\n    return Overlay;\n}(BaseObject));\nexport default Overlay;\n//# sourceMappingURL=Overlay.js.map","import 'ol/ol.css';\nimport DragAndDrop from 'ol/interaction/DragAndDrop';\nimport Draw from 'ol/interaction/Draw';\nimport GeoJSON from 'ol/format/GeoJSON';\nimport GeometryType from 'ol/geom/GeometryType';\nimport Map from 'ol/Map';\nimport Modify from 'ol/interaction/Modify';\nimport Snap from 'ol/interaction/Snap';\nimport VectorLayer from 'ol/layer/Vector';\nimport VectorSource from 'ol/source/Vector';\nimport View from 'ol/View';\nimport {toStringHDMS} from 'ol/coordinate';\nimport {fromLonLat, toLonLat} from 'ol/proj';\nimport sync from 'ol-hashed';\nimport {Fill, Stroke, Style, Text} from 'ol/style';\nimport Overlay from 'ol/Overlay';\n\n//! [imports]\nimport {getArea} from 'ol/sphere';\nimport colormap from 'colormap';\n//! [imports]\n\n//! [color]\nconst min = 1e8; // the smallest area\nconst max = 2e13; // the biggest area\nconst steps = 50;\nconst ramp = colormap({\n  colormap: 'blackbody',\n  nshades: steps\n});\n\nfunction clamp(value, low, high) {\n  return Math.max(low, Math.min(value, high));\n}\n\nfunction getColor(feature) {\n  if (feature.get('covid_deaths') == 0) {\n      return \"#a9cf54\";\n  } else if (feature.get('covid_deaths') > 0 && feature.get('covid_deaths') <= 10) {\n      return \"#fafa6e\";\n  } else if (feature.get('covid_deaths') > 10 && feature.get('covid_deaths') <= 20) {\n      return \"#fbef60\";\n  } else if (feature.get('covid_deaths') > 20 && feature.get('covid_deaths') <= 50) {\n      return \"#fce552\";\n  } else if (feature.get('covid_deaths') > 50 && feature.get('covid_deaths') <= 80) {\n      return \"#fcda45\";\n  } else if (feature.get('covid_deaths') > 80 && feature.get('covid_deaths') <= 130) {\n      return \"#fdce38\";\n  } else if (feature.get('covid_deaths') > 130 && feature.get('covid_deaths') <= 180) {\n      return \"#fec32b\";\n  } else if (feature.get('covid_deaths') > 180 && feature.get('covid_deaths') <= 250) {\n      return \"#feb71e\";\n  } else if (feature.get('covid_deaths') > 250 && feature.get('covid_deaths') <= 320) {\n    return \"#feac10\";\n  } else if (feature.get('covid_deaths') > 320 && feature.get('covid_deaths') <= 410) {\n    return \"#fe9f00\";\n  } else if (feature.get('covid_deaths') > 410 && feature.get('covid_deaths') <= 500) {\n    return \"#fe9300\";\n  } else if (feature.get('covid_deaths') > 500 && feature.get('covid_deaths') <= 610) {\n    return \"#fe8600\";\n  } else if (feature.get('covid_deaths') > 720 && feature.get('covid_deaths') <= 850) {\n    return \"#fd7800\";\n  } else if (feature.get('covid_deaths') > 850 && feature.get('covid_deaths') <= 980) {\n    return \"#fc6900\";\n  } else if (feature.get('covid_deaths') > 980 && feature.get('covid_deaths') <= 1500) {\n    return \"#fb5a00\";\n  } else if (feature.get('covid_deaths') > 1500 && feature.get('covid_deaths') <= 2000) {\n    return \"#f94805\";\n  } else if (feature.get('covid_deaths') > 2000 && feature.get('covid_deaths') <= 2500) {\n    return \"#f7320f\";\n  } else if (feature.get('covid_deaths') > 2500) {\n      return \"#f40916\";\n  } else {\n      return \"grey\";\n  }\n}\n//! [color]\n\nfunction getCountry(feature) {\n  name =  feature.get('name');\n  return name;\n}\n\nconst map = new Map({\n  target: 'map-container',\n  view: new View({\n    center: [0, 0],\n    zoom: 2\n  })\n});\n\nsync(map);\n\nconst source = new VectorSource();\n\n//! [style]\nconst layer = new VectorLayer({\n  source: source,\n  style: function(feature) {\n    return new Style({\n      fill: new Fill({\n        color: getColor(feature)\n      }),\n      text: new Text({\n        text: getCountry(feature),\n        font: '12px Calibri,sans-serif',\n        fill: new Fill({\n          color: '#000'\n        }),\n      }),\n      stroke: new Stroke({\n        color: 'rgba(255,255,255,0.8)'\n      })\n    });\n  }\n});\n//! [style]\n\n\nmap.addLayer(layer);\n\nmap.addInteraction(new DragAndDrop({\n  source: source,\n  formatConstructors: [GeoJSON]\n}));\n\n\n//! [popup]\nvar element = document.getElementById('popup');\n\nvar popup = new Overlay({\n  element: element,\n  positioning: 'bottom-center',\n  stopEvent: false\n});\nmap.addOverlay(popup);\n\nmap.on('click', function(evt) {\n\n  var feature = map.forEachFeatureAtPixel(evt.pixel,\n  function(feature, layer) {\n    return feature;\n  });\n  if (feature) {\n    console.log(feature)\n    var covid_deaths = feature.get('covid_deaths');\n    var covid_cases = feature.get('covid_cases');\n\n    var element = popup.getElement();\n    var coordinate = evt.coordinate;\n    var hdms = toStringHDMS(toLonLat(coordinate));\n\n    $(element).popover('destroy');\n    popup.setPosition(coordinate);\n    $(element).popover({\n      placement: 'top',\n      animation: false,\n      html: true,\n      content: '<p>Cases</p><code>' + covid_cases + '</code> </br> <p>Deaths</p><code>' + covid_deaths + '</code>'\n    });\n    $(element).popover('show');\n  }\n});\n//! [popup]\n\nconst format = new GeoJSON({featureProjection: 'EPSG:3857'});\n"],"sourceRoot":""}